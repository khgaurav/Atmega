   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	Receive
  12               	Receive:
  13               	.LFB6:
  14               		.file 1 "main.c"
   1:main.c        **** #include <avr/io.h>
   2:main.c        **** #include <util/delay.h>
   3:main.c        **** #define FOSC 1000000// Clock Speed
   4:main.c        **** #define BAUD 9600
   5:main.c        **** #define ubbr_value FOSC/16/BAUD-1
   6:main.c        **** int Receive()
   7:main.c        **** {
  15               		.loc 1 7 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               	.L2:
   8:main.c        **** 	while (! (UCSRA & (1 << RXC)) );
  22               		.loc 1 8 0 discriminator 1
  23 0000 5F9B      		sbis 0xb,7
  24 0002 00C0      		rjmp .L2
   9:main.c        **** 	return UDR;
  25               		.loc 1 9 0
  26 0004 8CB1      		in r24,0xc
  10:main.c        **** }
  27               		.loc 1 10 0
  28 0006 90E0      		ldi r25,0
  29 0008 0895      		ret
  30               		.cfi_endproc
  31               	.LFE6:
  33               	.global	Transmit
  35               	Transmit:
  36               	.LFB7:
  11:main.c        **** 
  12:main.c        **** void Transmit(unsigned char data)
  13:main.c        **** {
  37               		.loc 1 13 0
  38               		.cfi_startproc
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 0 */
  42               	.L__stack_usage = 0
  43               	.LVL0:
  44               	.L6:
  14:main.c        **** 	while (! (UCSRA & (1 << UDRE)) );
  45               		.loc 1 14 0 discriminator 1
  46 000a 5D9B      		sbis 0xb,5
  47 000c 00C0      		rjmp .L6
  15:main.c        **** 	UDR = data;
  48               		.loc 1 15 0
  49 000e 8CB9      		out 0xc,r24
  50 0010 0895      		ret
  51               		.cfi_endproc
  52               	.LFE7:
  54               	.global	map
  56               	map:
  57               	.LFB8:
  16:main.c        **** 
  17:main.c        **** }
  18:main.c        **** long map(long x, long in_min, long in_max, long out_min, long out_max)
  19:main.c        **** {
  58               		.loc 1 19 0
  59               		.cfi_startproc
  60               	.LVL1:
  61 0012 4F92      		push r4
  62               	.LCFI0:
  63               		.cfi_def_cfa_offset 3
  64               		.cfi_offset 4, -2
  65 0014 5F92      		push r5
  66               	.LCFI1:
  67               		.cfi_def_cfa_offset 4
  68               		.cfi_offset 5, -3
  69 0016 6F92      		push r6
  70               	.LCFI2:
  71               		.cfi_def_cfa_offset 5
  72               		.cfi_offset 6, -4
  73 0018 7F92      		push r7
  74               	.LCFI3:
  75               		.cfi_def_cfa_offset 6
  76               		.cfi_offset 7, -5
  77 001a AF92      		push r10
  78               	.LCFI4:
  79               		.cfi_def_cfa_offset 7
  80               		.cfi_offset 10, -6
  81 001c BF92      		push r11
  82               	.LCFI5:
  83               		.cfi_def_cfa_offset 8
  84               		.cfi_offset 11, -7
  85 001e CF92      		push r12
  86               	.LCFI6:
  87               		.cfi_def_cfa_offset 9
  88               		.cfi_offset 12, -8
  89 0020 DF92      		push r13
  90               	.LCFI7:
  91               		.cfi_def_cfa_offset 10
  92               		.cfi_offset 13, -9
  93 0022 EF92      		push r14
  94               	.LCFI8:
  95               		.cfi_def_cfa_offset 11
  96               		.cfi_offset 14, -10
  97 0024 FF92      		push r15
  98               	.LCFI9:
  99               		.cfi_def_cfa_offset 12
 100               		.cfi_offset 15, -11
 101 0026 0F93      		push r16
 102               	.LCFI10:
 103               		.cfi_def_cfa_offset 13
 104               		.cfi_offset 16, -12
 105 0028 1F93      		push r17
 106               	.LCFI11:
 107               		.cfi_def_cfa_offset 14
 108               		.cfi_offset 17, -13
 109 002a CF93      		push r28
 110               	.LCFI12:
 111               		.cfi_def_cfa_offset 15
 112               		.cfi_offset 28, -14
 113 002c DF93      		push r29
 114               	.LCFI13:
 115               		.cfi_def_cfa_offset 16
 116               		.cfi_offset 29, -15
 117 002e CDB7      		in r28,__SP_L__
 118 0030 DEB7      		in r29,__SP_H__
 119               	.LCFI14:
 120               		.cfi_def_cfa_register 28
 121               	/* prologue: function */
 122               	/* frame size = 0 */
 123               	/* stack size = 14 */
 124               	.L__stack_usage = 14
 125 0032 2901      		movw r4,r18
 126 0034 3A01      		movw r6,r20
  20:main.c        **** 	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 127               		.loc 1 20 0
 128 0036 9B01      		movw r18,r22
 129 0038 AC01      		movw r20,r24
 130               	.LVL2:
 131 003a 2419      		sub r18,r4
 132 003c 3509      		sbc r19,r5
 133 003e 4609      		sbc r20,r6
 134 0040 5709      		sbc r21,r7
 135 0042 8989      		ldd r24,Y+17
 136 0044 9A89      		ldd r25,Y+18
 137 0046 AB89      		ldd r26,Y+19
 138 0048 BC89      		ldd r27,Y+20
 139 004a BC01      		movw r22,r24
 140 004c CD01      		movw r24,r26
 141               	.LVL3:
 142 004e 6A19      		sub r22,r10
 143 0050 7B09      		sbc r23,r11
 144 0052 8C09      		sbc r24,r12
 145 0054 9D09      		sbc r25,r13
 146 0056 0E94 0000 		call __mulsi3
 147 005a A801      		movw r20,r16
 148 005c 9701      		movw r18,r14
 149 005e 2419      		sub r18,r4
 150 0060 3509      		sbc r19,r5
 151 0062 4609      		sbc r20,r6
 152 0064 5709      		sbc r21,r7
 153 0066 0E94 0000 		call __divmodsi4
 154 006a CA01      		movw r24,r20
 155 006c B901      		movw r22,r18
 156 006e 6A0D      		add r22,r10
 157 0070 7B1D      		adc r23,r11
 158 0072 8C1D      		adc r24,r12
 159 0074 9D1D      		adc r25,r13
 160               	/* epilogue start */
  21:main.c        **** }
 161               		.loc 1 21 0
 162 0076 DF91      		pop r29
 163 0078 CF91      		pop r28
 164 007a 1F91      		pop r17
 165 007c 0F91      		pop r16
 166 007e FF90      		pop r15
 167 0080 EF90      		pop r14
 168               	.LVL4:
 169 0082 DF90      		pop r13
 170 0084 CF90      		pop r12
 171 0086 BF90      		pop r11
 172 0088 AF90      		pop r10
 173               	.LVL5:
 174 008a 7F90      		pop r7
 175 008c 6F90      		pop r6
 176 008e 5F90      		pop r5
 177 0090 4F90      		pop r4
 178               	.LVL6:
 179 0092 0895      		ret
 180               		.cfi_endproc
 181               	.LFE8:
 183               	.global	__floatsisf
 184               	.global	__mulsf3
 185               	.global	__addsf3
 186               	.global	__fixsfsi
 187               		.section	.text.startup,"ax",@progbits
 188               	.global	main
 190               	main:
 191               	.LFB9:
  22:main.c        **** 
  23:main.c        **** int main(void)
  24:main.c        **** {
 192               		.loc 1 24 0
 193               		.cfi_startproc
 194 0000 CF93      		push r28
 195               	.LCFI15:
 196               		.cfi_def_cfa_offset 3
 197               		.cfi_offset 28, -2
 198 0002 DF93      		push r29
 199               	.LCFI16:
 200               		.cfi_def_cfa_offset 4
 201               		.cfi_offset 29, -3
 202 0004 CDB7      		in r28,__SP_L__
 203 0006 DEB7      		in r29,__SP_H__
 204               	.LCFI17:
 205               		.cfi_def_cfa_register 28
 206 0008 2897      		sbiw r28,8
 207               	.LCFI18:
 208               		.cfi_def_cfa_offset 12
 209 000a 0FB6      		in __tmp_reg__,__SREG__
 210 000c F894      		cli
 211 000e DEBF      		out __SP_H__,r29
 212 0010 0FBE      		out __SREG__,__tmp_reg__
 213 0012 CDBF      		out __SP_L__,r28
 214               	/* prologue: function */
 215               	/* frame size = 8 */
 216               	/* stack size = 10 */
 217               	.L__stack_usage = 10
  25:main.c        ****   TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 218               		.loc 1 25 0
 219 0014 83B7      		in r24,0x33
 220 0016 8966      		ori r24,lo8(105)
 221 0018 83BF      		out 0x33,r24
  26:main.c        **** DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 222               		.loc 1 26 0
 223 001a 87B3      		in r24,0x17
 224 001c 8B60      		ori r24,lo8(11)
 225 001e 87BB      		out 0x17,r24
  27:main.c        **** TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 226               		.loc 1 27 0
 227 0020 85B5      		in r24,0x25
 228 0022 8966      		ori r24,lo8(105)
 229 0024 85BD      		out 0x25,r24
  28:main.c        **** DDRD |= 1<< PB7 | 1<< PB2;
 230               		.loc 1 28 0
 231 0026 81B3      		in r24,0x11
 232 0028 8468      		ori r24,lo8(-124)
 233 002a 81BB      		out 0x11,r24
  29:main.c        **** PORTB &= ~(1<< PINB0);
 234               		.loc 1 29 0
 235 002c C098      		cbi 0x18,0
  30:main.c        **** PORTD &= ~(1<< PIND2);
 236               		.loc 1 30 0
 237 002e 9298      		cbi 0x12,2
  31:main.c        ****  UCSRA = (1 << U2X);
 238               		.loc 1 31 0
 239 0030 82E0      		ldi r24,lo8(2)
 240 0032 8BB9      		out 0xb,r24
  32:main.c        ****   UBRRH = (unsigned char) (ubbr_value >> 8);
 241               		.loc 1 32 0
 242 0034 10BC      		out 0x20,__zero_reg__
  33:main.c        ****   UBRRL = (unsigned char) ubbr_value;
 243               		.loc 1 33 0
 244 0036 8FEF      		ldi r24,lo8(-1)
 245 0038 89B9      		out 0x9,r24
  34:main.c        ****   UCSRB = (1 << RXEN);
 246               		.loc 1 34 0
 247 003a 80E1      		ldi r24,lo8(16)
 248 003c 8AB9      		out 0xa,r24
  35:main.c        ****   UCSRC = (1 << URSEL) | (3 << UCSZ0);
 249               		.loc 1 35 0
 250 003e 86E8      		ldi r24,lo8(-122)
 251 0040 80BD      		out 0x20,r24
 252               	.LBB12:
  36:main.c        **** 	int gear[1024];
  37:main.c        **** 
  38:main.c        **** 		int x,y,g;
  39:main.c        **** 	while (1)
  40:main.c        **** 	{
  41:main.c        **** 
  42:main.c        **** 
  43:main.c        **** 		if(Receive()==0x11)
  44:main.c        **** 		{
  45:main.c        **** 				int x1= Receive();
  46:main.c        ****     		x = (Receive())<<8 | x1;
  47:main.c        **** 
  48:main.c        **** 		}
  49:main.c        **** 		else
  50:main.c        **** 		{
  51:main.c        **** 			OCR0=0;
  52:main.c        **** 			OCR2=0;
  53:main.c        **** 			PORTD&=~1<<PD2;
  54:main.c        **** 			PORTB&=~(1<<PB0);
  55:main.c        **** 			continue;
  56:main.c        **** 		}
  57:main.c        **** 		if(Receive()==0x21)
  58:main.c        **** 		{
  59:main.c        **** 				int y1=Receive();
  60:main.c        ****     		y=(Receive())<<8 | y1;
  61:main.c        **** 		}
  62:main.c        **** 		else
  63:main.c        **** 		{
  64:main.c        **** 			OCR0=0;
  65:main.c        **** 			OCR2=0;
  66:main.c        **** 			PORTD&=~1<<PD2;
  67:main.c        **** 			PORTB&=~(1<<PB0);
  68:main.c        **** 			continue;
  69:main.c        **** 		}
  70:main.c        **** 		if(Receive()==0x31)
  71:main.c        **** 		{
  72:main.c        **** 				int y1=Receive();
  73:main.c        ****     		g=(Receive())<<8 | y1;
  74:main.c        **** 		}
  75:main.c        **** 		int gear=map(g,0,1023,0,9);
  76:main.c        **** 
  77:main.c        **** 		int x2=x-512;
  78:main.c        ****     int y2=512-y;
  79:main.c        **** 		//if(y2/x2>=12.8&&y2/x2<=-12.8)
  80:main.c        **** 		//x2=0;
  81:main.c        **** 		//if(y2/x2<=0.0390625&&y2/x2>=-0.0390625)
  82:main.c        **** 		//y2=0;
  83:main.c        ****     int x3 = x2;
  84:main.c        ****     int y3 = y2;
  85:main.c        ****     int x4= (x3*0.707)+(y3*0.707);
 253               		.loc 1 85 0
 254 0042 00E0      		ldi r16,0
 255 0044 12E0      		ldi r17,lo8(2)
 256               	.L11:
 257               	.LVL7:
  43:main.c        **** 		{
 258               		.loc 1 43 0
 259 0046 0E94 0000 		call Receive
 260               	.LVL8:
 261 004a 4197      		sbiw r24,17
 262 004c 01F4      		brne .L21
 263               	.LBB13:
  45:main.c        ****     		x = (Receive())<<8 | x1;
 264               		.loc 1 45 0
 265 004e 0E94 0000 		call Receive
 266               	.LVL9:
 267 0052 6C01      		movw r12,r24
 268               	.LVL10:
  46:main.c        **** 
 269               		.loc 1 46 0
 270 0054 0E94 0000 		call Receive
 271               	.LVL11:
 272 0058 8F83      		std Y+7,r24
 273               	.LVL12:
 274               	.LBE13:
  57:main.c        **** 		{
 275               		.loc 1 57 0
 276 005a 0E94 0000 		call Receive
 277               	.LVL13:
 278 005e 8197      		sbiw r24,33
 279 0060 01F4      		brne .L21
 280               	.LBB14:
  59:main.c        ****     		y=(Receive())<<8 | y1;
 281               		.loc 1 59 0
 282 0062 0E94 0000 		call Receive
 283               	.LVL14:
 284 0066 7C01      		movw r14,r24
 285               	.LVL15:
  60:main.c        **** 		}
 286               		.loc 1 60 0
 287 0068 0E94 0000 		call Receive
 288               	.LVL16:
 289 006c 8A83      		std Y+2,r24
 290 006e 1982      		std Y+1,__zero_reg__
 291 0070 2981      		ldd r18,Y+1
 292 0072 3A81      		ldd r19,Y+2
 293 0074 E22A      		or r14,r18
 294 0076 F32A      		or r15,r19
 295               	.LVL17:
 296               	.LBE14:
  70:main.c        **** 		{
 297               		.loc 1 70 0
 298 0078 0E94 0000 		call Receive
 299               	.LVL18:
 300 007c C197      		sbiw r24,49
 301 007e 01F4      		brne .L17
 302               	.LBB15:
  72:main.c        ****     		g=(Receive())<<8 | y1;
 303               		.loc 1 72 0
 304 0080 0E94 0000 		call Receive
 305               	.LVL19:
 306 0084 5C01      		movw r10,r24
 307               	.LVL20:
  73:main.c        **** 		}
 308               		.loc 1 73 0
 309 0086 0E94 0000 		call Receive
 310               	.LVL21:
 311 008a 8C83      		std Y+4,r24
 312 008c 1B82      		std Y+3,__zero_reg__
 313 008e 8B81      		ldd r24,Y+3
 314 0090 9C81      		ldd r25,Y+4
 315 0092 8A29      		or r24,r10
 316 0094 9B29      		or r25,r11
 317 0096 9E83      		std Y+6,r25
 318 0098 8D83      		std Y+5,r24
 319               	.LVL22:
 320 009a 00C0      		rjmp .L17
 321               	.LVL23:
 322               	.L21:
 323               	.LBE15:
  64:main.c        **** 			OCR2=0;
 324               		.loc 1 64 0
 325 009c 1CBE      		out 0x3c,__zero_reg__
 326               	.LVL24:
  65:main.c        **** 			PORTD&=~1<<PD2;
 327               		.loc 1 65 0
 328 009e 13BC      		out 0x23,__zero_reg__
  66:main.c        **** 			PORTB&=~(1<<PB0);
 329               		.loc 1 66 0
 330 00a0 82B3      		in r24,0x12
 331 00a2 887F      		andi r24,lo8(-8)
 332 00a4 82BB      		out 0x12,r24
  67:main.c        **** 			continue;
 333               		.loc 1 67 0
 334 00a6 C098      		cbi 0x18,0
  68:main.c        **** 		}
 335               		.loc 1 68 0
 336 00a8 00C0      		rjmp .L11
 337               	.LVL25:
 338               	.L17:
  77:main.c        ****     int y2=512-y;
 339               		.loc 1 77 0
 340 00aa 3F80      		ldd r3,Y+7
 341 00ac 212C      		mov r2,__zero_reg__
 342 00ae C228      		or r12,r2
 343 00b0 D328      		or r13,r3
 344               	.LVL26:
 345 00b2 9601      		movw r18,r12
 346 00b4 3250      		subi r19,2
 347 00b6 3887      		std Y+8,r19
 348 00b8 2F83      		std Y+7,r18
 349               	.LVL27:
 350               		.loc 1 85 0
 351 00ba B801      		movw r22,r16
 352 00bc 6E19      		sub r22,r14
 353 00be 7F09      		sbc r23,r15
 354 00c0 072E      		mov __tmp_reg__,r23
 355 00c2 000C      		lsl r0
 356 00c4 880B      		sbc r24,r24
 357 00c6 990B      		sbc r25,r25
 358 00c8 0E94 0000 		call __floatsisf
 359               	.LVL28:
 360 00cc 24EF      		ldi r18,lo8(-12)
 361 00ce 3DEF      		ldi r19,lo8(-3)
 362 00d0 44E3      		ldi r20,lo8(52)
 363 00d2 5FE3      		ldi r21,lo8(63)
 364 00d4 0E94 0000 		call __mulsf3
 365               	.LVL29:
 366 00d8 2B01      		movw r4,r22
 367 00da 3C01      		movw r6,r24
 368               	.LVL30:
  86:main.c        ****     int y4=(-x3*0.707)+(y3*0.707);
  87:main.c        ****     int x5=map(x4,-723,723,-255,255)*gear/9;
 369               		.loc 1 87 0
 370 00dc 29E0      		ldi r18,lo8(9)
 371 00de 30E0      		ldi r19,0
 372 00e0 AD81      		ldd r26,Y+5
 373 00e2 BE81      		ldd r27,Y+6
 374 00e4 0E94 0000 		call __usmulhisi3
 375 00e8 2FEF      		ldi r18,lo8(-1)
 376 00ea 33E0      		ldi r19,lo8(3)
 377 00ec 40E0      		ldi r20,0
 378 00ee 50E0      		ldi r21,0
 379 00f0 0E94 0000 		call __divmodsi4
 380 00f4 4901      		movw r8,r18
 381 00f6 330F      		lsl r19
 382 00f8 AA08      		sbc r10,r10
 383 00fa BB08      		sbc r11,r11
 384 00fc 2F81      		ldd r18,Y+7
 385 00fe 3885      		ldd r19,Y+8
 386 0100 B901      		movw r22,r18
 387 0102 330F      		lsl r19
 388 0104 880B      		sbc r24,r24
 389 0106 990B      		sbc r25,r25
 390 0108 0E94 0000 		call __floatsisf
 391               	.LVL31:
 392 010c 24EF      		ldi r18,lo8(-12)
 393 010e 3DEF      		ldi r19,lo8(-3)
 394 0110 44E3      		ldi r20,lo8(52)
 395 0112 5FE3      		ldi r21,lo8(63)
 396 0114 0E94 0000 		call __mulsf3
 397               	.LVL32:
 398 0118 A301      		movw r20,r6
 399 011a 9201      		movw r18,r4
 400 011c 0E94 0000 		call __addsf3
 401               	.LVL33:
 402 0120 0E94 0000 		call __fixsfsi
 403               	.LVL34:
 404 0124 CB01      		movw r24,r22
 405 0126 770F      		lsl r23
 406 0128 AA0B      		sbc r26,r26
 407 012a BB0B      		sbc r27,r27
 408 012c 9C01      		movw r18,r24
 409 012e AD01      		movw r20,r26
 410 0130 2D52      		subi r18,45
 411 0132 3D4F      		sbci r19,-3
 412 0134 4F4F      		sbci r20,-1
 413 0136 5F4F      		sbci r21,-1
 414 0138 AEEF      		ldi r26,lo8(-2)
 415 013a B1E0      		ldi r27,lo8(1)
 416 013c 0E94 0000 		call __muluhisi3
 417 0140 26EA      		ldi r18,lo8(-90)
 418 0142 35E0      		ldi r19,lo8(5)
 419 0144 40E0      		ldi r20,0
 420 0146 50E0      		ldi r21,0
 421 0148 0E94 0000 		call __divmodsi4
 422 014c 2F5F      		subi r18,-1
 423 014e 3109      		sbc r19,__zero_reg__
 424 0150 4109      		sbc r20,__zero_reg__
 425 0152 5109      		sbc r21,__zero_reg__
 426 0154 C501      		movw r24,r10
 427 0156 B401      		movw r22,r8
 428 0158 0E94 0000 		call __mulsi3
 429 015c 29E0      		ldi r18,lo8(9)
 430 015e 30E0      		ldi r19,0
 431 0160 40E0      		ldi r20,0
 432 0162 50E0      		ldi r21,0
 433 0164 0E94 0000 		call __divmodsi4
 434 0168 6901      		movw r12,r18
 435 016a 7A01      		movw r14,r20
 436               	.LVL35:
  88:main.c        ****     int y5=map(y4,-723,723,-255,255)*gear/9;
 437               		.loc 1 88 0
 438 016c 8F81      		ldd r24,Y+7
 439 016e 9885      		ldd r25,Y+8
 440 0170 9195      		neg r25
 441 0172 8195      		neg r24
 442 0174 9109      		sbc r25,__zero_reg__
 443               	.LVL36:
 444 0176 9887      		std Y+8,r25
 445 0178 8F83      		std Y+7,r24
 446               	.LVL37:
 447 017a BC01      		movw r22,r24
 448 017c 990F      		lsl r25
 449 017e 880B      		sbc r24,r24
 450 0180 990B      		sbc r25,r25
 451 0182 0E94 0000 		call __floatsisf
 452               	.LVL38:
 453 0186 24EF      		ldi r18,lo8(-12)
 454 0188 3DEF      		ldi r19,lo8(-3)
 455 018a 44E3      		ldi r20,lo8(52)
 456 018c 5FE3      		ldi r21,lo8(63)
 457 018e 0E94 0000 		call __mulsf3
 458               	.LVL39:
 459 0192 A301      		movw r20,r6
 460 0194 9201      		movw r18,r4
 461 0196 0E94 0000 		call __addsf3
 462               	.LVL40:
 463 019a 0E94 0000 		call __fixsfsi
 464               	.LVL41:
 465 019e CB01      		movw r24,r22
 466 01a0 770F      		lsl r23
 467 01a2 AA0B      		sbc r26,r26
 468 01a4 BB0B      		sbc r27,r27
 469 01a6 9C01      		movw r18,r24
 470 01a8 AD01      		movw r20,r26
 471 01aa 2D52      		subi r18,45
 472 01ac 3D4F      		sbci r19,-3
 473 01ae 4F4F      		sbci r20,-1
 474 01b0 5F4F      		sbci r21,-1
 475 01b2 AEEF      		ldi r26,lo8(-2)
 476 01b4 B1E0      		ldi r27,lo8(1)
 477 01b6 0E94 0000 		call __muluhisi3
 478 01ba 26EA      		ldi r18,lo8(-90)
 479 01bc 35E0      		ldi r19,lo8(5)
 480 01be 40E0      		ldi r20,0
 481 01c0 50E0      		ldi r21,0
 482 01c2 0E94 0000 		call __divmodsi4
 483 01c6 2F5F      		subi r18,-1
 484 01c8 3109      		sbc r19,__zero_reg__
 485 01ca 4109      		sbc r20,__zero_reg__
 486 01cc 5109      		sbc r21,__zero_reg__
 487 01ce C501      		movw r24,r10
 488 01d0 B401      		movw r22,r8
 489 01d2 0E94 0000 		call __mulsi3
 490 01d6 29E0      		ldi r18,lo8(9)
 491 01d8 30E0      		ldi r19,0
 492 01da 40E0      		ldi r20,0
 493 01dc 50E0      		ldi r21,0
 494 01de 0E94 0000 		call __divmodsi4
 495 01e2 C901      		movw r24,r18
 496               	.LVL42:
  89:main.c        **** 
  90:main.c        **** 		/*if(x5<20&&x5>-20)
  91:main.c        **** 		x5=0;
  92:main.c        **** 
  93:main.c        **** 		if(y5<20&&y5>-20)
  94:main.c        **** 		y5=0;
  95:main.c        **** 		*/
  96:main.c        **** 		if(x5>0)
 497               		.loc 1 96 0
 498 01e4 1C14      		cp __zero_reg__,r12
 499 01e6 1D04      		cpc __zero_reg__,r13
 500 01e8 04F4      		brge .L18
  97:main.c        **** 		{
  98:main.c        **** 			OCR0=x5;
 501               		.loc 1 98 0
 502 01ea CCBE      		out 0x3c,r12
 503               	.LVL43:
  99:main.c        **** 			PORTB|=1<<PB0;
 504               		.loc 1 99 0
 505 01ec C09A      		sbi 0x18,0
 506 01ee 00C0      		rjmp .L19
 507               	.LVL44:
 508               	.L18:
 100:main.c        **** 		}
 101:main.c        **** 		else
 102:main.c        **** 		{
 103:main.c        **** 			OCR0=-x5;
 509               		.loc 1 103 0
 510 01f0 C194      		neg r12
 511               	.LVL45:
 512 01f2 CCBE      		out 0x3c,r12
 513               	.LVL46:
 104:main.c        **** 			PORTB&=~(1<<PB0);
 514               		.loc 1 104 0
 515 01f4 C098      		cbi 0x18,0
 516               	.L19:
 105:main.c        **** 		}
 106:main.c        **** 		if(y5>0)
 517               		.loc 1 106 0
 518 01f6 1816      		cp __zero_reg__,r24
 519 01f8 1906      		cpc __zero_reg__,r25
 520 01fa 04F4      		brge .L20
 107:main.c        **** 		{
 108:main.c        **** 		OCR2=y5;
 521               		.loc 1 108 0
 522 01fc 23BD      		out 0x23,r18
 109:main.c        **** 		PORTD|=1<<PD2;
 523               		.loc 1 109 0
 524 01fe 929A      		sbi 0x12,2
 525 0200 00C0      		rjmp .L11
 526               	.L20:
 110:main.c        **** 		}
 111:main.c        **** 		else
 112:main.c        **** 		{
 113:main.c        **** 			OCR2=-y5;
 527               		.loc 1 113 0
 528 0202 2195      		neg r18
 529               	.LVL47:
 530 0204 23BD      		out 0x23,r18
 114:main.c        **** 			PORTD&=~1<<PD2;
 531               		.loc 1 114 0
 532 0206 82B3      		in r24,0x12
 533               	.LVL48:
 534 0208 887F      		andi r24,lo8(-8)
 535 020a 82BB      		out 0x12,r24
 536 020c 00C0      		rjmp .L11
 537               	.LBE12:
 538               		.cfi_endproc
 539               	.LFE9:
 541               		.text
 542               	.Letext0:
 543               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccj96uEV.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccj96uEV.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccj96uEV.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccj96uEV.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccj96uEV.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccj96uEV.s:12     .text:0000000000000000 Receive
     /tmp/ccj96uEV.s:35     .text:000000000000000a Transmit
     /tmp/ccj96uEV.s:56     .text:0000000000000012 map
     /tmp/ccj96uEV.s:190    .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
__mulsi3
__divmodsi4
__floatsisf
__mulsf3
__addsf3
__fixsfsi
__usmulhisi3
__muluhisi3
