   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	Receive
  12               	Receive:
  13               	.LFB6:
  14               		.file 1 "main.c"
   1:main.c        **** #include <avr/io.h>
   2:main.c        **** #include <util/delay.h>
   3:main.c        **** #define FOSC 1000000// Clock Speed
   4:main.c        **** #define BAUD 9600
   5:main.c        **** #define ubbr_value FOSC/16/BAUD-1
   6:main.c        **** int Receive()
   7:main.c        **** {
  15               		.loc 1 7 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               	.L2:
   8:main.c        **** 	while (! (UCSRA & (1 << RXC)) );
  22               		.loc 1 8 0 discriminator 1
  23 0000 5F9B      		sbis 0xb,7
  24 0002 00C0      		rjmp .L2
   9:main.c        **** 	return UDR;
  25               		.loc 1 9 0
  26 0004 8CB1      		in r24,0xc
  10:main.c        **** }
  27               		.loc 1 10 0
  28 0006 90E0      		ldi r25,0
  29 0008 0895      		ret
  30               		.cfi_endproc
  31               	.LFE6:
  33               	.global	Transmit
  35               	Transmit:
  36               	.LFB7:
  11:main.c        **** 
  12:main.c        **** void Transmit(unsigned char data)
  13:main.c        **** {
  37               		.loc 1 13 0
  38               		.cfi_startproc
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 0 */
  42               	.L__stack_usage = 0
  43               	.LVL0:
  44               	.L6:
  14:main.c        **** 	while (! (UCSRA & (1 << UDRE)) );
  45               		.loc 1 14 0 discriminator 1
  46 000a 5D9B      		sbis 0xb,5
  47 000c 00C0      		rjmp .L6
  15:main.c        **** 	UDR = data;
  48               		.loc 1 15 0
  49 000e 8CB9      		out 0xc,r24
  50 0010 0895      		ret
  51               		.cfi_endproc
  52               	.LFE7:
  54               	.global	map
  56               	map:
  57               	.LFB8:
  16:main.c        **** 
  17:main.c        **** }
  18:main.c        **** long map(long x, long in_min, long in_max, long out_min, long out_max)
  19:main.c        **** {
  58               		.loc 1 19 0
  59               		.cfi_startproc
  60               	.LVL1:
  61 0012 4F92      		push r4
  62               	.LCFI0:
  63               		.cfi_def_cfa_offset 3
  64               		.cfi_offset 4, -2
  65 0014 5F92      		push r5
  66               	.LCFI1:
  67               		.cfi_def_cfa_offset 4
  68               		.cfi_offset 5, -3
  69 0016 6F92      		push r6
  70               	.LCFI2:
  71               		.cfi_def_cfa_offset 5
  72               		.cfi_offset 6, -4
  73 0018 7F92      		push r7
  74               	.LCFI3:
  75               		.cfi_def_cfa_offset 6
  76               		.cfi_offset 7, -5
  77 001a AF92      		push r10
  78               	.LCFI4:
  79               		.cfi_def_cfa_offset 7
  80               		.cfi_offset 10, -6
  81 001c BF92      		push r11
  82               	.LCFI5:
  83               		.cfi_def_cfa_offset 8
  84               		.cfi_offset 11, -7
  85 001e CF92      		push r12
  86               	.LCFI6:
  87               		.cfi_def_cfa_offset 9
  88               		.cfi_offset 12, -8
  89 0020 DF92      		push r13
  90               	.LCFI7:
  91               		.cfi_def_cfa_offset 10
  92               		.cfi_offset 13, -9
  93 0022 EF92      		push r14
  94               	.LCFI8:
  95               		.cfi_def_cfa_offset 11
  96               		.cfi_offset 14, -10
  97 0024 FF92      		push r15
  98               	.LCFI9:
  99               		.cfi_def_cfa_offset 12
 100               		.cfi_offset 15, -11
 101 0026 0F93      		push r16
 102               	.LCFI10:
 103               		.cfi_def_cfa_offset 13
 104               		.cfi_offset 16, -12
 105 0028 1F93      		push r17
 106               	.LCFI11:
 107               		.cfi_def_cfa_offset 14
 108               		.cfi_offset 17, -13
 109 002a CF93      		push r28
 110               	.LCFI12:
 111               		.cfi_def_cfa_offset 15
 112               		.cfi_offset 28, -14
 113 002c DF93      		push r29
 114               	.LCFI13:
 115               		.cfi_def_cfa_offset 16
 116               		.cfi_offset 29, -15
 117 002e CDB7      		in r28,__SP_L__
 118 0030 DEB7      		in r29,__SP_H__
 119               	.LCFI14:
 120               		.cfi_def_cfa_register 28
 121               	/* prologue: function */
 122               	/* frame size = 0 */
 123               	/* stack size = 14 */
 124               	.L__stack_usage = 14
 125 0032 2901      		movw r4,r18
 126 0034 3A01      		movw r6,r20
  20:main.c        **** 	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 127               		.loc 1 20 0
 128 0036 9B01      		movw r18,r22
 129 0038 AC01      		movw r20,r24
 130               	.LVL2:
 131 003a 2419      		sub r18,r4
 132 003c 3509      		sbc r19,r5
 133 003e 4609      		sbc r20,r6
 134 0040 5709      		sbc r21,r7
 135 0042 8989      		ldd r24,Y+17
 136 0044 9A89      		ldd r25,Y+18
 137 0046 AB89      		ldd r26,Y+19
 138 0048 BC89      		ldd r27,Y+20
 139 004a BC01      		movw r22,r24
 140 004c CD01      		movw r24,r26
 141               	.LVL3:
 142 004e 6A19      		sub r22,r10
 143 0050 7B09      		sbc r23,r11
 144 0052 8C09      		sbc r24,r12
 145 0054 9D09      		sbc r25,r13
 146 0056 0E94 0000 		call __mulsi3
 147 005a A801      		movw r20,r16
 148 005c 9701      		movw r18,r14
 149 005e 2419      		sub r18,r4
 150 0060 3509      		sbc r19,r5
 151 0062 4609      		sbc r20,r6
 152 0064 5709      		sbc r21,r7
 153 0066 0E94 0000 		call __divmodsi4
 154 006a CA01      		movw r24,r20
 155 006c B901      		movw r22,r18
 156 006e 6A0D      		add r22,r10
 157 0070 7B1D      		adc r23,r11
 158 0072 8C1D      		adc r24,r12
 159 0074 9D1D      		adc r25,r13
 160               	/* epilogue start */
  21:main.c        **** }
 161               		.loc 1 21 0
 162 0076 DF91      		pop r29
 163 0078 CF91      		pop r28
 164 007a 1F91      		pop r17
 165 007c 0F91      		pop r16
 166 007e FF90      		pop r15
 167 0080 EF90      		pop r14
 168               	.LVL4:
 169 0082 DF90      		pop r13
 170 0084 CF90      		pop r12
 171 0086 BF90      		pop r11
 172 0088 AF90      		pop r10
 173               	.LVL5:
 174 008a 7F90      		pop r7
 175 008c 6F90      		pop r6
 176 008e 5F90      		pop r5
 177 0090 4F90      		pop r4
 178               	.LVL6:
 179 0092 0895      		ret
 180               		.cfi_endproc
 181               	.LFE8:
 183               	.global	__floatsisf
 184               	.global	__mulsf3
 185               	.global	__fixsfsi
 186               	.global	__addsf3
 187               	.global	__ltsf2
 188               		.section	.text.startup,"ax",@progbits
 189               	.global	main
 191               	main:
 192               	.LFB9:
  22:main.c        **** 
  23:main.c        **** int main(void)
  24:main.c        **** {
 193               		.loc 1 24 0
 194               		.cfi_startproc
 195 0000 CF93      		push r28
 196               	.LCFI15:
 197               		.cfi_def_cfa_offset 3
 198               		.cfi_offset 28, -2
 199 0002 DF93      		push r29
 200               	.LCFI16:
 201               		.cfi_def_cfa_offset 4
 202               		.cfi_offset 29, -3
 203 0004 CDB7      		in r28,__SP_L__
 204 0006 DEB7      		in r29,__SP_H__
 205               	.LCFI17:
 206               		.cfi_def_cfa_register 28
 207 0008 C450      		subi r28,4
 208 000a D840      		sbci r29,8
 209               	.LCFI18:
 210               		.cfi_def_cfa_offset 2056
 211 000c 0FB6      		in __tmp_reg__,__SREG__
 212 000e F894      		cli
 213 0010 DEBF      		out __SP_H__,r29
 214 0012 0FBE      		out __SREG__,__tmp_reg__
 215 0014 CDBF      		out __SP_L__,r28
 216               	/* prologue: function */
 217               	/* frame size = 2052 */
 218               	/* stack size = 2054 */
 219               	.L__stack_usage = 2054
  25:main.c        ****   TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 220               		.loc 1 25 0
 221 0016 83B7      		in r24,0x33
 222 0018 8966      		ori r24,lo8(105)
 223 001a 83BF      		out 0x33,r24
  26:main.c        **** DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 224               		.loc 1 26 0
 225 001c 87B3      		in r24,0x17
 226 001e 8B60      		ori r24,lo8(11)
 227 0020 87BB      		out 0x17,r24
  27:main.c        **** TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 228               		.loc 1 27 0
 229 0022 85B5      		in r24,0x25
 230 0024 8966      		ori r24,lo8(105)
 231 0026 85BD      		out 0x25,r24
  28:main.c        **** DDRD |= 1<< PB7 | 1<< PB2;
 232               		.loc 1 28 0
 233 0028 81B3      		in r24,0x11
 234 002a 8468      		ori r24,lo8(-124)
 235 002c 81BB      		out 0x11,r24
  29:main.c        **** PORTB &= ~(1<< PINB0);
 236               		.loc 1 29 0
 237 002e C098      		cbi 0x18,0
  30:main.c        **** PORTD &= ~(1<< PIND2);
 238               		.loc 1 30 0
 239 0030 9298      		cbi 0x12,2
  31:main.c        ****  UCSRA = (1 << U2X);
 240               		.loc 1 31 0
 241 0032 82E0      		ldi r24,lo8(2)
 242 0034 8BB9      		out 0xb,r24
  32:main.c        ****   UBRRH = (unsigned char) (ubbr_value >> 8);
 243               		.loc 1 32 0
 244 0036 10BC      		out 0x20,__zero_reg__
  33:main.c        ****   UBRRL = (unsigned char) ubbr_value;
 245               		.loc 1 33 0
 246 0038 8FEF      		ldi r24,lo8(-1)
 247 003a 89B9      		out 0x9,r24
  34:main.c        ****   UCSRB = (1 << RXEN);
 248               		.loc 1 34 0
 249 003c 80E1      		ldi r24,lo8(16)
 250 003e 8AB9      		out 0xa,r24
  35:main.c        ****   UCSRC = (1 << URSEL) | (3 << UCSZ0);
 251               		.loc 1 35 0
 252 0040 86E8      		ldi r24,lo8(-122)
 253 0042 80BD      		out 0x20,r24
 254               	.LVL7:
 255               	.LBB12:
  36:main.c        **** 	int gear[1024];
  37:main.c        **** 	for(int i=0;i<10;i++)
 256               		.loc 1 37 0
 257 0044 E12C      		mov r14,__zero_reg__
 258 0046 F12C      		mov r15,__zero_reg__
 259               	.LVL8:
 260               	.L13:
 261               	.LBB13:
  38:main.c        **** 		for(int j=i*102.4;j<i*102.4+102.4;j++)
 262               		.loc 1 38 0
 263 0048 B701      		movw r22,r14
 264 004a 0F2C      		mov __tmp_reg__,r15
 265 004c 000C      		lsl r0
 266 004e 880B      		sbc r24,r24
 267 0050 990B      		sbc r25,r25
 268 0052 0E94 0000 		call __floatsisf
 269               	.LVL9:
 270 0056 2DEC      		ldi r18,lo8(-51)
 271 0058 3CEC      		ldi r19,lo8(-52)
 272 005a 4CEC      		ldi r20,lo8(-52)
 273 005c 52E4      		ldi r21,lo8(66)
 274 005e 0E94 0000 		call __mulsf3
 275               	.LVL10:
 276 0062 4B01      		movw r8,r22
 277 0064 5C01      		movw r10,r24
 278 0066 0E94 0000 		call __fixsfsi
 279               	.LVL11:
 280 006a 6B01      		movw r12,r22
 281               	.LVL12:
 282 006c 660F      		lsl r22
 283 006e 771F      		rol r23
 284               	.LVL13:
 285 0070 01E0      		ldi r16,lo8(1)
 286 0072 10E0      		ldi r17,0
 287 0074 0C0F      		add r16,r28
 288 0076 1D1F      		adc r17,r29
 289 0078 060F      		add r16,r22
 290 007a 171F      		adc r17,r23
 291               	.L11:
 292               	.LVL14:
 293               		.loc 1 38 0 is_stmt 0 discriminator 1
 294 007c B601      		movw r22,r12
 295 007e 0D2C      		mov __tmp_reg__,r13
 296 0080 000C      		lsl r0
 297 0082 880B      		sbc r24,r24
 298 0084 990B      		sbc r25,r25
 299 0086 0E94 0000 		call __floatsisf
 300               	.LVL15:
 301 008a 2B01      		movw r4,r22
 302 008c 3C01      		movw r6,r24
 303 008e 2DEC      		ldi r18,lo8(-51)
 304 0090 3CEC      		ldi r19,lo8(-52)
 305 0092 4CEC      		ldi r20,lo8(-52)
 306 0094 52E4      		ldi r21,lo8(66)
 307 0096 C501      		movw r24,r10
 308 0098 B401      		movw r22,r8
 309 009a 0E94 0000 		call __addsf3
 310               	.LVL16:
 311 009e 9B01      		movw r18,r22
 312 00a0 AC01      		movw r20,r24
 313 00a2 C301      		movw r24,r6
 314 00a4 B201      		movw r22,r4
 315 00a6 0E94 0000 		call __ltsf2
 316               	.LVL17:
 317 00aa 87FF      		sbrs r24,7
 318 00ac 00C0      		rjmp .L26
  39:main.c        **** 		gear[j]=i;
 319               		.loc 1 39 0 is_stmt 1 discriminator 3
 320 00ae F801      		movw r30,r16
 321 00b0 E192      		st Z+,r14
 322 00b2 F192      		st Z+,r15
 323 00b4 8F01      		movw r16,r30
  38:main.c        **** 		for(int j=i*102.4;j<i*102.4+102.4;j++)
 324               		.loc 1 38 0 discriminator 3
 325 00b6 FFEF      		ldi r31,-1
 326 00b8 CF1A      		sub r12,r31
 327 00ba DF0A      		sbc r13,r31
 328               	.LVL18:
 329 00bc 00C0      		rjmp .L11
 330               	.L26:
 331               	.LBE13:
  37:main.c        **** 		for(int j=i*102.4;j<i*102.4+102.4;j++)
 332               		.loc 1 37 0 discriminator 2
 333 00be 8FEF      		ldi r24,-1
 334 00c0 E81A      		sub r14,r24
 335 00c2 F80A      		sbc r15,r24
 336               	.LVL19:
 337 00c4 9AE0      		ldi r25,10
 338 00c6 E916      		cp r14,r25
 339 00c8 F104      		cpc r15,__zero_reg__
 340 00ca 01F0      		breq .+2
 341 00cc 00C0      		rjmp .L13
 342               	.LVL20:
 343               	.L14:
 344               	.LBE12:
 345               	.LBB14:
  40:main.c        **** 		static int x,y,g;
  41:main.c        **** 	while (1)
  42:main.c        **** 	{
  43:main.c        **** 
  44:main.c        **** 
  45:main.c        **** 		if(Receive()==0x11)
 346               		.loc 1 45 0
 347 00ce 0E94 0000 		call Receive
 348               	.LVL21:
 349 00d2 4197      		sbiw r24,17
 350 00d4 01F0      		breq .+2
 351 00d6 00C0      		rjmp .L25
 352               	.LBB15:
  46:main.c        **** 		{
  47:main.c        **** 				int x1= Receive();
 353               		.loc 1 47 0
 354 00d8 0E94 0000 		call Receive
 355               	.LVL22:
 356 00dc 8C01      		movw r16,r24
 357               	.LVL23:
  48:main.c        ****     		x = (Receive())<<8 | x1;
 358               		.loc 1 48 0
 359 00de 0E94 0000 		call Receive
 360               	.LVL24:
 361 00e2 382E      		mov r3,r24
 362 00e4 212C      		mov r2,__zero_reg__
 363 00e6 0229      		or r16,r2
 364 00e8 1329      		or r17,r3
 365               	.LVL25:
 366 00ea 1093 0000 		sts x.1757+1,r17
 367 00ee 0093 0000 		sts x.1757,r16
 368               	.LBE15:
  49:main.c        **** 
  50:main.c        **** 		}
  51:main.c        **** 		else
  52:main.c        **** 		{
  53:main.c        **** 			OCR0=0;
  54:main.c        **** 			OCR2=0;
  55:main.c        **** 			PORTD&=~1<<PD2;
  56:main.c        **** 			PORTB&=~(1<<PB0);
  57:main.c        **** 			continue;
  58:main.c        **** 		}
  59:main.c        **** 		if(Receive()==0x21)
 369               		.loc 1 59 0
 370 00f2 0E94 0000 		call Receive
 371               	.LVL26:
 372 00f6 8197      		sbiw r24,33
 373 00f8 01F4      		brne .L25
 374               	.LBB16:
  60:main.c        **** 		{
  61:main.c        **** 				int y1=Receive();
 375               		.loc 1 61 0
 376 00fa 0E94 0000 		call Receive
 377               	.LVL27:
 378 00fe 7C01      		movw r14,r24
 379               	.LVL28:
  62:main.c        ****     		y=(Receive())<<8 | y1;
 380               		.loc 1 62 0
 381 0100 0E94 0000 		call Receive
 382               	.LVL29:
 383 0104 CE5F      		subi r28,lo8(-2050)
 384 0106 D74F      		sbci r29,hi8(-2050)
 385 0108 8883      		st Y,r24
 386 010a C250      		subi r28,lo8(2050)
 387 010c D840      		sbci r29,hi8(2050)
 388 010e CF5F      		subi r28,lo8(-2049)
 389 0110 D74F      		sbci r29,hi8(-2049)
 390 0112 1882      		st Y,__zero_reg__
 391 0114 C150      		subi r28,lo8(2049)
 392 0116 D840      		sbci r29,hi8(2049)
 393 0118 CF5F      		subi r28,lo8(-2049)
 394 011a D74F      		sbci r29,hi8(-2049)
 395 011c E881      		ld r30,Y
 396 011e F981      		ldd r31,Y+1
 397 0120 C150      		subi r28,lo8(2049)
 398 0122 D840      		sbci r29,hi8(2049)
 399 0124 EE2A      		or r14,r30
 400 0126 FF2A      		or r15,r31
 401               	.LVL30:
 402 0128 F092 0000 		sts y.1758+1,r15
 403 012c E092 0000 		sts y.1758,r14
 404               	.LBE16:
  63:main.c        **** 		}
  64:main.c        **** 		else
  65:main.c        **** 		{
  66:main.c        **** 			OCR0=0;
  67:main.c        **** 			OCR2=0;
  68:main.c        **** 			PORTD&=~1<<PD2;
  69:main.c        **** 			PORTB&=~(1<<PB0);
  70:main.c        **** 			continue;
  71:main.c        **** 		}
  72:main.c        **** 		if(Receive()==0x31)
 405               		.loc 1 72 0
 406 0130 0E94 0000 		call Receive
 407               	.LVL31:
 408 0134 C197      		sbiw r24,49
 409 0136 01F4      		brne .L20
 410               	.LBB17:
  73:main.c        **** 		{
  74:main.c        **** 				int y1=Receive();
 411               		.loc 1 74 0
 412 0138 0E94 0000 		call Receive
 413               	.LVL32:
 414 013c 6C01      		movw r12,r24
 415               	.LVL33:
  75:main.c        ****     		g=(Receive())<<8 | y1;
 416               		.loc 1 75 0
 417 013e 0E94 0000 		call Receive
 418               	.LVL34:
 419 0142 CC5F      		subi r28,lo8(-2052)
 420 0144 D74F      		sbci r29,hi8(-2052)
 421 0146 8883      		st Y,r24
 422 0148 C450      		subi r28,lo8(2052)
 423 014a D840      		sbci r29,hi8(2052)
 424 014c CD5F      		subi r28,lo8(-2051)
 425 014e D74F      		sbci r29,hi8(-2051)
 426 0150 1882      		st Y,__zero_reg__
 427 0152 C350      		subi r28,lo8(2051)
 428 0154 D840      		sbci r29,hi8(2051)
 429 0156 CD5F      		subi r28,lo8(-2051)
 430 0158 D74F      		sbci r29,hi8(-2051)
 431 015a 8881      		ld r24,Y
 432 015c 9981      		ldd r25,Y+1
 433 015e C350      		subi r28,lo8(2051)
 434 0160 D840      		sbci r29,hi8(2051)
 435 0162 C82A      		or r12,r24
 436 0164 D92A      		or r13,r25
 437               	.LVL35:
 438 0166 D092 0000 		sts g.1759+1,r13
 439 016a C092 0000 		sts g.1759,r12
 440 016e 00C0      		rjmp .L20
 441               	.L25:
 442               	.LBE17:
  66:main.c        **** 			OCR2=0;
 443               		.loc 1 66 0
 444 0170 1CBE      		out 0x3c,__zero_reg__
  67:main.c        **** 			PORTD&=~1<<PD2;
 445               		.loc 1 67 0
 446 0172 13BC      		out 0x23,__zero_reg__
  68:main.c        **** 			PORTB&=~(1<<PB0);
 447               		.loc 1 68 0
 448 0174 82B3      		in r24,0x12
 449 0176 887F      		andi r24,lo8(-8)
 450 0178 82BB      		out 0x12,r24
  69:main.c        **** 			continue;
 451               		.loc 1 69 0
 452 017a C098      		cbi 0x18,0
  70:main.c        **** 		}
 453               		.loc 1 70 0
 454 017c 00C0      		rjmp .L14
 455               	.L20:
  76:main.c        **** 		}
  77:main.c        **** 
  78:main.c        **** 
  79:main.c        **** 		int x2=x-512;
 456               		.loc 1 79 0
 457 017e 1250      		subi r17,2
 458               	.LVL36:
  80:main.c        ****     int y2=512-y;
  81:main.c        **** 		//if(y2/x2>=12.8&&y2/x2<=-12.8)
  82:main.c        **** 		//x2=0;
  83:main.c        **** 		//if(y2/x2<=0.0390625&&y2/x2>=-0.0390625)
  84:main.c        **** 		//y2=0;
  85:main.c        ****     int x3 = x2;
  86:main.c        ****     int y3 = y2;
  87:main.c        ****     int x4= (x3*0.707)+(y3*0.707);
 459               		.loc 1 87 0
 460 0180 60E0      		ldi r22,0
 461 0182 72E0      		ldi r23,lo8(2)
 462 0184 6E19      		sub r22,r14
 463 0186 7F09      		sbc r23,r15
 464               	.LVL37:
 465 0188 072E      		mov __tmp_reg__,r23
 466 018a 000C      		lsl r0
 467 018c 880B      		sbc r24,r24
 468 018e 990B      		sbc r25,r25
 469 0190 0E94 0000 		call __floatsisf
 470               	.LVL38:
 471 0194 24EF      		ldi r18,lo8(-12)
 472 0196 3DEF      		ldi r19,lo8(-3)
 473 0198 44E3      		ldi r20,lo8(52)
 474 019a 5FE3      		ldi r21,lo8(63)
 475 019c 0E94 0000 		call __mulsf3
 476               	.LVL39:
 477 01a0 2B01      		movw r4,r22
 478 01a2 3C01      		movw r6,r24
 479               	.LVL40:
  88:main.c        ****     int y4=(-x3*0.707)+(y3*0.707);
  89:main.c        ****     int x5=map(x4,-723,723,-255,255)*gear[g]/9;
 480               		.loc 1 89 0
 481 01a4 E091 0000 		lds r30,g.1759
 482 01a8 F091 0000 		lds r31,g.1759+1
 483 01ac EE0F      		lsl r30
 484 01ae FF1F      		rol r31
 485 01b0 81E0      		ldi r24,lo8(1)
 486 01b2 90E0      		ldi r25,0
 487 01b4 8C0F      		add r24,r28
 488 01b6 9D1F      		adc r25,r29
 489 01b8 E80F      		add r30,r24
 490 01ba F91F      		adc r31,r25
 491 01bc 8080      		ld r8,Z
 492 01be 9180      		ldd r9,Z+1
 493 01c0 092C      		mov __tmp_reg__,r9
 494 01c2 000C      		lsl r0
 495 01c4 AA08      		sbc r10,r10
 496 01c6 BB08      		sbc r11,r11
 497 01c8 B801      		movw r22,r16
 498 01ca 012E      		mov __tmp_reg__,r17
 499 01cc 000C      		lsl r0
 500 01ce 880B      		sbc r24,r24
 501 01d0 990B      		sbc r25,r25
 502 01d2 0E94 0000 		call __floatsisf
 503               	.LVL41:
 504 01d6 24EF      		ldi r18,lo8(-12)
 505 01d8 3DEF      		ldi r19,lo8(-3)
 506 01da 44E3      		ldi r20,lo8(52)
 507 01dc 5FE3      		ldi r21,lo8(63)
 508 01de 0E94 0000 		call __mulsf3
 509               	.LVL42:
 510 01e2 A301      		movw r20,r6
 511 01e4 9201      		movw r18,r4
 512 01e6 0E94 0000 		call __addsf3
 513               	.LVL43:
 514 01ea 0E94 0000 		call __fixsfsi
 515               	.LVL44:
 516 01ee CB01      		movw r24,r22
 517 01f0 770F      		lsl r23
 518 01f2 AA0B      		sbc r26,r26
 519 01f4 BB0B      		sbc r27,r27
 520 01f6 9C01      		movw r18,r24
 521 01f8 AD01      		movw r20,r26
 522 01fa 2D52      		subi r18,45
 523 01fc 3D4F      		sbci r19,-3
 524 01fe 4F4F      		sbci r20,-1
 525 0200 5F4F      		sbci r21,-1
 526 0202 AEEF      		ldi r26,lo8(-2)
 527 0204 B1E0      		ldi r27,lo8(1)
 528 0206 0E94 0000 		call __muluhisi3
 529 020a 26EA      		ldi r18,lo8(-90)
 530 020c 35E0      		ldi r19,lo8(5)
 531 020e 40E0      		ldi r20,0
 532 0210 50E0      		ldi r21,0
 533 0212 0E94 0000 		call __divmodsi4
 534 0216 2F5F      		subi r18,-1
 535 0218 3109      		sbc r19,__zero_reg__
 536 021a 4109      		sbc r20,__zero_reg__
 537 021c 5109      		sbc r21,__zero_reg__
 538 021e C501      		movw r24,r10
 539 0220 B401      		movw r22,r8
 540 0222 0E94 0000 		call __mulsi3
 541 0226 29E0      		ldi r18,lo8(9)
 542 0228 30E0      		ldi r19,0
 543 022a 40E0      		ldi r20,0
 544 022c 50E0      		ldi r21,0
 545 022e 0E94 0000 		call __divmodsi4
 546 0232 6901      		movw r12,r18
 547 0234 7A01      		movw r14,r20
 548               	.LVL45:
  90:main.c        ****     int y5=map(y4,-723,723,-255,255)*gear[g]/9;
 549               		.loc 1 90 0
 550 0236 6627      		clr r22
 551 0238 7727      		clr r23
 552 023a 601B      		sub r22,r16
 553 023c 710B      		sbc r23,r17
 554               	.LVL46:
 555 023e 072E      		mov __tmp_reg__,r23
 556 0240 000C      		lsl r0
 557 0242 880B      		sbc r24,r24
 558 0244 990B      		sbc r25,r25
 559 0246 0E94 0000 		call __floatsisf
 560               	.LVL47:
 561 024a 24EF      		ldi r18,lo8(-12)
 562 024c 3DEF      		ldi r19,lo8(-3)
 563 024e 44E3      		ldi r20,lo8(52)
 564 0250 5FE3      		ldi r21,lo8(63)
 565 0252 0E94 0000 		call __mulsf3
 566               	.LVL48:
 567 0256 A301      		movw r20,r6
 568 0258 9201      		movw r18,r4
 569 025a 0E94 0000 		call __addsf3
 570               	.LVL49:
 571 025e 0E94 0000 		call __fixsfsi
 572               	.LVL50:
 573 0262 CB01      		movw r24,r22
 574 0264 770F      		lsl r23
 575 0266 AA0B      		sbc r26,r26
 576 0268 BB0B      		sbc r27,r27
 577 026a 9C01      		movw r18,r24
 578 026c AD01      		movw r20,r26
 579 026e 2D52      		subi r18,45
 580 0270 3D4F      		sbci r19,-3
 581 0272 4F4F      		sbci r20,-1
 582 0274 5F4F      		sbci r21,-1
 583 0276 AEEF      		ldi r26,lo8(-2)
 584 0278 B1E0      		ldi r27,lo8(1)
 585 027a 0E94 0000 		call __muluhisi3
 586 027e 26EA      		ldi r18,lo8(-90)
 587 0280 35E0      		ldi r19,lo8(5)
 588 0282 40E0      		ldi r20,0
 589 0284 50E0      		ldi r21,0
 590 0286 0E94 0000 		call __divmodsi4
 591 028a 2F5F      		subi r18,-1
 592 028c 3109      		sbc r19,__zero_reg__
 593 028e 4109      		sbc r20,__zero_reg__
 594 0290 5109      		sbc r21,__zero_reg__
 595 0292 C501      		movw r24,r10
 596 0294 B401      		movw r22,r8
 597 0296 0E94 0000 		call __mulsi3
 598 029a 29E0      		ldi r18,lo8(9)
 599 029c 30E0      		ldi r19,0
 600 029e 40E0      		ldi r20,0
 601 02a0 50E0      		ldi r21,0
 602 02a2 0E94 0000 		call __divmodsi4
 603 02a6 C901      		movw r24,r18
 604               	.LVL51:
  91:main.c        **** 
  92:main.c        **** 		/*if(x5<20&&x5>-20)
  93:main.c        **** 		x5=0;
  94:main.c        **** 
  95:main.c        **** 		if(y5<20&&y5>-20)
  96:main.c        **** 		y5=0;
  97:main.c        **** 		*/
  98:main.c        **** 		if(x5>0)
 605               		.loc 1 98 0
 606 02a8 1C14      		cp __zero_reg__,r12
 607 02aa 1D04      		cpc __zero_reg__,r13
 608 02ac 04F4      		brge .L21
  99:main.c        **** 		{
 100:main.c        **** 			OCR0=x5;
 609               		.loc 1 100 0
 610 02ae CCBE      		out 0x3c,r12
 101:main.c        **** 			PORTB|=1<<PB0;
 611               		.loc 1 101 0
 612 02b0 C09A      		sbi 0x18,0
 613 02b2 00C0      		rjmp .L22
 614               	.L21:
 102:main.c        **** 		}
 103:main.c        **** 		else
 104:main.c        **** 		{
 105:main.c        **** 			OCR0=-x5;
 615               		.loc 1 105 0
 616 02b4 C194      		neg r12
 617               	.LVL52:
 618 02b6 CCBE      		out 0x3c,r12
 106:main.c        **** 			PORTB&=~(1<<PB0);
 619               		.loc 1 106 0
 620 02b8 C098      		cbi 0x18,0
 621               	.L22:
 107:main.c        **** 		}
 108:main.c        **** 		if(y5>0)
 622               		.loc 1 108 0
 623 02ba 1816      		cp __zero_reg__,r24
 624 02bc 1906      		cpc __zero_reg__,r25
 625 02be 04F4      		brge .L23
 109:main.c        **** 		{
 110:main.c        **** 		OCR2=y5;
 626               		.loc 1 110 0
 627 02c0 23BD      		out 0x23,r18
 111:main.c        **** 		PORTD|=1<<PD2;
 628               		.loc 1 111 0
 629 02c2 929A      		sbi 0x12,2
 630 02c4 00C0      		rjmp .L14
 631               	.L23:
 112:main.c        **** 		}
 113:main.c        **** 		else
 114:main.c        **** 		{
 115:main.c        **** 			OCR2=-y5;
 632               		.loc 1 115 0
 633 02c6 2195      		neg r18
 634               	.LVL53:
 635 02c8 23BD      		out 0x23,r18
 116:main.c        **** 			PORTD&=~1<<PD2;
 636               		.loc 1 116 0
 637 02ca 82B3      		in r24,0x12
 638               	.LVL54:
 639 02cc 887F      		andi r24,lo8(-8)
 640 02ce 82BB      		out 0x12,r24
 641 02d0 00C0      		rjmp .L14
 642               	.LBE14:
 643               		.cfi_endproc
 644               	.LFE9:
 646               		.local	g.1759
 647               		.comm	g.1759,2,1
 648               		.local	y.1758
 649               		.comm	y.1758,2,1
 650               		.local	x.1757
 651               		.comm	x.1757,2,1
 652               		.text
 653               	.Letext0:
 654               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccwa0I9v.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccwa0I9v.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccwa0I9v.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccwa0I9v.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccwa0I9v.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccwa0I9v.s:12     .text:0000000000000000 Receive
     /tmp/ccwa0I9v.s:35     .text:000000000000000a Transmit
     /tmp/ccwa0I9v.s:56     .text:0000000000000012 map
     /tmp/ccwa0I9v.s:191    .text.startup:0000000000000000 main
     /tmp/ccwa0I9v.s:649    .bss:0000000000000004 x.1757
     /tmp/ccwa0I9v.s:647    .bss:0000000000000002 y.1758
                             .bss:0000000000000000 g.1759

UNDEFINED SYMBOLS
__mulsi3
__divmodsi4
__floatsisf
__mulsf3
__fixsfsi
__addsf3
__ltsf2
__muluhisi3
__do_clear_bss
