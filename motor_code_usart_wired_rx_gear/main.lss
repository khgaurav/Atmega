
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000084a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000084a  000008de  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  000008de  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  000008de  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000008f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  0000092c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000084c  00000000  00000000  00000954  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000631  00000000  00000000  000011a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000001db  00000000  00000000  000017d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  000019ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000351  00000000  00000000  00001a6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000360  00000000  00000000  00001dbd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  0000211d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a6 36       	cpi	r26, 0x66	; 102
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 88 00 	call	0x110	; 0x110 <main>
  74:	0c 94 23 04 	jmp	0x846	; 0x846 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <Receive>:
#define FOSC 1000000// Clock Speed
#define BAUD 9600
#define ubbr_value FOSC/16/BAUD-1
int Receive()
{
	while (! (UCSRA & (1 << RXC)) );
  7c:	5f 9b       	sbis	0x0b, 7	; 11
  7e:	fe cf       	rjmp	.-4      	; 0x7c <Receive>
	return UDR;
  80:	8c b1       	in	r24, 0x0c	; 12
}
  82:	90 e0       	ldi	r25, 0x00	; 0
  84:	08 95       	ret

00000086 <Transmit>:

void Transmit(unsigned char data)
{
	while (! (UCSRA & (1 << UDRE)) );
  86:	5d 9b       	sbis	0x0b, 5	; 11
  88:	fe cf       	rjmp	.-4      	; 0x86 <Transmit>
	UDR = data;
  8a:	8c b9       	out	0x0c, r24	; 12
  8c:	08 95       	ret

0000008e <map>:

}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
  8e:	4f 92       	push	r4
  90:	5f 92       	push	r5
  92:	6f 92       	push	r6
  94:	7f 92       	push	r7
  96:	af 92       	push	r10
  98:	bf 92       	push	r11
  9a:	cf 92       	push	r12
  9c:	df 92       	push	r13
  9e:	ef 92       	push	r14
  a0:	ff 92       	push	r15
  a2:	0f 93       	push	r16
  a4:	1f 93       	push	r17
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	cd b7       	in	r28, 0x3d	; 61
  ac:	de b7       	in	r29, 0x3e	; 62
  ae:	29 01       	movw	r4, r18
  b0:	3a 01       	movw	r6, r20
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  b2:	9b 01       	movw	r18, r22
  b4:	ac 01       	movw	r20, r24
  b6:	24 19       	sub	r18, r4
  b8:	35 09       	sbc	r19, r5
  ba:	46 09       	sbc	r20, r6
  bc:	57 09       	sbc	r21, r7
  be:	89 89       	ldd	r24, Y+17	; 0x11
  c0:	9a 89       	ldd	r25, Y+18	; 0x12
  c2:	ab 89       	ldd	r26, Y+19	; 0x13
  c4:	bc 89       	ldd	r27, Y+20	; 0x14
  c6:	bc 01       	movw	r22, r24
  c8:	cd 01       	movw	r24, r26
  ca:	6a 19       	sub	r22, r10
  cc:	7b 09       	sbc	r23, r11
  ce:	8c 09       	sbc	r24, r12
  d0:	9d 09       	sbc	r25, r13
  d2:	0e 94 b8 03 	call	0x770	; 0x770 <__mulsi3>
  d6:	a8 01       	movw	r20, r16
  d8:	97 01       	movw	r18, r14
  da:	24 19       	sub	r18, r4
  dc:	35 09       	sbc	r19, r5
  de:	46 09       	sbc	r20, r6
  e0:	57 09       	sbc	r21, r7
  e2:	0e 94 c8 03 	call	0x790	; 0x790 <__divmodsi4>
  e6:	ca 01       	movw	r24, r20
  e8:	b9 01       	movw	r22, r18
  ea:	6a 0d       	add	r22, r10
  ec:	7b 1d       	adc	r23, r11
  ee:	8c 1d       	adc	r24, r12
  f0:	9d 1d       	adc	r25, r13
}
  f2:	df 91       	pop	r29
  f4:	cf 91       	pop	r28
  f6:	1f 91       	pop	r17
  f8:	0f 91       	pop	r16
  fa:	ff 90       	pop	r15
  fc:	ef 90       	pop	r14
  fe:	df 90       	pop	r13
 100:	cf 90       	pop	r12
 102:	bf 90       	pop	r11
 104:	af 90       	pop	r10
 106:	7f 90       	pop	r7
 108:	6f 90       	pop	r6
 10a:	5f 90       	pop	r5
 10c:	4f 90       	pop	r4
 10e:	08 95       	ret

00000110 <main>:

int main(void)
{
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
 114:	cd b7       	in	r28, 0x3d	; 61
 116:	de b7       	in	r29, 0x3e	; 62
 118:	c4 50       	subi	r28, 0x04	; 4
 11a:	d8 40       	sbci	r29, 0x08	; 8
 11c:	0f b6       	in	r0, 0x3f	; 63
 11e:	f8 94       	cli
 120:	de bf       	out	0x3e, r29	; 62
 122:	0f be       	out	0x3f, r0	; 63
 124:	cd bf       	out	0x3d, r28	; 61
  TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 126:	83 b7       	in	r24, 0x33	; 51
 128:	89 66       	ori	r24, 0x69	; 105
 12a:	83 bf       	out	0x33, r24	; 51
DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 12c:	87 b3       	in	r24, 0x17	; 23
 12e:	8b 60       	ori	r24, 0x0B	; 11
 130:	87 bb       	out	0x17, r24	; 23
TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 132:	85 b5       	in	r24, 0x25	; 37
 134:	89 66       	ori	r24, 0x69	; 105
 136:	85 bd       	out	0x25, r24	; 37
DDRD |= 1<< PB7 | 1<< PB2;
 138:	81 b3       	in	r24, 0x11	; 17
 13a:	84 68       	ori	r24, 0x84	; 132
 13c:	81 bb       	out	0x11, r24	; 17
PORTB &= ~(1<< PINB0);
 13e:	c0 98       	cbi	0x18, 0	; 24
PORTD &= ~(1<< PIND2);
 140:	92 98       	cbi	0x12, 2	; 18
 UCSRA = (1 << U2X);
 142:	82 e0       	ldi	r24, 0x02	; 2
 144:	8b b9       	out	0x0b, r24	; 11
  UBRRH = (unsigned char) (ubbr_value >> 8);
 146:	10 bc       	out	0x20, r1	; 32
  UBRRL = (unsigned char) ubbr_value;
 148:	8f ef       	ldi	r24, 0xFF	; 255
 14a:	89 b9       	out	0x09, r24	; 9
  UCSRB = (1 << RXEN);
 14c:	80 e1       	ldi	r24, 0x10	; 16
 14e:	8a b9       	out	0x0a, r24	; 10
  UCSRC = (1 << URSEL) | (3 << UCSZ0);
 150:	86 e8       	ldi	r24, 0x86	; 134
 152:	80 bd       	out	0x20, r24	; 32
	int gear[1024];
	for(int i=0;i<10;i++)
 154:	e1 2c       	mov	r14, r1
 156:	f1 2c       	mov	r15, r1
		for(int j=i*102.4;j<i*102.4+102.4;j++)
 158:	b7 01       	movw	r22, r14
 15a:	0f 2c       	mov	r0, r15
 15c:	00 0c       	add	r0, r0
 15e:	88 0b       	sbc	r24, r24
 160:	99 0b       	sbc	r25, r25
 162:	0e 94 9b 02 	call	0x536	; 0x536 <__floatsisf>
 166:	2d ec       	ldi	r18, 0xCD	; 205
 168:	3c ec       	ldi	r19, 0xCC	; 204
 16a:	4c ec       	ldi	r20, 0xCC	; 204
 16c:	52 e4       	ldi	r21, 0x42	; 66
 16e:	0e 94 4b 03 	call	0x696	; 0x696 <__mulsf3>
 172:	4b 01       	movw	r8, r22
 174:	5c 01       	movw	r10, r24
 176:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__fixsfsi>
 17a:	6b 01       	movw	r12, r22
 17c:	66 0f       	add	r22, r22
 17e:	77 1f       	adc	r23, r23
 180:	01 e0       	ldi	r16, 0x01	; 1
 182:	10 e0       	ldi	r17, 0x00	; 0
 184:	0c 0f       	add	r16, r28
 186:	1d 1f       	adc	r17, r29
 188:	06 0f       	add	r16, r22
 18a:	17 1f       	adc	r17, r23
 18c:	b6 01       	movw	r22, r12
 18e:	0d 2c       	mov	r0, r13
 190:	00 0c       	add	r0, r0
 192:	88 0b       	sbc	r24, r24
 194:	99 0b       	sbc	r25, r25
 196:	0e 94 9b 02 	call	0x536	; 0x536 <__floatsisf>
 19a:	2b 01       	movw	r4, r22
 19c:	3c 01       	movw	r6, r24
 19e:	2d ec       	ldi	r18, 0xCD	; 205
 1a0:	3c ec       	ldi	r19, 0xCC	; 204
 1a2:	4c ec       	ldi	r20, 0xCC	; 204
 1a4:	52 e4       	ldi	r21, 0x42	; 66
 1a6:	c5 01       	movw	r24, r10
 1a8:	b4 01       	movw	r22, r8
 1aa:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
 1ae:	9b 01       	movw	r18, r22
 1b0:	ac 01       	movw	r20, r24
 1b2:	c3 01       	movw	r24, r6
 1b4:	b2 01       	movw	r22, r4
 1b6:	0e 94 5e 02 	call	0x4bc	; 0x4bc <__cmpsf2>
 1ba:	87 ff       	sbrs	r24, 7
 1bc:	08 c0       	rjmp	.+16     	; 0x1ce <main+0xbe>
		gear[j]=i;
 1be:	f8 01       	movw	r30, r16
 1c0:	e1 92       	st	Z+, r14
 1c2:	f1 92       	st	Z+, r15
 1c4:	8f 01       	movw	r16, r30
  UBRRL = (unsigned char) ubbr_value;
  UCSRB = (1 << RXEN);
  UCSRC = (1 << URSEL) | (3 << UCSZ0);
	int gear[1024];
	for(int i=0;i<10;i++)
		for(int j=i*102.4;j<i*102.4+102.4;j++)
 1c6:	ff ef       	ldi	r31, 0xFF	; 255
 1c8:	cf 1a       	sub	r12, r31
 1ca:	df 0a       	sbc	r13, r31
 1cc:	df cf       	rjmp	.-66     	; 0x18c <main+0x7c>
  UBRRH = (unsigned char) (ubbr_value >> 8);
  UBRRL = (unsigned char) ubbr_value;
  UCSRB = (1 << RXEN);
  UCSRC = (1 << URSEL) | (3 << UCSZ0);
	int gear[1024];
	for(int i=0;i<10;i++)
 1ce:	8f ef       	ldi	r24, 0xFF	; 255
 1d0:	e8 1a       	sub	r14, r24
 1d2:	f8 0a       	sbc	r15, r24
 1d4:	9a e0       	ldi	r25, 0x0A	; 10
 1d6:	e9 16       	cp	r14, r25
 1d8:	f1 04       	cpc	r15, r1
 1da:	09 f0       	breq	.+2      	; 0x1de <main+0xce>
 1dc:	bd cf       	rjmp	.-134    	; 0x158 <main+0x48>
		static int x,y,g;
	while (1)
	{


		if(Receive()==0x11)
 1de:	0e 94 3e 00 	call	0x7c	; 0x7c <Receive>
 1e2:	41 97       	sbiw	r24, 0x11	; 17
 1e4:	09 f0       	breq	.+2      	; 0x1e8 <main+0xd8>
 1e6:	4c c0       	rjmp	.+152    	; 0x280 <main+0x170>
		{
				int x1= Receive();
 1e8:	0e 94 3e 00 	call	0x7c	; 0x7c <Receive>
 1ec:	8c 01       	movw	r16, r24
    		x = (Receive())<<8 | x1;
 1ee:	0e 94 3e 00 	call	0x7c	; 0x7c <Receive>
 1f2:	38 2e       	mov	r3, r24
 1f4:	21 2c       	mov	r2, r1
 1f6:	02 29       	or	r16, r2
 1f8:	13 29       	or	r17, r3
 1fa:	10 93 65 00 	sts	0x0065, r17	; 0x800065 <x.1757+0x1>
 1fe:	00 93 64 00 	sts	0x0064, r16	; 0x800064 <x.1757>
			OCR2=0;
			PORTD&=~1<<PD2;
			PORTB&=~(1<<PB0);
			continue;
		}
		if(Receive()==0x21)
 202:	0e 94 3e 00 	call	0x7c	; 0x7c <Receive>
 206:	81 97       	sbiw	r24, 0x21	; 33
 208:	d9 f5       	brne	.+118    	; 0x280 <main+0x170>
		{
				int y1=Receive();
 20a:	0e 94 3e 00 	call	0x7c	; 0x7c <Receive>
 20e:	7c 01       	movw	r14, r24
    		y=(Receive())<<8 | y1;
 210:	0e 94 3e 00 	call	0x7c	; 0x7c <Receive>
 214:	ce 5f       	subi	r28, 0xFE	; 254
 216:	d7 4f       	sbci	r29, 0xF7	; 247
 218:	88 83       	st	Y, r24
 21a:	c2 50       	subi	r28, 0x02	; 2
 21c:	d8 40       	sbci	r29, 0x08	; 8
 21e:	cf 5f       	subi	r28, 0xFF	; 255
 220:	d7 4f       	sbci	r29, 0xF7	; 247
 222:	18 82       	st	Y, r1
 224:	c1 50       	subi	r28, 0x01	; 1
 226:	d8 40       	sbci	r29, 0x08	; 8
 228:	cf 5f       	subi	r28, 0xFF	; 255
 22a:	d7 4f       	sbci	r29, 0xF7	; 247
 22c:	e8 81       	ld	r30, Y
 22e:	f9 81       	ldd	r31, Y+1	; 0x01
 230:	c1 50       	subi	r28, 0x01	; 1
 232:	d8 40       	sbci	r29, 0x08	; 8
 234:	ee 2a       	or	r14, r30
 236:	ff 2a       	or	r15, r31
 238:	f0 92 63 00 	sts	0x0063, r15	; 0x800063 <y.1758+0x1>
 23c:	e0 92 62 00 	sts	0x0062, r14	; 0x800062 <y.1758>
			OCR2=0;
			PORTD&=~1<<PD2;
			PORTB&=~(1<<PB0);
			continue;
		}
		if(Receive()==0x31)
 240:	0e 94 3e 00 	call	0x7c	; 0x7c <Receive>
 244:	c1 97       	sbiw	r24, 0x31	; 49
 246:	19 f5       	brne	.+70     	; 0x28e <main+0x17e>
		{
				int y1=Receive();
 248:	0e 94 3e 00 	call	0x7c	; 0x7c <Receive>
 24c:	6c 01       	movw	r12, r24
    		g=(Receive())<<8 | y1;
 24e:	0e 94 3e 00 	call	0x7c	; 0x7c <Receive>
 252:	cc 5f       	subi	r28, 0xFC	; 252
 254:	d7 4f       	sbci	r29, 0xF7	; 247
 256:	88 83       	st	Y, r24
 258:	c4 50       	subi	r28, 0x04	; 4
 25a:	d8 40       	sbci	r29, 0x08	; 8
 25c:	cd 5f       	subi	r28, 0xFD	; 253
 25e:	d7 4f       	sbci	r29, 0xF7	; 247
 260:	18 82       	st	Y, r1
 262:	c3 50       	subi	r28, 0x03	; 3
 264:	d8 40       	sbci	r29, 0x08	; 8
 266:	cd 5f       	subi	r28, 0xFD	; 253
 268:	d7 4f       	sbci	r29, 0xF7	; 247
 26a:	88 81       	ld	r24, Y
 26c:	99 81       	ldd	r25, Y+1	; 0x01
 26e:	c3 50       	subi	r28, 0x03	; 3
 270:	d8 40       	sbci	r29, 0x08	; 8
 272:	c8 2a       	or	r12, r24
 274:	d9 2a       	or	r13, r25
 276:	d0 92 61 00 	sts	0x0061, r13	; 0x800061 <_edata+0x1>
 27a:	c0 92 60 00 	sts	0x0060, r12	; 0x800060 <_edata>
 27e:	07 c0       	rjmp	.+14     	; 0x28e <main+0x17e>
				int y1=Receive();
    		y=(Receive())<<8 | y1;
		}
		else
		{
			OCR0=0;
 280:	1c be       	out	0x3c, r1	; 60
			OCR2=0;
 282:	13 bc       	out	0x23, r1	; 35
			PORTD&=~1<<PD2;
 284:	82 b3       	in	r24, 0x12	; 18
 286:	88 7f       	andi	r24, 0xF8	; 248
 288:	82 bb       	out	0x12, r24	; 18
			PORTB&=~(1<<PB0);
 28a:	c0 98       	cbi	0x18, 0	; 24
			continue;
 28c:	a8 cf       	rjmp	.-176    	; 0x1de <main+0xce>
				int y1=Receive();
    		g=(Receive())<<8 | y1;
		}


		int x2=x-512;
 28e:	12 50       	subi	r17, 0x02	; 2
		//x2=0;
		//if(y2/x2<=0.0390625&&y2/x2>=-0.0390625)
		//y2=0;
    int x3 = x2;
    int y3 = y2;
    int x4= (x3*0.707)+(y3*0.707);
 290:	60 e0       	ldi	r22, 0x00	; 0
 292:	72 e0       	ldi	r23, 0x02	; 2
 294:	6e 19       	sub	r22, r14
 296:	7f 09       	sbc	r23, r15
 298:	07 2e       	mov	r0, r23
 29a:	00 0c       	add	r0, r0
 29c:	88 0b       	sbc	r24, r24
 29e:	99 0b       	sbc	r25, r25
 2a0:	0e 94 9b 02 	call	0x536	; 0x536 <__floatsisf>
 2a4:	24 ef       	ldi	r18, 0xF4	; 244
 2a6:	3d ef       	ldi	r19, 0xFD	; 253
 2a8:	44 e3       	ldi	r20, 0x34	; 52
 2aa:	5f e3       	ldi	r21, 0x3F	; 63
 2ac:	0e 94 4b 03 	call	0x696	; 0x696 <__mulsf3>
 2b0:	2b 01       	movw	r4, r22
 2b2:	3c 01       	movw	r6, r24
    int y4=(-x3*0.707)+(y3*0.707);
    int x5=map(x4,-723,723,-255,255)*gear[g]/9;
 2b4:	e0 91 60 00 	lds	r30, 0x0060	; 0x800060 <_edata>
 2b8:	f0 91 61 00 	lds	r31, 0x0061	; 0x800061 <_edata+0x1>
 2bc:	ee 0f       	add	r30, r30
 2be:	ff 1f       	adc	r31, r31
 2c0:	81 e0       	ldi	r24, 0x01	; 1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	8c 0f       	add	r24, r28
 2c6:	9d 1f       	adc	r25, r29
 2c8:	e8 0f       	add	r30, r24
 2ca:	f9 1f       	adc	r31, r25
 2cc:	80 80       	ld	r8, Z
 2ce:	91 80       	ldd	r9, Z+1	; 0x01
 2d0:	09 2c       	mov	r0, r9
 2d2:	00 0c       	add	r0, r0
 2d4:	aa 08       	sbc	r10, r10
 2d6:	bb 08       	sbc	r11, r11
 2d8:	b8 01       	movw	r22, r16
 2da:	01 2e       	mov	r0, r17
 2dc:	00 0c       	add	r0, r0
 2de:	88 0b       	sbc	r24, r24
 2e0:	99 0b       	sbc	r25, r25
 2e2:	0e 94 9b 02 	call	0x536	; 0x536 <__floatsisf>
 2e6:	24 ef       	ldi	r18, 0xF4	; 244
 2e8:	3d ef       	ldi	r19, 0xFD	; 253
 2ea:	44 e3       	ldi	r20, 0x34	; 52
 2ec:	5f e3       	ldi	r21, 0x3F	; 63
 2ee:	0e 94 4b 03 	call	0x696	; 0x696 <__mulsf3>
 2f2:	a3 01       	movw	r20, r6
 2f4:	92 01       	movw	r18, r4
 2f6:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
 2fa:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__fixsfsi>
 2fe:	cb 01       	movw	r24, r22
 300:	77 0f       	add	r23, r23
 302:	aa 0b       	sbc	r26, r26
 304:	bb 0b       	sbc	r27, r27
 306:	9c 01       	movw	r18, r24
 308:	ad 01       	movw	r20, r26
 30a:	2d 52       	subi	r18, 0x2D	; 45
 30c:	3d 4f       	sbci	r19, 0xFD	; 253
 30e:	4f 4f       	sbci	r20, 0xFF	; 255
 310:	5f 4f       	sbci	r21, 0xFF	; 255
 312:	ae ef       	ldi	r26, 0xFE	; 254
 314:	b1 e0       	ldi	r27, 0x01	; 1
 316:	0e 94 e7 03 	call	0x7ce	; 0x7ce <__muluhisi3>
 31a:	26 ea       	ldi	r18, 0xA6	; 166
 31c:	35 e0       	ldi	r19, 0x05	; 5
 31e:	40 e0       	ldi	r20, 0x00	; 0
 320:	50 e0       	ldi	r21, 0x00	; 0
 322:	0e 94 c8 03 	call	0x790	; 0x790 <__divmodsi4>
 326:	2f 5f       	subi	r18, 0xFF	; 255
 328:	31 09       	sbc	r19, r1
 32a:	41 09       	sbc	r20, r1
 32c:	51 09       	sbc	r21, r1
 32e:	c5 01       	movw	r24, r10
 330:	b4 01       	movw	r22, r8
 332:	0e 94 b8 03 	call	0x770	; 0x770 <__mulsi3>
 336:	29 e0       	ldi	r18, 0x09	; 9
 338:	30 e0       	ldi	r19, 0x00	; 0
 33a:	40 e0       	ldi	r20, 0x00	; 0
 33c:	50 e0       	ldi	r21, 0x00	; 0
 33e:	0e 94 c8 03 	call	0x790	; 0x790 <__divmodsi4>
 342:	69 01       	movw	r12, r18
 344:	7a 01       	movw	r14, r20
    int y5=map(y4,-723,723,-255,255)*gear[g]/9;
 346:	66 27       	eor	r22, r22
 348:	77 27       	eor	r23, r23
 34a:	60 1b       	sub	r22, r16
 34c:	71 0b       	sbc	r23, r17
 34e:	07 2e       	mov	r0, r23
 350:	00 0c       	add	r0, r0
 352:	88 0b       	sbc	r24, r24
 354:	99 0b       	sbc	r25, r25
 356:	0e 94 9b 02 	call	0x536	; 0x536 <__floatsisf>
 35a:	24 ef       	ldi	r18, 0xF4	; 244
 35c:	3d ef       	ldi	r19, 0xFD	; 253
 35e:	44 e3       	ldi	r20, 0x34	; 52
 360:	5f e3       	ldi	r21, 0x3F	; 63
 362:	0e 94 4b 03 	call	0x696	; 0x696 <__mulsf3>
 366:	a3 01       	movw	r20, r6
 368:	92 01       	movw	r18, r4
 36a:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <__addsf3>
 36e:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__fixsfsi>
 372:	cb 01       	movw	r24, r22
 374:	77 0f       	add	r23, r23
 376:	aa 0b       	sbc	r26, r26
 378:	bb 0b       	sbc	r27, r27
 37a:	9c 01       	movw	r18, r24
 37c:	ad 01       	movw	r20, r26
 37e:	2d 52       	subi	r18, 0x2D	; 45
 380:	3d 4f       	sbci	r19, 0xFD	; 253
 382:	4f 4f       	sbci	r20, 0xFF	; 255
 384:	5f 4f       	sbci	r21, 0xFF	; 255
 386:	ae ef       	ldi	r26, 0xFE	; 254
 388:	b1 e0       	ldi	r27, 0x01	; 1
 38a:	0e 94 e7 03 	call	0x7ce	; 0x7ce <__muluhisi3>
 38e:	26 ea       	ldi	r18, 0xA6	; 166
 390:	35 e0       	ldi	r19, 0x05	; 5
 392:	40 e0       	ldi	r20, 0x00	; 0
 394:	50 e0       	ldi	r21, 0x00	; 0
 396:	0e 94 c8 03 	call	0x790	; 0x790 <__divmodsi4>
 39a:	2f 5f       	subi	r18, 0xFF	; 255
 39c:	31 09       	sbc	r19, r1
 39e:	41 09       	sbc	r20, r1
 3a0:	51 09       	sbc	r21, r1
 3a2:	c5 01       	movw	r24, r10
 3a4:	b4 01       	movw	r22, r8
 3a6:	0e 94 b8 03 	call	0x770	; 0x770 <__mulsi3>
 3aa:	29 e0       	ldi	r18, 0x09	; 9
 3ac:	30 e0       	ldi	r19, 0x00	; 0
 3ae:	40 e0       	ldi	r20, 0x00	; 0
 3b0:	50 e0       	ldi	r21, 0x00	; 0
 3b2:	0e 94 c8 03 	call	0x790	; 0x790 <__divmodsi4>
 3b6:	c9 01       	movw	r24, r18
		x5=0;

		if(y5<20&&y5>-20)
		y5=0;
		*/
		if(x5>0)
 3b8:	1c 14       	cp	r1, r12
 3ba:	1d 04       	cpc	r1, r13
 3bc:	1c f4       	brge	.+6      	; 0x3c4 <main+0x2b4>
		{
			OCR0=x5;
 3be:	cc be       	out	0x3c, r12	; 60
			PORTB|=1<<PB0;
 3c0:	c0 9a       	sbi	0x18, 0	; 24
 3c2:	03 c0       	rjmp	.+6      	; 0x3ca <main+0x2ba>
		}
		else
		{
			OCR0=-x5;
 3c4:	c1 94       	neg	r12
 3c6:	cc be       	out	0x3c, r12	; 60
			PORTB&=~(1<<PB0);
 3c8:	c0 98       	cbi	0x18, 0	; 24
		}
		if(y5>0)
 3ca:	18 16       	cp	r1, r24
 3cc:	19 06       	cpc	r1, r25
 3ce:	1c f4       	brge	.+6      	; 0x3d6 <main+0x2c6>
		{
		OCR2=y5;
 3d0:	23 bd       	out	0x23, r18	; 35
		PORTD|=1<<PD2;
 3d2:	92 9a       	sbi	0x12, 2	; 18
 3d4:	04 cf       	rjmp	.-504    	; 0x1de <main+0xce>
		}
		else
		{
			OCR2=-y5;
 3d6:	21 95       	neg	r18
 3d8:	23 bd       	out	0x23, r18	; 35
			PORTD&=~1<<PD2;
 3da:	82 b3       	in	r24, 0x12	; 18
 3dc:	88 7f       	andi	r24, 0xF8	; 248
 3de:	82 bb       	out	0x12, r24	; 18
 3e0:	fe ce       	rjmp	.-516    	; 0x1de <main+0xce>

000003e2 <__subsf3>:
 3e2:	50 58       	subi	r21, 0x80	; 128

000003e4 <__addsf3>:
 3e4:	bb 27       	eor	r27, r27
 3e6:	aa 27       	eor	r26, r26
 3e8:	0e 94 09 02 	call	0x412	; 0x412 <__addsf3x>
 3ec:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_round>
 3f0:	0e 94 03 03 	call	0x606	; 0x606 <__fp_pscA>
 3f4:	38 f0       	brcs	.+14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f6:	0e 94 0a 03 	call	0x614	; 0x614 <__fp_pscB>
 3fa:	20 f0       	brcs	.+8      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fc:	39 f4       	brne	.+14     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 3fe:	9f 3f       	cpi	r25, 0xFF	; 255
 400:	19 f4       	brne	.+6      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 402:	26 f4       	brtc	.+8      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 404:	0c 94 00 03 	jmp	0x600	; 0x600 <__fp_nan>
 408:	0e f4       	brtc	.+2      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 40a:	e0 95       	com	r30
 40c:	e7 fb       	bst	r30, 7
 40e:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__fp_inf>

00000412 <__addsf3x>:
 412:	e9 2f       	mov	r30, r25
 414:	0e 94 22 03 	call	0x644	; 0x644 <__fp_split3>
 418:	58 f3       	brcs	.-42     	; 0x3f0 <__addsf3+0xc>
 41a:	ba 17       	cp	r27, r26
 41c:	62 07       	cpc	r22, r18
 41e:	73 07       	cpc	r23, r19
 420:	84 07       	cpc	r24, r20
 422:	95 07       	cpc	r25, r21
 424:	20 f0       	brcs	.+8      	; 0x42e <__addsf3x+0x1c>
 426:	79 f4       	brne	.+30     	; 0x446 <__addsf3x+0x34>
 428:	a6 f5       	brtc	.+104    	; 0x492 <__stack+0x33>
 42a:	0c 94 44 03 	jmp	0x688	; 0x688 <__fp_zero>
 42e:	0e f4       	brtc	.+2      	; 0x432 <__addsf3x+0x20>
 430:	e0 95       	com	r30
 432:	0b 2e       	mov	r0, r27
 434:	ba 2f       	mov	r27, r26
 436:	a0 2d       	mov	r26, r0
 438:	0b 01       	movw	r0, r22
 43a:	b9 01       	movw	r22, r18
 43c:	90 01       	movw	r18, r0
 43e:	0c 01       	movw	r0, r24
 440:	ca 01       	movw	r24, r20
 442:	a0 01       	movw	r20, r0
 444:	11 24       	eor	r1, r1
 446:	ff 27       	eor	r31, r31
 448:	59 1b       	sub	r21, r25
 44a:	99 f0       	breq	.+38     	; 0x472 <__stack+0x13>
 44c:	59 3f       	cpi	r21, 0xF9	; 249
 44e:	50 f4       	brcc	.+20     	; 0x464 <__stack+0x5>
 450:	50 3e       	cpi	r21, 0xE0	; 224
 452:	68 f1       	brcs	.+90     	; 0x4ae <__stack+0x4f>
 454:	1a 16       	cp	r1, r26
 456:	f0 40       	sbci	r31, 0x00	; 0
 458:	a2 2f       	mov	r26, r18
 45a:	23 2f       	mov	r18, r19
 45c:	34 2f       	mov	r19, r20
 45e:	44 27       	eor	r20, r20
 460:	58 5f       	subi	r21, 0xF8	; 248
 462:	f3 cf       	rjmp	.-26     	; 0x44a <__addsf3x+0x38>
 464:	46 95       	lsr	r20
 466:	37 95       	ror	r19
 468:	27 95       	ror	r18
 46a:	a7 95       	ror	r26
 46c:	f0 40       	sbci	r31, 0x00	; 0
 46e:	53 95       	inc	r21
 470:	c9 f7       	brne	.-14     	; 0x464 <__stack+0x5>
 472:	7e f4       	brtc	.+30     	; 0x492 <__stack+0x33>
 474:	1f 16       	cp	r1, r31
 476:	ba 0b       	sbc	r27, r26
 478:	62 0b       	sbc	r22, r18
 47a:	73 0b       	sbc	r23, r19
 47c:	84 0b       	sbc	r24, r20
 47e:	ba f0       	brmi	.+46     	; 0x4ae <__stack+0x4f>
 480:	91 50       	subi	r25, 0x01	; 1
 482:	a1 f0       	breq	.+40     	; 0x4ac <__stack+0x4d>
 484:	ff 0f       	add	r31, r31
 486:	bb 1f       	adc	r27, r27
 488:	66 1f       	adc	r22, r22
 48a:	77 1f       	adc	r23, r23
 48c:	88 1f       	adc	r24, r24
 48e:	c2 f7       	brpl	.-16     	; 0x480 <__stack+0x21>
 490:	0e c0       	rjmp	.+28     	; 0x4ae <__stack+0x4f>
 492:	ba 0f       	add	r27, r26
 494:	62 1f       	adc	r22, r18
 496:	73 1f       	adc	r23, r19
 498:	84 1f       	adc	r24, r20
 49a:	48 f4       	brcc	.+18     	; 0x4ae <__stack+0x4f>
 49c:	87 95       	ror	r24
 49e:	77 95       	ror	r23
 4a0:	67 95       	ror	r22
 4a2:	b7 95       	ror	r27
 4a4:	f7 95       	ror	r31
 4a6:	9e 3f       	cpi	r25, 0xFE	; 254
 4a8:	08 f0       	brcs	.+2      	; 0x4ac <__stack+0x4d>
 4aa:	b0 cf       	rjmp	.-160    	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 4ac:	93 95       	inc	r25
 4ae:	88 0f       	add	r24, r24
 4b0:	08 f0       	brcs	.+2      	; 0x4b4 <__stack+0x55>
 4b2:	99 27       	eor	r25, r25
 4b4:	ee 0f       	add	r30, r30
 4b6:	97 95       	ror	r25
 4b8:	87 95       	ror	r24
 4ba:	08 95       	ret

000004bc <__cmpsf2>:
 4bc:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__fp_cmp>
 4c0:	08 f4       	brcc	.+2      	; 0x4c4 <__cmpsf2+0x8>
 4c2:	81 e0       	ldi	r24, 0x01	; 1
 4c4:	08 95       	ret

000004c6 <__fixsfsi>:
 4c6:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__fixunssfsi>
 4ca:	68 94       	set
 4cc:	b1 11       	cpse	r27, r1
 4ce:	0c 94 45 03 	jmp	0x68a	; 0x68a <__fp_szero>
 4d2:	08 95       	ret

000004d4 <__fixunssfsi>:
 4d4:	0e 94 2a 03 	call	0x654	; 0x654 <__fp_splitA>
 4d8:	88 f0       	brcs	.+34     	; 0x4fc <__fixunssfsi+0x28>
 4da:	9f 57       	subi	r25, 0x7F	; 127
 4dc:	98 f0       	brcs	.+38     	; 0x504 <__fixunssfsi+0x30>
 4de:	b9 2f       	mov	r27, r25
 4e0:	99 27       	eor	r25, r25
 4e2:	b7 51       	subi	r27, 0x17	; 23
 4e4:	b0 f0       	brcs	.+44     	; 0x512 <__fixunssfsi+0x3e>
 4e6:	e1 f0       	breq	.+56     	; 0x520 <__fixunssfsi+0x4c>
 4e8:	66 0f       	add	r22, r22
 4ea:	77 1f       	adc	r23, r23
 4ec:	88 1f       	adc	r24, r24
 4ee:	99 1f       	adc	r25, r25
 4f0:	1a f0       	brmi	.+6      	; 0x4f8 <__fixunssfsi+0x24>
 4f2:	ba 95       	dec	r27
 4f4:	c9 f7       	brne	.-14     	; 0x4e8 <__fixunssfsi+0x14>
 4f6:	14 c0       	rjmp	.+40     	; 0x520 <__fixunssfsi+0x4c>
 4f8:	b1 30       	cpi	r27, 0x01	; 1
 4fa:	91 f0       	breq	.+36     	; 0x520 <__fixunssfsi+0x4c>
 4fc:	0e 94 44 03 	call	0x688	; 0x688 <__fp_zero>
 500:	b1 e0       	ldi	r27, 0x01	; 1
 502:	08 95       	ret
 504:	0c 94 44 03 	jmp	0x688	; 0x688 <__fp_zero>
 508:	67 2f       	mov	r22, r23
 50a:	78 2f       	mov	r23, r24
 50c:	88 27       	eor	r24, r24
 50e:	b8 5f       	subi	r27, 0xF8	; 248
 510:	39 f0       	breq	.+14     	; 0x520 <__fixunssfsi+0x4c>
 512:	b9 3f       	cpi	r27, 0xF9	; 249
 514:	cc f3       	brlt	.-14     	; 0x508 <__fixunssfsi+0x34>
 516:	86 95       	lsr	r24
 518:	77 95       	ror	r23
 51a:	67 95       	ror	r22
 51c:	b3 95       	inc	r27
 51e:	d9 f7       	brne	.-10     	; 0x516 <__fixunssfsi+0x42>
 520:	3e f4       	brtc	.+14     	; 0x530 <__fixunssfsi+0x5c>
 522:	90 95       	com	r25
 524:	80 95       	com	r24
 526:	70 95       	com	r23
 528:	61 95       	neg	r22
 52a:	7f 4f       	sbci	r23, 0xFF	; 255
 52c:	8f 4f       	sbci	r24, 0xFF	; 255
 52e:	9f 4f       	sbci	r25, 0xFF	; 255
 530:	08 95       	ret

00000532 <__floatunsisf>:
 532:	e8 94       	clt
 534:	09 c0       	rjmp	.+18     	; 0x548 <__floatsisf+0x12>

00000536 <__floatsisf>:
 536:	97 fb       	bst	r25, 7
 538:	3e f4       	brtc	.+14     	; 0x548 <__floatsisf+0x12>
 53a:	90 95       	com	r25
 53c:	80 95       	com	r24
 53e:	70 95       	com	r23
 540:	61 95       	neg	r22
 542:	7f 4f       	sbci	r23, 0xFF	; 255
 544:	8f 4f       	sbci	r24, 0xFF	; 255
 546:	9f 4f       	sbci	r25, 0xFF	; 255
 548:	99 23       	and	r25, r25
 54a:	a9 f0       	breq	.+42     	; 0x576 <__floatsisf+0x40>
 54c:	f9 2f       	mov	r31, r25
 54e:	96 e9       	ldi	r25, 0x96	; 150
 550:	bb 27       	eor	r27, r27
 552:	93 95       	inc	r25
 554:	f6 95       	lsr	r31
 556:	87 95       	ror	r24
 558:	77 95       	ror	r23
 55a:	67 95       	ror	r22
 55c:	b7 95       	ror	r27
 55e:	f1 11       	cpse	r31, r1
 560:	f8 cf       	rjmp	.-16     	; 0x552 <__floatsisf+0x1c>
 562:	fa f4       	brpl	.+62     	; 0x5a2 <__floatsisf+0x6c>
 564:	bb 0f       	add	r27, r27
 566:	11 f4       	brne	.+4      	; 0x56c <__floatsisf+0x36>
 568:	60 ff       	sbrs	r22, 0
 56a:	1b c0       	rjmp	.+54     	; 0x5a2 <__floatsisf+0x6c>
 56c:	6f 5f       	subi	r22, 0xFF	; 255
 56e:	7f 4f       	sbci	r23, 0xFF	; 255
 570:	8f 4f       	sbci	r24, 0xFF	; 255
 572:	9f 4f       	sbci	r25, 0xFF	; 255
 574:	16 c0       	rjmp	.+44     	; 0x5a2 <__floatsisf+0x6c>
 576:	88 23       	and	r24, r24
 578:	11 f0       	breq	.+4      	; 0x57e <__floatsisf+0x48>
 57a:	96 e9       	ldi	r25, 0x96	; 150
 57c:	11 c0       	rjmp	.+34     	; 0x5a0 <__floatsisf+0x6a>
 57e:	77 23       	and	r23, r23
 580:	21 f0       	breq	.+8      	; 0x58a <__floatsisf+0x54>
 582:	9e e8       	ldi	r25, 0x8E	; 142
 584:	87 2f       	mov	r24, r23
 586:	76 2f       	mov	r23, r22
 588:	05 c0       	rjmp	.+10     	; 0x594 <__floatsisf+0x5e>
 58a:	66 23       	and	r22, r22
 58c:	71 f0       	breq	.+28     	; 0x5aa <__floatsisf+0x74>
 58e:	96 e8       	ldi	r25, 0x86	; 134
 590:	86 2f       	mov	r24, r22
 592:	70 e0       	ldi	r23, 0x00	; 0
 594:	60 e0       	ldi	r22, 0x00	; 0
 596:	2a f0       	brmi	.+10     	; 0x5a2 <__floatsisf+0x6c>
 598:	9a 95       	dec	r25
 59a:	66 0f       	add	r22, r22
 59c:	77 1f       	adc	r23, r23
 59e:	88 1f       	adc	r24, r24
 5a0:	da f7       	brpl	.-10     	; 0x598 <__floatsisf+0x62>
 5a2:	88 0f       	add	r24, r24
 5a4:	96 95       	lsr	r25
 5a6:	87 95       	ror	r24
 5a8:	97 f9       	bld	r25, 7
 5aa:	08 95       	ret

000005ac <__fp_cmp>:
 5ac:	99 0f       	add	r25, r25
 5ae:	00 08       	sbc	r0, r0
 5b0:	55 0f       	add	r21, r21
 5b2:	aa 0b       	sbc	r26, r26
 5b4:	e0 e8       	ldi	r30, 0x80	; 128
 5b6:	fe ef       	ldi	r31, 0xFE	; 254
 5b8:	16 16       	cp	r1, r22
 5ba:	17 06       	cpc	r1, r23
 5bc:	e8 07       	cpc	r30, r24
 5be:	f9 07       	cpc	r31, r25
 5c0:	c0 f0       	brcs	.+48     	; 0x5f2 <__fp_cmp+0x46>
 5c2:	12 16       	cp	r1, r18
 5c4:	13 06       	cpc	r1, r19
 5c6:	e4 07       	cpc	r30, r20
 5c8:	f5 07       	cpc	r31, r21
 5ca:	98 f0       	brcs	.+38     	; 0x5f2 <__fp_cmp+0x46>
 5cc:	62 1b       	sub	r22, r18
 5ce:	73 0b       	sbc	r23, r19
 5d0:	84 0b       	sbc	r24, r20
 5d2:	95 0b       	sbc	r25, r21
 5d4:	39 f4       	brne	.+14     	; 0x5e4 <__fp_cmp+0x38>
 5d6:	0a 26       	eor	r0, r26
 5d8:	61 f0       	breq	.+24     	; 0x5f2 <__fp_cmp+0x46>
 5da:	23 2b       	or	r18, r19
 5dc:	24 2b       	or	r18, r20
 5de:	25 2b       	or	r18, r21
 5e0:	21 f4       	brne	.+8      	; 0x5ea <__fp_cmp+0x3e>
 5e2:	08 95       	ret
 5e4:	0a 26       	eor	r0, r26
 5e6:	09 f4       	brne	.+2      	; 0x5ea <__fp_cmp+0x3e>
 5e8:	a1 40       	sbci	r26, 0x01	; 1
 5ea:	a6 95       	lsr	r26
 5ec:	8f ef       	ldi	r24, 0xFF	; 255
 5ee:	81 1d       	adc	r24, r1
 5f0:	81 1d       	adc	r24, r1
 5f2:	08 95       	ret

000005f4 <__fp_inf>:
 5f4:	97 f9       	bld	r25, 7
 5f6:	9f 67       	ori	r25, 0x7F	; 127
 5f8:	80 e8       	ldi	r24, 0x80	; 128
 5fa:	70 e0       	ldi	r23, 0x00	; 0
 5fc:	60 e0       	ldi	r22, 0x00	; 0
 5fe:	08 95       	ret

00000600 <__fp_nan>:
 600:	9f ef       	ldi	r25, 0xFF	; 255
 602:	80 ec       	ldi	r24, 0xC0	; 192
 604:	08 95       	ret

00000606 <__fp_pscA>:
 606:	00 24       	eor	r0, r0
 608:	0a 94       	dec	r0
 60a:	16 16       	cp	r1, r22
 60c:	17 06       	cpc	r1, r23
 60e:	18 06       	cpc	r1, r24
 610:	09 06       	cpc	r0, r25
 612:	08 95       	ret

00000614 <__fp_pscB>:
 614:	00 24       	eor	r0, r0
 616:	0a 94       	dec	r0
 618:	12 16       	cp	r1, r18
 61a:	13 06       	cpc	r1, r19
 61c:	14 06       	cpc	r1, r20
 61e:	05 06       	cpc	r0, r21
 620:	08 95       	ret

00000622 <__fp_round>:
 622:	09 2e       	mov	r0, r25
 624:	03 94       	inc	r0
 626:	00 0c       	add	r0, r0
 628:	11 f4       	brne	.+4      	; 0x62e <__fp_round+0xc>
 62a:	88 23       	and	r24, r24
 62c:	52 f0       	brmi	.+20     	; 0x642 <__fp_round+0x20>
 62e:	bb 0f       	add	r27, r27
 630:	40 f4       	brcc	.+16     	; 0x642 <__fp_round+0x20>
 632:	bf 2b       	or	r27, r31
 634:	11 f4       	brne	.+4      	; 0x63a <__fp_round+0x18>
 636:	60 ff       	sbrs	r22, 0
 638:	04 c0       	rjmp	.+8      	; 0x642 <__fp_round+0x20>
 63a:	6f 5f       	subi	r22, 0xFF	; 255
 63c:	7f 4f       	sbci	r23, 0xFF	; 255
 63e:	8f 4f       	sbci	r24, 0xFF	; 255
 640:	9f 4f       	sbci	r25, 0xFF	; 255
 642:	08 95       	ret

00000644 <__fp_split3>:
 644:	57 fd       	sbrc	r21, 7
 646:	90 58       	subi	r25, 0x80	; 128
 648:	44 0f       	add	r20, r20
 64a:	55 1f       	adc	r21, r21
 64c:	59 f0       	breq	.+22     	; 0x664 <__fp_splitA+0x10>
 64e:	5f 3f       	cpi	r21, 0xFF	; 255
 650:	71 f0       	breq	.+28     	; 0x66e <__fp_splitA+0x1a>
 652:	47 95       	ror	r20

00000654 <__fp_splitA>:
 654:	88 0f       	add	r24, r24
 656:	97 fb       	bst	r25, 7
 658:	99 1f       	adc	r25, r25
 65a:	61 f0       	breq	.+24     	; 0x674 <__fp_splitA+0x20>
 65c:	9f 3f       	cpi	r25, 0xFF	; 255
 65e:	79 f0       	breq	.+30     	; 0x67e <__fp_splitA+0x2a>
 660:	87 95       	ror	r24
 662:	08 95       	ret
 664:	12 16       	cp	r1, r18
 666:	13 06       	cpc	r1, r19
 668:	14 06       	cpc	r1, r20
 66a:	55 1f       	adc	r21, r21
 66c:	f2 cf       	rjmp	.-28     	; 0x652 <__fp_split3+0xe>
 66e:	46 95       	lsr	r20
 670:	f1 df       	rcall	.-30     	; 0x654 <__fp_splitA>
 672:	08 c0       	rjmp	.+16     	; 0x684 <__fp_splitA+0x30>
 674:	16 16       	cp	r1, r22
 676:	17 06       	cpc	r1, r23
 678:	18 06       	cpc	r1, r24
 67a:	99 1f       	adc	r25, r25
 67c:	f1 cf       	rjmp	.-30     	; 0x660 <__fp_splitA+0xc>
 67e:	86 95       	lsr	r24
 680:	71 05       	cpc	r23, r1
 682:	61 05       	cpc	r22, r1
 684:	08 94       	sec
 686:	08 95       	ret

00000688 <__fp_zero>:
 688:	e8 94       	clt

0000068a <__fp_szero>:
 68a:	bb 27       	eor	r27, r27
 68c:	66 27       	eor	r22, r22
 68e:	77 27       	eor	r23, r23
 690:	cb 01       	movw	r24, r22
 692:	97 f9       	bld	r25, 7
 694:	08 95       	ret

00000696 <__mulsf3>:
 696:	0e 94 5e 03 	call	0x6bc	; 0x6bc <__mulsf3x>
 69a:	0c 94 11 03 	jmp	0x622	; 0x622 <__fp_round>
 69e:	0e 94 03 03 	call	0x606	; 0x606 <__fp_pscA>
 6a2:	38 f0       	brcs	.+14     	; 0x6b2 <__mulsf3+0x1c>
 6a4:	0e 94 0a 03 	call	0x614	; 0x614 <__fp_pscB>
 6a8:	20 f0       	brcs	.+8      	; 0x6b2 <__mulsf3+0x1c>
 6aa:	95 23       	and	r25, r21
 6ac:	11 f0       	breq	.+4      	; 0x6b2 <__mulsf3+0x1c>
 6ae:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__fp_inf>
 6b2:	0c 94 00 03 	jmp	0x600	; 0x600 <__fp_nan>
 6b6:	11 24       	eor	r1, r1
 6b8:	0c 94 45 03 	jmp	0x68a	; 0x68a <__fp_szero>

000006bc <__mulsf3x>:
 6bc:	0e 94 22 03 	call	0x644	; 0x644 <__fp_split3>
 6c0:	70 f3       	brcs	.-36     	; 0x69e <__mulsf3+0x8>

000006c2 <__mulsf3_pse>:
 6c2:	95 9f       	mul	r25, r21
 6c4:	c1 f3       	breq	.-16     	; 0x6b6 <__mulsf3+0x20>
 6c6:	95 0f       	add	r25, r21
 6c8:	50 e0       	ldi	r21, 0x00	; 0
 6ca:	55 1f       	adc	r21, r21
 6cc:	62 9f       	mul	r22, r18
 6ce:	f0 01       	movw	r30, r0
 6d0:	72 9f       	mul	r23, r18
 6d2:	bb 27       	eor	r27, r27
 6d4:	f0 0d       	add	r31, r0
 6d6:	b1 1d       	adc	r27, r1
 6d8:	63 9f       	mul	r22, r19
 6da:	aa 27       	eor	r26, r26
 6dc:	f0 0d       	add	r31, r0
 6de:	b1 1d       	adc	r27, r1
 6e0:	aa 1f       	adc	r26, r26
 6e2:	64 9f       	mul	r22, r20
 6e4:	66 27       	eor	r22, r22
 6e6:	b0 0d       	add	r27, r0
 6e8:	a1 1d       	adc	r26, r1
 6ea:	66 1f       	adc	r22, r22
 6ec:	82 9f       	mul	r24, r18
 6ee:	22 27       	eor	r18, r18
 6f0:	b0 0d       	add	r27, r0
 6f2:	a1 1d       	adc	r26, r1
 6f4:	62 1f       	adc	r22, r18
 6f6:	73 9f       	mul	r23, r19
 6f8:	b0 0d       	add	r27, r0
 6fa:	a1 1d       	adc	r26, r1
 6fc:	62 1f       	adc	r22, r18
 6fe:	83 9f       	mul	r24, r19
 700:	a0 0d       	add	r26, r0
 702:	61 1d       	adc	r22, r1
 704:	22 1f       	adc	r18, r18
 706:	74 9f       	mul	r23, r20
 708:	33 27       	eor	r19, r19
 70a:	a0 0d       	add	r26, r0
 70c:	61 1d       	adc	r22, r1
 70e:	23 1f       	adc	r18, r19
 710:	84 9f       	mul	r24, r20
 712:	60 0d       	add	r22, r0
 714:	21 1d       	adc	r18, r1
 716:	82 2f       	mov	r24, r18
 718:	76 2f       	mov	r23, r22
 71a:	6a 2f       	mov	r22, r26
 71c:	11 24       	eor	r1, r1
 71e:	9f 57       	subi	r25, 0x7F	; 127
 720:	50 40       	sbci	r21, 0x00	; 0
 722:	9a f0       	brmi	.+38     	; 0x74a <__mulsf3_pse+0x88>
 724:	f1 f0       	breq	.+60     	; 0x762 <__mulsf3_pse+0xa0>
 726:	88 23       	and	r24, r24
 728:	4a f0       	brmi	.+18     	; 0x73c <__mulsf3_pse+0x7a>
 72a:	ee 0f       	add	r30, r30
 72c:	ff 1f       	adc	r31, r31
 72e:	bb 1f       	adc	r27, r27
 730:	66 1f       	adc	r22, r22
 732:	77 1f       	adc	r23, r23
 734:	88 1f       	adc	r24, r24
 736:	91 50       	subi	r25, 0x01	; 1
 738:	50 40       	sbci	r21, 0x00	; 0
 73a:	a9 f7       	brne	.-22     	; 0x726 <__mulsf3_pse+0x64>
 73c:	9e 3f       	cpi	r25, 0xFE	; 254
 73e:	51 05       	cpc	r21, r1
 740:	80 f0       	brcs	.+32     	; 0x762 <__mulsf3_pse+0xa0>
 742:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__fp_inf>
 746:	0c 94 45 03 	jmp	0x68a	; 0x68a <__fp_szero>
 74a:	5f 3f       	cpi	r21, 0xFF	; 255
 74c:	e4 f3       	brlt	.-8      	; 0x746 <__mulsf3_pse+0x84>
 74e:	98 3e       	cpi	r25, 0xE8	; 232
 750:	d4 f3       	brlt	.-12     	; 0x746 <__mulsf3_pse+0x84>
 752:	86 95       	lsr	r24
 754:	77 95       	ror	r23
 756:	67 95       	ror	r22
 758:	b7 95       	ror	r27
 75a:	f7 95       	ror	r31
 75c:	e7 95       	ror	r30
 75e:	9f 5f       	subi	r25, 0xFF	; 255
 760:	c1 f7       	brne	.-16     	; 0x752 <__mulsf3_pse+0x90>
 762:	fe 2b       	or	r31, r30
 764:	88 0f       	add	r24, r24
 766:	91 1d       	adc	r25, r1
 768:	96 95       	lsr	r25
 76a:	87 95       	ror	r24
 76c:	97 f9       	bld	r25, 7
 76e:	08 95       	ret

00000770 <__mulsi3>:
 770:	db 01       	movw	r26, r22
 772:	8f 93       	push	r24
 774:	9f 93       	push	r25
 776:	0e 94 e7 03 	call	0x7ce	; 0x7ce <__muluhisi3>
 77a:	bf 91       	pop	r27
 77c:	af 91       	pop	r26
 77e:	a2 9f       	mul	r26, r18
 780:	80 0d       	add	r24, r0
 782:	91 1d       	adc	r25, r1
 784:	a3 9f       	mul	r26, r19
 786:	90 0d       	add	r25, r0
 788:	b2 9f       	mul	r27, r18
 78a:	90 0d       	add	r25, r0
 78c:	11 24       	eor	r1, r1
 78e:	08 95       	ret

00000790 <__divmodsi4>:
 790:	05 2e       	mov	r0, r21
 792:	97 fb       	bst	r25, 7
 794:	1e f4       	brtc	.+6      	; 0x79c <__divmodsi4+0xc>
 796:	00 94       	com	r0
 798:	0e 94 df 03 	call	0x7be	; 0x7be <__negsi2>
 79c:	57 fd       	sbrc	r21, 7
 79e:	07 d0       	rcall	.+14     	; 0x7ae <__divmodsi4_neg2>
 7a0:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <__udivmodsi4>
 7a4:	07 fc       	sbrc	r0, 7
 7a6:	03 d0       	rcall	.+6      	; 0x7ae <__divmodsi4_neg2>
 7a8:	4e f4       	brtc	.+18     	; 0x7bc <__divmodsi4_exit>
 7aa:	0c 94 df 03 	jmp	0x7be	; 0x7be <__negsi2>

000007ae <__divmodsi4_neg2>:
 7ae:	50 95       	com	r21
 7b0:	40 95       	com	r20
 7b2:	30 95       	com	r19
 7b4:	21 95       	neg	r18
 7b6:	3f 4f       	sbci	r19, 0xFF	; 255
 7b8:	4f 4f       	sbci	r20, 0xFF	; 255
 7ba:	5f 4f       	sbci	r21, 0xFF	; 255

000007bc <__divmodsi4_exit>:
 7bc:	08 95       	ret

000007be <__negsi2>:
 7be:	90 95       	com	r25
 7c0:	80 95       	com	r24
 7c2:	70 95       	com	r23
 7c4:	61 95       	neg	r22
 7c6:	7f 4f       	sbci	r23, 0xFF	; 255
 7c8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ca:	9f 4f       	sbci	r25, 0xFF	; 255
 7cc:	08 95       	ret

000007ce <__muluhisi3>:
 7ce:	0e 94 14 04 	call	0x828	; 0x828 <__umulhisi3>
 7d2:	a5 9f       	mul	r26, r21
 7d4:	90 0d       	add	r25, r0
 7d6:	b4 9f       	mul	r27, r20
 7d8:	90 0d       	add	r25, r0
 7da:	a4 9f       	mul	r26, r20
 7dc:	80 0d       	add	r24, r0
 7de:	91 1d       	adc	r25, r1
 7e0:	11 24       	eor	r1, r1
 7e2:	08 95       	ret

000007e4 <__udivmodsi4>:
 7e4:	a1 e2       	ldi	r26, 0x21	; 33
 7e6:	1a 2e       	mov	r1, r26
 7e8:	aa 1b       	sub	r26, r26
 7ea:	bb 1b       	sub	r27, r27
 7ec:	fd 01       	movw	r30, r26
 7ee:	0d c0       	rjmp	.+26     	; 0x80a <__udivmodsi4_ep>

000007f0 <__udivmodsi4_loop>:
 7f0:	aa 1f       	adc	r26, r26
 7f2:	bb 1f       	adc	r27, r27
 7f4:	ee 1f       	adc	r30, r30
 7f6:	ff 1f       	adc	r31, r31
 7f8:	a2 17       	cp	r26, r18
 7fa:	b3 07       	cpc	r27, r19
 7fc:	e4 07       	cpc	r30, r20
 7fe:	f5 07       	cpc	r31, r21
 800:	20 f0       	brcs	.+8      	; 0x80a <__udivmodsi4_ep>
 802:	a2 1b       	sub	r26, r18
 804:	b3 0b       	sbc	r27, r19
 806:	e4 0b       	sbc	r30, r20
 808:	f5 0b       	sbc	r31, r21

0000080a <__udivmodsi4_ep>:
 80a:	66 1f       	adc	r22, r22
 80c:	77 1f       	adc	r23, r23
 80e:	88 1f       	adc	r24, r24
 810:	99 1f       	adc	r25, r25
 812:	1a 94       	dec	r1
 814:	69 f7       	brne	.-38     	; 0x7f0 <__udivmodsi4_loop>
 816:	60 95       	com	r22
 818:	70 95       	com	r23
 81a:	80 95       	com	r24
 81c:	90 95       	com	r25
 81e:	9b 01       	movw	r18, r22
 820:	ac 01       	movw	r20, r24
 822:	bd 01       	movw	r22, r26
 824:	cf 01       	movw	r24, r30
 826:	08 95       	ret

00000828 <__umulhisi3>:
 828:	a2 9f       	mul	r26, r18
 82a:	b0 01       	movw	r22, r0
 82c:	b3 9f       	mul	r27, r19
 82e:	c0 01       	movw	r24, r0
 830:	a3 9f       	mul	r26, r19
 832:	70 0d       	add	r23, r0
 834:	81 1d       	adc	r24, r1
 836:	11 24       	eor	r1, r1
 838:	91 1d       	adc	r25, r1
 83a:	b2 9f       	mul	r27, r18
 83c:	70 0d       	add	r23, r0
 83e:	81 1d       	adc	r24, r1
 840:	11 24       	eor	r1, r1
 842:	91 1d       	adc	r25, r1
 844:	08 95       	ret

00000846 <_exit>:
 846:	f8 94       	cli

00000848 <__stop_program>:
 848:	ff cf       	rjmp	.-2      	; 0x848 <__stop_program>
