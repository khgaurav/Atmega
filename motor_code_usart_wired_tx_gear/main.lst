   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	Receive
  12               	Receive:
  13               	.LFB6:
  14               		.file 1 "main.c"
   1:main.c        **** #include <avr/io.h>
   2:main.c        **** #include <util/delay.h>
   3:main.c        **** #include<avr/interrupt.h>
   4:main.c        **** #define FOSC 1000000
   5:main.c        **** #define BAUD 9600
   6:main.c        **** #define ubbr_value FOSC/16/BAUD-1
   7:main.c        **** int ch=0;
   8:main.c        **** unsigned char Receive(void)
   9:main.c        **** {
  15               		.loc 1 9 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               	.L2:
  10:main.c        **** 	while (! (UCSRA & (1 << RXC)) );
  22               		.loc 1 10 0 discriminator 1
  23 0000 5F9B      		sbis 0xb,7
  24 0002 00C0      		rjmp .L2
  11:main.c        **** 	return UDR;
  25               		.loc 1 11 0
  26 0004 8CB1      		in r24,0xc
  12:main.c        **** }
  27               		.loc 1 12 0
  28 0006 0895      		ret
  29               		.cfi_endproc
  30               	.LFE6:
  32               	.global	Transmit
  34               	Transmit:
  35               	.LFB7:
  13:main.c        **** 
  14:main.c        **** void Transmit(unsigned char data)
  15:main.c        **** {
  36               		.loc 1 15 0
  37               		.cfi_startproc
  38               	/* prologue: function */
  39               	/* frame size = 0 */
  40               	/* stack size = 0 */
  41               	.L__stack_usage = 0
  42               	.LVL0:
  43               	.L6:
  16:main.c        **** 	while (! (UCSRA & (1 << UDRE)) );
  44               		.loc 1 16 0 discriminator 1
  45 0008 5D9B      		sbis 0xb,5
  46 000a 00C0      		rjmp .L6
  17:main.c        **** 	UDR = data;
  47               		.loc 1 17 0
  48 000c 8CB9      		out 0xc,r24
  49 000e 0895      		ret
  50               		.cfi_endproc
  51               	.LFE7:
  53               	.global	map
  55               	map:
  56               	.LFB8:
  18:main.c        **** }
  19:main.c        **** long map(long x, long in_min, long in_max, long out_min, long out_max)
  20:main.c        **** {
  57               		.loc 1 20 0
  58               		.cfi_startproc
  59               	.LVL1:
  60 0010 4F92      		push r4
  61               	.LCFI0:
  62               		.cfi_def_cfa_offset 3
  63               		.cfi_offset 4, -2
  64 0012 5F92      		push r5
  65               	.LCFI1:
  66               		.cfi_def_cfa_offset 4
  67               		.cfi_offset 5, -3
  68 0014 6F92      		push r6
  69               	.LCFI2:
  70               		.cfi_def_cfa_offset 5
  71               		.cfi_offset 6, -4
  72 0016 7F92      		push r7
  73               	.LCFI3:
  74               		.cfi_def_cfa_offset 6
  75               		.cfi_offset 7, -5
  76 0018 AF92      		push r10
  77               	.LCFI4:
  78               		.cfi_def_cfa_offset 7
  79               		.cfi_offset 10, -6
  80 001a BF92      		push r11
  81               	.LCFI5:
  82               		.cfi_def_cfa_offset 8
  83               		.cfi_offset 11, -7
  84 001c CF92      		push r12
  85               	.LCFI6:
  86               		.cfi_def_cfa_offset 9
  87               		.cfi_offset 12, -8
  88 001e DF92      		push r13
  89               	.LCFI7:
  90               		.cfi_def_cfa_offset 10
  91               		.cfi_offset 13, -9
  92 0020 EF92      		push r14
  93               	.LCFI8:
  94               		.cfi_def_cfa_offset 11
  95               		.cfi_offset 14, -10
  96 0022 FF92      		push r15
  97               	.LCFI9:
  98               		.cfi_def_cfa_offset 12
  99               		.cfi_offset 15, -11
 100 0024 0F93      		push r16
 101               	.LCFI10:
 102               		.cfi_def_cfa_offset 13
 103               		.cfi_offset 16, -12
 104 0026 1F93      		push r17
 105               	.LCFI11:
 106               		.cfi_def_cfa_offset 14
 107               		.cfi_offset 17, -13
 108 0028 CF93      		push r28
 109               	.LCFI12:
 110               		.cfi_def_cfa_offset 15
 111               		.cfi_offset 28, -14
 112 002a DF93      		push r29
 113               	.LCFI13:
 114               		.cfi_def_cfa_offset 16
 115               		.cfi_offset 29, -15
 116 002c CDB7      		in r28,__SP_L__
 117 002e DEB7      		in r29,__SP_H__
 118               	.LCFI14:
 119               		.cfi_def_cfa_register 28
 120               	/* prologue: function */
 121               	/* frame size = 0 */
 122               	/* stack size = 14 */
 123               	.L__stack_usage = 14
 124 0030 2901      		movw r4,r18
 125 0032 3A01      		movw r6,r20
  21:main.c        **** 	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 126               		.loc 1 21 0
 127 0034 9B01      		movw r18,r22
 128 0036 AC01      		movw r20,r24
 129               	.LVL2:
 130 0038 2419      		sub r18,r4
 131 003a 3509      		sbc r19,r5
 132 003c 4609      		sbc r20,r6
 133 003e 5709      		sbc r21,r7
 134 0040 8989      		ldd r24,Y+17
 135 0042 9A89      		ldd r25,Y+18
 136 0044 AB89      		ldd r26,Y+19
 137 0046 BC89      		ldd r27,Y+20
 138 0048 BC01      		movw r22,r24
 139 004a CD01      		movw r24,r26
 140               	.LVL3:
 141 004c 6A19      		sub r22,r10
 142 004e 7B09      		sbc r23,r11
 143 0050 8C09      		sbc r24,r12
 144 0052 9D09      		sbc r25,r13
 145 0054 0E94 0000 		call __mulsi3
 146 0058 A801      		movw r20,r16
 147 005a 9701      		movw r18,r14
 148 005c 2419      		sub r18,r4
 149 005e 3509      		sbc r19,r5
 150 0060 4609      		sbc r20,r6
 151 0062 5709      		sbc r21,r7
 152 0064 0E94 0000 		call __divmodsi4
 153 0068 CA01      		movw r24,r20
 154 006a B901      		movw r22,r18
 155 006c 6A0D      		add r22,r10
 156 006e 7B1D      		adc r23,r11
 157 0070 8C1D      		adc r24,r12
 158 0072 9D1D      		adc r25,r13
 159               	/* epilogue start */
  22:main.c        **** }
 160               		.loc 1 22 0
 161 0074 DF91      		pop r29
 162 0076 CF91      		pop r28
 163 0078 1F91      		pop r17
 164 007a 0F91      		pop r16
 165 007c FF90      		pop r15
 166 007e EF90      		pop r14
 167               	.LVL4:
 168 0080 DF90      		pop r13
 169 0082 CF90      		pop r12
 170 0084 BF90      		pop r11
 171 0086 AF90      		pop r10
 172               	.LVL5:
 173 0088 7F90      		pop r7
 174 008a 6F90      		pop r6
 175 008c 5F90      		pop r5
 176 008e 4F90      		pop r4
 177               	.LVL6:
 178 0090 0895      		ret
 179               		.cfi_endproc
 180               	.LFE8:
 182               		.section	.text.startup,"ax",@progbits
 183               	.global	main
 185               	main:
 186               	.LFB9:
  23:main.c        **** int main(void)
  24:main.c        **** {
 187               		.loc 1 24 0
 188               		.cfi_startproc
 189               	/* prologue: function */
 190               	/* frame size = 0 */
 191               	/* stack size = 0 */
 192               	.L__stack_usage = 0
  25:main.c        **** 	UCSRA = (1 << U2X);
 193               		.loc 1 25 0
 194 0000 82E0      		ldi r24,lo8(2)
 195 0002 8BB9      		out 0xb,r24
  26:main.c        **** 	UBRRH = (unsigned char) (ubbr_value >> 8);
 196               		.loc 1 26 0
 197 0004 10BC      		out 0x20,__zero_reg__
  27:main.c        **** 	UBRRL = (unsigned char) ubbr_value;
 198               		.loc 1 27 0
 199 0006 8FEF      		ldi r24,lo8(-1)
 200 0008 89B9      		out 0x9,r24
  28:main.c        **** 	UCSRB = (1 << TXEN);
 201               		.loc 1 28 0
 202 000a 88E0      		ldi r24,lo8(8)
 203 000c 8AB9      		out 0xa,r24
  29:main.c        **** 	UCSRC = (1 << URSEL)| (3 << UCSZ0);
 204               		.loc 1 29 0
 205 000e 86E8      		ldi r24,lo8(-122)
 206 0010 80BD      		out 0x20,r24
  30:main.c        **** 	ADMUX |= 1<< REFS0;													// ADC setup
 207               		.loc 1 30 0
 208 0012 3E9A      		sbi 0x7,6
  31:main.c        **** 	ADCSRA |= 1<< ADPS2;
 209               		.loc 1 31 0
 210 0014 329A      		sbi 0x6,2
  32:main.c        **** 	ADCSRA|=1<<ADIE;
 211               		.loc 1 32 0
 212 0016 339A      		sbi 0x6,3
  33:main.c        **** 	sei();
 213               		.loc 1 33 0
 214               	/* #APP */
 215               	 ;  33 "main.c" 1
 216 0018 7894      		sei
 217               	 ;  0 "" 2
  34:main.c        **** 	ADCSRA |= 1<< ADEN;
 218               		.loc 1 34 0
 219               	/* #NOAPP */
 220 001a 379A      		sbi 0x6,7
  35:main.c        **** 	ADCSRA|=(1<<ADSC);
 221               		.loc 1 35 0
 222 001c 369A      		sbi 0x6,6
 223               	.L11:
 224 001e 00C0      		rjmp .L11
 225               		.cfi_endproc
 226               	.LFE9:
 228               		.text
 229               	.global	__vector_14
 231               	__vector_14:
 232               	.LFB10:
  36:main.c        **** 	while (1);
  37:main.c        **** 
  38:main.c        **** }
  39:main.c        **** ISR(ADC_vect)
  40:main.c        **** {
 233               		.loc 1 40 0
 234               		.cfi_startproc
 235 0092 1F92      		push r1
 236               	.LCFI15:
 237               		.cfi_def_cfa_offset 3
 238               		.cfi_offset 1, -2
 239 0094 0F92      		push r0
 240               	.LCFI16:
 241               		.cfi_def_cfa_offset 4
 242               		.cfi_offset 0, -3
 243 0096 0FB6      		in r0,__SREG__
 244 0098 0F92      		push r0
 245 009a 1124      		clr __zero_reg__
 246 009c 2F93      		push r18
 247               	.LCFI17:
 248               		.cfi_def_cfa_offset 5
 249               		.cfi_offset 18, -4
 250 009e 3F93      		push r19
 251               	.LCFI18:
 252               		.cfi_def_cfa_offset 6
 253               		.cfi_offset 19, -5
 254 00a0 4F93      		push r20
 255               	.LCFI19:
 256               		.cfi_def_cfa_offset 7
 257               		.cfi_offset 20, -6
 258 00a2 5F93      		push r21
 259               	.LCFI20:
 260               		.cfi_def_cfa_offset 8
 261               		.cfi_offset 21, -7
 262 00a4 6F93      		push r22
 263               	.LCFI21:
 264               		.cfi_def_cfa_offset 9
 265               		.cfi_offset 22, -8
 266 00a6 7F93      		push r23
 267               	.LCFI22:
 268               		.cfi_def_cfa_offset 10
 269               		.cfi_offset 23, -9
 270 00a8 8F93      		push r24
 271               	.LCFI23:
 272               		.cfi_def_cfa_offset 11
 273               		.cfi_offset 24, -10
 274 00aa 9F93      		push r25
 275               	.LCFI24:
 276               		.cfi_def_cfa_offset 12
 277               		.cfi_offset 25, -11
 278 00ac AF93      		push r26
 279               	.LCFI25:
 280               		.cfi_def_cfa_offset 13
 281               		.cfi_offset 26, -12
 282 00ae BF93      		push r27
 283               	.LCFI26:
 284               		.cfi_def_cfa_offset 14
 285               		.cfi_offset 27, -13
 286 00b0 CF93      		push r28
 287               	.LCFI27:
 288               		.cfi_def_cfa_offset 15
 289               		.cfi_offset 28, -14
 290 00b2 EF93      		push r30
 291               	.LCFI28:
 292               		.cfi_def_cfa_offset 16
 293               		.cfi_offset 30, -15
 294 00b4 FF93      		push r31
 295               	.LCFI29:
 296               		.cfi_def_cfa_offset 17
 297               		.cfi_offset 31, -16
 298               	/* prologue: Signal */
 299               	/* frame size = 0 */
 300               	/* stack size = 16 */
 301               	.L__stack_usage = 16
  41:main.c        **** 	uint8_t t1 = ADCL;
 302               		.loc 1 41 0
 303 00b6 C4B1      		in r28,0x4
 304               	.LVL7:
  42:main.c        **** 	if(ch==0)
 305               		.loc 1 42 0
 306 00b8 8091 0000 		lds r24,ch
 307 00bc 9091 0000 		lds r25,ch+1
 308 00c0 0097      		sbiw r24,0
 309 00c2 01F4      		brne .L13
  43:main.c        **** 	{
  44:main.c        **** 		Transmit(0x11);
 310               		.loc 1 44 0
 311 00c4 81E1      		ldi r24,lo8(17)
 312 00c6 0E94 0000 		call Transmit
 313               	.LVL8:
  45:main.c        **** 		ch=1;
 314               		.loc 1 45 0
 315 00ca 81E0      		ldi r24,lo8(1)
 316 00cc 90E0      		ldi r25,0
 317 00ce 9093 0000 		sts ch+1,r25
 318 00d2 8093 0000 		sts ch,r24
  46:main.c        **** 		ADMUX |=(1<<MUX0);
 319               		.loc 1 46 0
 320 00d6 389A      		sbi 0x7,0
 321 00d8 00C0      		rjmp .L14
 322               	.L13:
  47:main.c        **** 	}
  48:main.c        **** 	else if(ch==1)
 323               		.loc 1 48 0
 324 00da 0197      		sbiw r24,1
 325 00dc 01F4      		brne .L15
  49:main.c        **** 	{
  50:main.c        **** 		Transmit(0x21);
 326               		.loc 1 50 0
 327 00de 81E2      		ldi r24,lo8(33)
 328 00e0 0E94 0000 		call Transmit
 329               	.LVL9:
  51:main.c        **** 		ch=2;
 330               		.loc 1 51 0
 331 00e4 82E0      		ldi r24,lo8(2)
 332 00e6 90E0      		ldi r25,0
 333 00e8 9093 0000 		sts ch+1,r25
 334 00ec 8093 0000 		sts ch,r24
  52:main.c        **** 		ADMUX |=(1<<MUX1);
 335               		.loc 1 52 0
 336 00f0 399A      		sbi 0x7,1
 337 00f2 00C0      		rjmp .L16
 338               	.L15:
  53:main.c        **** 		ADMUX &=~(1<<MUX0);
  54:main.c        **** 	}
  55:main.c        **** 	else
  56:main.c        **** 	{
  57:main.c        **** 		Transmit(0x31);
 339               		.loc 1 57 0
 340 00f4 81E3      		ldi r24,lo8(49)
 341 00f6 0E94 0000 		call Transmit
 342               	.LVL10:
  58:main.c        **** 		ch=0;
 343               		.loc 1 58 0
 344 00fa 1092 0000 		sts ch+1,__zero_reg__
 345 00fe 1092 0000 		sts ch,__zero_reg__
  59:main.c        **** 		ADMUX &=~(1<<MUX1);
 346               		.loc 1 59 0
 347 0102 3998      		cbi 0x7,1
 348               	.L16:
  60:main.c        **** 		ADMUX &=~(1<<MUX0);
 349               		.loc 1 60 0
 350 0104 3898      		cbi 0x7,0
 351               	.L14:
  61:main.c        **** 	}
  62:main.c        **** 	Transmit(t1);
 352               		.loc 1 62 0
 353 0106 8C2F      		mov r24,r28
 354 0108 0E94 0000 		call Transmit
 355               	.LVL11:
  63:main.c        **** 	Transmit(ADCH);
 356               		.loc 1 63 0
 357 010c 85B1      		in r24,0x5
 358 010e 0E94 0000 		call Transmit
 359               	.LVL12:
  64:main.c        **** 	ADCSRA |= (1<<ADSC);
 360               		.loc 1 64 0
 361 0112 369A      		sbi 0x6,6
 362               	/* epilogue start */
  65:main.c        **** }
 363               		.loc 1 65 0
 364 0114 FF91      		pop r31
 365 0116 EF91      		pop r30
 366 0118 CF91      		pop r28
 367               	.LVL13:
 368 011a BF91      		pop r27
 369 011c AF91      		pop r26
 370 011e 9F91      		pop r25
 371 0120 8F91      		pop r24
 372 0122 7F91      		pop r23
 373 0124 6F91      		pop r22
 374 0126 5F91      		pop r21
 375 0128 4F91      		pop r20
 376 012a 3F91      		pop r19
 377 012c 2F91      		pop r18
 378 012e 0F90      		pop r0
 379 0130 0FBE      		out __SREG__,r0
 380 0132 0F90      		pop r0
 381 0134 1F90      		pop r1
 382 0136 1895      		reti
 383               		.cfi_endproc
 384               	.LFE10:
 386               	.global	ch
 387               		.section .bss
 390               	ch:
 391 0000 0000      		.zero	2
 392               		.text
 393               	.Letext0:
 394               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccXCbgXf.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccXCbgXf.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccXCbgXf.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccXCbgXf.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccXCbgXf.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccXCbgXf.s:12     .text:0000000000000000 Receive
     /tmp/ccXCbgXf.s:34     .text:0000000000000008 Transmit
     /tmp/ccXCbgXf.s:55     .text:0000000000000010 map
     /tmp/ccXCbgXf.s:185    .text.startup:0000000000000000 main
     /tmp/ccXCbgXf.s:231    .text:0000000000000092 __vector_14
     /tmp/ccXCbgXf.s:390    .bss:0000000000000000 ch

UNDEFINED SYMBOLS
__mulsi3
__divmodsi4
__do_clear_bss
