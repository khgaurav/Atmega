
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006bc  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000006bc  00000730  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  00000730  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000744  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000780  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000079a  00000000  00000000  000007a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000612  00000000  00000000  00000f42  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000193  00000000  00000000  00001554  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c0  00000000  00000000  000016e8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000349  00000000  00000000  000017a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003ea  00000000  00000000  00001af1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001edb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 80 00 	call	0x100	; 0x100 <main>
  64:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <Receive>:
#define FOSC 1000000// Clock Speed
#define BAUD 9600
#define ubbr_value FOSC/16/BAUD-1
int Receive()
{
	while (! (UCSRA & (1 << RXC)) );
  6c:	5f 9b       	sbis	0x0b, 7	; 11
  6e:	fe cf       	rjmp	.-4      	; 0x6c <Receive>
	return UDR;
  70:	8c b1       	in	r24, 0x0c	; 12
}
  72:	90 e0       	ldi	r25, 0x00	; 0
  74:	08 95       	ret

00000076 <Transmit>:

void Transmit(unsigned char data)
{
	while (! (UCSRA & (1 << UDRE)) );
  76:	5d 9b       	sbis	0x0b, 5	; 11
  78:	fe cf       	rjmp	.-4      	; 0x76 <Transmit>
	UDR = data;
  7a:	8c b9       	out	0x0c, r24	; 12
  7c:	08 95       	ret

0000007e <map>:

}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
  7e:	4f 92       	push	r4
  80:	5f 92       	push	r5
  82:	6f 92       	push	r6
  84:	7f 92       	push	r7
  86:	af 92       	push	r10
  88:	bf 92       	push	r11
  8a:	cf 92       	push	r12
  8c:	df 92       	push	r13
  8e:	ef 92       	push	r14
  90:	ff 92       	push	r15
  92:	0f 93       	push	r16
  94:	1f 93       	push	r17
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	29 01       	movw	r4, r18
  a0:	3a 01       	movw	r6, r20
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  a2:	9b 01       	movw	r18, r22
  a4:	ac 01       	movw	r20, r24
  a6:	24 19       	sub	r18, r4
  a8:	35 09       	sbc	r19, r5
  aa:	46 09       	sbc	r20, r6
  ac:	57 09       	sbc	r21, r7
  ae:	89 89       	ldd	r24, Y+17	; 0x11
  b0:	9a 89       	ldd	r25, Y+18	; 0x12
  b2:	ab 89       	ldd	r26, Y+19	; 0x13
  b4:	bc 89       	ldd	r27, Y+20	; 0x14
  b6:	bc 01       	movw	r22, r24
  b8:	cd 01       	movw	r24, r26
  ba:	6a 19       	sub	r22, r10
  bc:	7b 09       	sbc	r23, r11
  be:	8c 09       	sbc	r24, r12
  c0:	9d 09       	sbc	r25, r13
  c2:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <__mulsi3>
  c6:	a8 01       	movw	r20, r16
  c8:	97 01       	movw	r18, r14
  ca:	24 19       	sub	r18, r4
  cc:	35 09       	sbc	r19, r5
  ce:	46 09       	sbc	r20, r6
  d0:	57 09       	sbc	r21, r7
  d2:	0e 94 01 03 	call	0x602	; 0x602 <__divmodsi4>
  d6:	ca 01       	movw	r24, r20
  d8:	b9 01       	movw	r22, r18
  da:	6a 0d       	add	r22, r10
  dc:	7b 1d       	adc	r23, r11
  de:	8c 1d       	adc	r24, r12
  e0:	9d 1d       	adc	r25, r13
}
  e2:	df 91       	pop	r29
  e4:	cf 91       	pop	r28
  e6:	1f 91       	pop	r17
  e8:	0f 91       	pop	r16
  ea:	ff 90       	pop	r15
  ec:	ef 90       	pop	r14
  ee:	df 90       	pop	r13
  f0:	cf 90       	pop	r12
  f2:	bf 90       	pop	r11
  f4:	af 90       	pop	r10
  f6:	7f 90       	pop	r7
  f8:	6f 90       	pop	r6
  fa:	5f 90       	pop	r5
  fc:	4f 90       	pop	r4
  fe:	08 95       	ret

00000100 <main>:

int main(void)
{
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	00 d0       	rcall	.+0      	; 0x106 <main+0x6>
 106:	00 d0       	rcall	.+0      	; 0x108 <main+0x8>
 108:	cd b7       	in	r28, 0x3d	; 61
 10a:	de b7       	in	r29, 0x3e	; 62
  TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 10c:	83 b7       	in	r24, 0x33	; 51
 10e:	89 66       	ori	r24, 0x69	; 105
 110:	83 bf       	out	0x33, r24	; 51
DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 112:	87 b3       	in	r24, 0x17	; 23
 114:	8b 60       	ori	r24, 0x0B	; 11
 116:	87 bb       	out	0x17, r24	; 23
TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 118:	85 b5       	in	r24, 0x25	; 37
 11a:	89 66       	ori	r24, 0x69	; 105
 11c:	85 bd       	out	0x25, r24	; 37
DDRD |= 1<< PB7 | 1<< PB2;
 11e:	81 b3       	in	r24, 0x11	; 17
 120:	84 68       	ori	r24, 0x84	; 132
 122:	81 bb       	out	0x11, r24	; 17
PORTB &= ~(1<< PINB0);
 124:	c0 98       	cbi	0x18, 0	; 24
PORTD &= ~(1<< PIND2);
 126:	92 98       	cbi	0x12, 2	; 18
 UCSRA = (1 << U2X);
 128:	82 e0       	ldi	r24, 0x02	; 2
 12a:	8b b9       	out	0x0b, r24	; 11
  UBRRH = (unsigned char) (ubbr_value >> 8);
 12c:	10 bc       	out	0x20, r1	; 32
  UBRRL = (unsigned char) ubbr_value;
 12e:	8f ef       	ldi	r24, 0xFF	; 255
 130:	89 b9       	out	0x09, r24	; 9
  UCSRB = (1 << RXEN);
 132:	80 e1       	ldi	r24, 0x10	; 16
 134:	8a b9       	out	0x0a, r24	; 10
  UCSRC = (1 << URSEL) | (3 << UCSZ0);
 136:	86 e8       	ldi	r24, 0x86	; 134
 138:	80 bd       	out	0x20, r24	; 32
    uint16_t y=(Receive())<<8 | y1;
    int x2=x-512;
    int y2=512-y;
    int x3 = x2;
    int y3 = y2;
    int x4= (x3*0.707)+(y3*0.707);
 13a:	00 e0       	ldi	r16, 0x00	; 0
 13c:	12 e0       	ldi	r17, 0x02	; 2
	UDR = data;

}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 13e:	86 ea       	ldi	r24, 0xA6	; 166
 140:	88 2e       	mov	r8, r24
 142:	85 e0       	ldi	r24, 0x05	; 5
 144:	98 2e       	mov	r9, r24
 146:	a1 2c       	mov	r10, r1
 148:	b1 2c       	mov	r11, r1
  UCSRC = (1 << URSEL) | (3 << UCSZ0);


	while (1)
	{
    int x1= Receive();
 14a:	0e 94 36 00 	call	0x6c	; 0x6c <Receive>
 14e:	9c 83       	std	Y+4, r25	; 0x04
 150:	8b 83       	std	Y+3, r24	; 0x03
    uint16_t x = (Receive())<<8 | x1;
 152:	0e 94 36 00 	call	0x6c	; 0x6c <Receive>
 156:	d8 2e       	mov	r13, r24
    int y1=Receive();
 158:	0e 94 36 00 	call	0x6c	; 0x6c <Receive>
 15c:	7c 01       	movw	r14, r24
    uint16_t y=(Receive())<<8 | y1;
 15e:	0e 94 36 00 	call	0x6c	; 0x6c <Receive>
    int x2=x-512;
 162:	da 82       	std	Y+2, r13	; 0x02
 164:	19 82       	std	Y+1, r1	; 0x01
 166:	2b 81       	ldd	r18, Y+3	; 0x03
 168:	3c 81       	ldd	r19, Y+4	; 0x04
 16a:	49 81       	ldd	r20, Y+1	; 0x01
 16c:	5a 81       	ldd	r21, Y+2	; 0x02
 16e:	24 2b       	or	r18, r20
 170:	35 2b       	or	r19, r21
 172:	32 50       	subi	r19, 0x02	; 2
 174:	3c 83       	std	Y+4, r19	; 0x04
 176:	2b 83       	std	Y+3, r18	; 0x03
    int y2=512-y;
    int x3 = x2;
    int y3 = y2;
    int x4= (x3*0.707)+(y3*0.707);
 178:	38 2e       	mov	r3, r24
 17a:	21 2c       	mov	r2, r1
 17c:	e2 28       	or	r14, r2
 17e:	f3 28       	or	r15, r3
 180:	b8 01       	movw	r22, r16
 182:	6e 19       	sub	r22, r14
 184:	7f 09       	sbc	r23, r15
 186:	07 2e       	mov	r0, r23
 188:	00 0c       	add	r0, r0
 18a:	88 0b       	sbc	r24, r24
 18c:	99 0b       	sbc	r25, r25
 18e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__floatsisf>
 192:	24 ef       	ldi	r18, 0xF4	; 244
 194:	3d ef       	ldi	r19, 0xFD	; 253
 196:	44 e3       	ldi	r20, 0x34	; 52
 198:	5f e3       	ldi	r21, 0x3F	; 63
 19a:	0e 94 84 02 	call	0x508	; 0x508 <__mulsf3>
 19e:	2b 01       	movw	r4, r22
 1a0:	3c 01       	movw	r6, r24
	UDR = data;

}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 1a2:	2b 81       	ldd	r18, Y+3	; 0x03
 1a4:	3c 81       	ldd	r19, Y+4	; 0x04
 1a6:	b9 01       	movw	r22, r18
 1a8:	33 0f       	add	r19, r19
 1aa:	88 0b       	sbc	r24, r24
 1ac:	99 0b       	sbc	r25, r25
 1ae:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__floatsisf>
 1b2:	24 ef       	ldi	r18, 0xF4	; 244
 1b4:	3d ef       	ldi	r19, 0xFD	; 253
 1b6:	44 e3       	ldi	r20, 0x34	; 52
 1b8:	5f e3       	ldi	r21, 0x3F	; 63
 1ba:	0e 94 84 02 	call	0x508	; 0x508 <__mulsf3>
 1be:	a3 01       	movw	r20, r6
 1c0:	92 01       	movw	r18, r4
 1c2:	0e 94 54 01 	call	0x2a8	; 0x2a8 <__addsf3>
 1c6:	0e 94 c0 01 	call	0x380	; 0x380 <__fixsfsi>
 1ca:	cb 01       	movw	r24, r22
 1cc:	77 0f       	add	r23, r23
 1ce:	aa 0b       	sbc	r26, r26
 1d0:	bb 0b       	sbc	r27, r27
 1d2:	9c 01       	movw	r18, r24
 1d4:	ad 01       	movw	r20, r26
 1d6:	2d 52       	subi	r18, 0x2D	; 45
 1d8:	3d 4f       	sbci	r19, 0xFD	; 253
 1da:	4f 4f       	sbci	r20, 0xFF	; 255
 1dc:	5f 4f       	sbci	r21, 0xFF	; 255
 1de:	ae ef       	ldi	r26, 0xFE	; 254
 1e0:	b1 e0       	ldi	r27, 0x01	; 1
 1e2:	0e 94 20 03 	call	0x640	; 0x640 <__muluhisi3>
 1e6:	a5 01       	movw	r20, r10
 1e8:	94 01       	movw	r18, r8
 1ea:	0e 94 01 03 	call	0x602	; 0x602 <__divmodsi4>
 1ee:	69 01       	movw	r12, r18
 1f0:	7a 01       	movw	r14, r20
 1f2:	8f ef       	ldi	r24, 0xFF	; 255
 1f4:	c8 1a       	sub	r12, r24
 1f6:	d1 08       	sbc	r13, r1
 1f8:	e1 08       	sbc	r14, r1
 1fa:	f1 08       	sbc	r15, r1
    int y3 = y2;
    int x4= (x3*0.707)+(y3*0.707);
    int y4=(-x3*0.707)+(y3*0.707);

    int x5=map(x4,-723,723,-255,255);
    int y5=map(y4,-723,723,-255,255);
 1fc:	2b 81       	ldd	r18, Y+3	; 0x03
 1fe:	3c 81       	ldd	r19, Y+4	; 0x04
 200:	31 95       	neg	r19
 202:	21 95       	neg	r18
 204:	31 09       	sbc	r19, r1
 206:	b9 01       	movw	r22, r18
 208:	33 0f       	add	r19, r19
 20a:	88 0b       	sbc	r24, r24
 20c:	99 0b       	sbc	r25, r25
 20e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__floatsisf>
 212:	24 ef       	ldi	r18, 0xF4	; 244
 214:	3d ef       	ldi	r19, 0xFD	; 253
 216:	44 e3       	ldi	r20, 0x34	; 52
 218:	5f e3       	ldi	r21, 0x3F	; 63
 21a:	0e 94 84 02 	call	0x508	; 0x508 <__mulsf3>
 21e:	a3 01       	movw	r20, r6
 220:	92 01       	movw	r18, r4
 222:	0e 94 54 01 	call	0x2a8	; 0x2a8 <__addsf3>
 226:	0e 94 c0 01 	call	0x380	; 0x380 <__fixsfsi>
 22a:	cb 01       	movw	r24, r22
 22c:	77 0f       	add	r23, r23
 22e:	aa 0b       	sbc	r26, r26
 230:	bb 0b       	sbc	r27, r27
 232:	9c 01       	movw	r18, r24
 234:	ad 01       	movw	r20, r26
 236:	2d 52       	subi	r18, 0x2D	; 45
 238:	3d 4f       	sbci	r19, 0xFD	; 253
 23a:	4f 4f       	sbci	r20, 0xFF	; 255
 23c:	5f 4f       	sbci	r21, 0xFF	; 255
 23e:	ae ef       	ldi	r26, 0xFE	; 254
 240:	b1 e0       	ldi	r27, 0x01	; 1
 242:	0e 94 20 03 	call	0x640	; 0x640 <__muluhisi3>
 246:	a5 01       	movw	r20, r10
 248:	94 01       	movw	r18, r8
 24a:	0e 94 01 03 	call	0x602	; 0x602 <__divmodsi4>
 24e:	da 01       	movw	r26, r20
 250:	c9 01       	movw	r24, r18
 252:	8f 5f       	subi	r24, 0xFF	; 255
 254:	91 09       	sbc	r25, r1
 256:	a1 09       	sbc	r26, r1
 258:	b1 09       	sbc	r27, r1
		y5=y5+40;
 25a:	88 96       	adiw	r24, 0x28	; 40
		if(x5<20&&x5>-20)
 25c:	96 01       	movw	r18, r12
 25e:	2d 5e       	subi	r18, 0xED	; 237
 260:	3f 4f       	sbci	r19, 0xFF	; 255
 262:	27 32       	cpi	r18, 0x27	; 39
 264:	31 05       	cpc	r19, r1
 266:	10 f4       	brcc	.+4      	; 0x26c <main+0x16c>
		x5=0;
 268:	c1 2c       	mov	r12, r1
 26a:	d1 2c       	mov	r13, r1

		if(y5<20&&y5>-20)
 26c:	9c 01       	movw	r18, r24
 26e:	2d 5e       	subi	r18, 0xED	; 237
 270:	3f 4f       	sbci	r19, 0xFF	; 255
 272:	27 32       	cpi	r18, 0x27	; 39
 274:	31 05       	cpc	r19, r1
 276:	10 f4       	brcc	.+4      	; 0x27c <main+0x17c>
		y5=0;
 278:	80 e0       	ldi	r24, 0x00	; 0
 27a:	90 e0       	ldi	r25, 0x00	; 0

		if(x5>0)
 27c:	1c 14       	cp	r1, r12
 27e:	1d 04       	cpc	r1, r13
 280:	1c f4       	brge	.+6      	; 0x288 <main+0x188>
		{
			OCR0=x5;
 282:	cc be       	out	0x3c, r12	; 60
			PORTB|=1<<PB0;
 284:	c0 9a       	sbi	0x18, 0	; 24
 286:	03 c0       	rjmp	.+6      	; 0x28e <main+0x18e>
		}
		else
		{
			OCR0=-x5;
 288:	c1 94       	neg	r12
 28a:	cc be       	out	0x3c, r12	; 60
			PORTB&=~(1<<PB0);
 28c:	c0 98       	cbi	0x18, 0	; 24
		}
		if(y5>0)
 28e:	18 16       	cp	r1, r24
 290:	19 06       	cpc	r1, r25
 292:	1c f4       	brge	.+6      	; 0x29a <main+0x19a>
		{
		OCR2=y5;
 294:	83 bd       	out	0x23, r24	; 35
		PORTD|=1<<PD2;
 296:	92 9a       	sbi	0x12, 2	; 18
 298:	58 cf       	rjmp	.-336    	; 0x14a <main+0x4a>
		}
		else
		{
			OCR2=-y5;
 29a:	81 95       	neg	r24
 29c:	83 bd       	out	0x23, r24	; 35
			PORTD&=~1<<PD2;
 29e:	82 b3       	in	r24, 0x12	; 18
 2a0:	88 7f       	andi	r24, 0xF8	; 248
 2a2:	82 bb       	out	0x12, r24	; 18
 2a4:	52 cf       	rjmp	.-348    	; 0x14a <main+0x4a>

000002a6 <__subsf3>:
 2a6:	50 58       	subi	r21, 0x80	; 128

000002a8 <__addsf3>:
 2a8:	bb 27       	eor	r27, r27
 2aa:	aa 27       	eor	r26, r26
 2ac:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <__addsf3x>
 2b0:	0c 94 4a 02 	jmp	0x494	; 0x494 <__fp_round>
 2b4:	0e 94 3c 02 	call	0x478	; 0x478 <__fp_pscA>
 2b8:	38 f0       	brcs	.+14     	; 0x2c8 <__addsf3+0x20>
 2ba:	0e 94 43 02 	call	0x486	; 0x486 <__fp_pscB>
 2be:	20 f0       	brcs	.+8      	; 0x2c8 <__addsf3+0x20>
 2c0:	39 f4       	brne	.+14     	; 0x2d0 <__addsf3+0x28>
 2c2:	9f 3f       	cpi	r25, 0xFF	; 255
 2c4:	19 f4       	brne	.+6      	; 0x2cc <__addsf3+0x24>
 2c6:	26 f4       	brtc	.+8      	; 0x2d0 <__addsf3+0x28>
 2c8:	0c 94 39 02 	jmp	0x472	; 0x472 <__fp_nan>
 2cc:	0e f4       	brtc	.+2      	; 0x2d0 <__addsf3+0x28>
 2ce:	e0 95       	com	r30
 2d0:	e7 fb       	bst	r30, 7
 2d2:	0c 94 33 02 	jmp	0x466	; 0x466 <__fp_inf>

000002d6 <__addsf3x>:
 2d6:	e9 2f       	mov	r30, r25
 2d8:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__fp_split3>
 2dc:	58 f3       	brcs	.-42     	; 0x2b4 <__addsf3+0xc>
 2de:	ba 17       	cp	r27, r26
 2e0:	62 07       	cpc	r22, r18
 2e2:	73 07       	cpc	r23, r19
 2e4:	84 07       	cpc	r24, r20
 2e6:	95 07       	cpc	r25, r21
 2e8:	20 f0       	brcs	.+8      	; 0x2f2 <__addsf3x+0x1c>
 2ea:	79 f4       	brne	.+30     	; 0x30a <__addsf3x+0x34>
 2ec:	a6 f5       	brtc	.+104    	; 0x356 <__addsf3x+0x80>
 2ee:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_zero>
 2f2:	0e f4       	brtc	.+2      	; 0x2f6 <__addsf3x+0x20>
 2f4:	e0 95       	com	r30
 2f6:	0b 2e       	mov	r0, r27
 2f8:	ba 2f       	mov	r27, r26
 2fa:	a0 2d       	mov	r26, r0
 2fc:	0b 01       	movw	r0, r22
 2fe:	b9 01       	movw	r22, r18
 300:	90 01       	movw	r18, r0
 302:	0c 01       	movw	r0, r24
 304:	ca 01       	movw	r24, r20
 306:	a0 01       	movw	r20, r0
 308:	11 24       	eor	r1, r1
 30a:	ff 27       	eor	r31, r31
 30c:	59 1b       	sub	r21, r25
 30e:	99 f0       	breq	.+38     	; 0x336 <__addsf3x+0x60>
 310:	59 3f       	cpi	r21, 0xF9	; 249
 312:	50 f4       	brcc	.+20     	; 0x328 <__addsf3x+0x52>
 314:	50 3e       	cpi	r21, 0xE0	; 224
 316:	68 f1       	brcs	.+90     	; 0x372 <__addsf3x+0x9c>
 318:	1a 16       	cp	r1, r26
 31a:	f0 40       	sbci	r31, 0x00	; 0
 31c:	a2 2f       	mov	r26, r18
 31e:	23 2f       	mov	r18, r19
 320:	34 2f       	mov	r19, r20
 322:	44 27       	eor	r20, r20
 324:	58 5f       	subi	r21, 0xF8	; 248
 326:	f3 cf       	rjmp	.-26     	; 0x30e <__addsf3x+0x38>
 328:	46 95       	lsr	r20
 32a:	37 95       	ror	r19
 32c:	27 95       	ror	r18
 32e:	a7 95       	ror	r26
 330:	f0 40       	sbci	r31, 0x00	; 0
 332:	53 95       	inc	r21
 334:	c9 f7       	brne	.-14     	; 0x328 <__addsf3x+0x52>
 336:	7e f4       	brtc	.+30     	; 0x356 <__addsf3x+0x80>
 338:	1f 16       	cp	r1, r31
 33a:	ba 0b       	sbc	r27, r26
 33c:	62 0b       	sbc	r22, r18
 33e:	73 0b       	sbc	r23, r19
 340:	84 0b       	sbc	r24, r20
 342:	ba f0       	brmi	.+46     	; 0x372 <__addsf3x+0x9c>
 344:	91 50       	subi	r25, 0x01	; 1
 346:	a1 f0       	breq	.+40     	; 0x370 <__addsf3x+0x9a>
 348:	ff 0f       	add	r31, r31
 34a:	bb 1f       	adc	r27, r27
 34c:	66 1f       	adc	r22, r22
 34e:	77 1f       	adc	r23, r23
 350:	88 1f       	adc	r24, r24
 352:	c2 f7       	brpl	.-16     	; 0x344 <__addsf3x+0x6e>
 354:	0e c0       	rjmp	.+28     	; 0x372 <__addsf3x+0x9c>
 356:	ba 0f       	add	r27, r26
 358:	62 1f       	adc	r22, r18
 35a:	73 1f       	adc	r23, r19
 35c:	84 1f       	adc	r24, r20
 35e:	48 f4       	brcc	.+18     	; 0x372 <__addsf3x+0x9c>
 360:	87 95       	ror	r24
 362:	77 95       	ror	r23
 364:	67 95       	ror	r22
 366:	b7 95       	ror	r27
 368:	f7 95       	ror	r31
 36a:	9e 3f       	cpi	r25, 0xFE	; 254
 36c:	08 f0       	brcs	.+2      	; 0x370 <__addsf3x+0x9a>
 36e:	b0 cf       	rjmp	.-160    	; 0x2d0 <__addsf3+0x28>
 370:	93 95       	inc	r25
 372:	88 0f       	add	r24, r24
 374:	08 f0       	brcs	.+2      	; 0x378 <__addsf3x+0xa2>
 376:	99 27       	eor	r25, r25
 378:	ee 0f       	add	r30, r30
 37a:	97 95       	ror	r25
 37c:	87 95       	ror	r24
 37e:	08 95       	ret

00000380 <__fixsfsi>:
 380:	0e 94 c7 01 	call	0x38e	; 0x38e <__fixunssfsi>
 384:	68 94       	set
 386:	b1 11       	cpse	r27, r1
 388:	0c 94 7e 02 	jmp	0x4fc	; 0x4fc <__fp_szero>
 38c:	08 95       	ret

0000038e <__fixunssfsi>:
 38e:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__fp_splitA>
 392:	88 f0       	brcs	.+34     	; 0x3b6 <__fixunssfsi+0x28>
 394:	9f 57       	subi	r25, 0x7F	; 127
 396:	98 f0       	brcs	.+38     	; 0x3be <__fixunssfsi+0x30>
 398:	b9 2f       	mov	r27, r25
 39a:	99 27       	eor	r25, r25
 39c:	b7 51       	subi	r27, 0x17	; 23
 39e:	b0 f0       	brcs	.+44     	; 0x3cc <__fixunssfsi+0x3e>
 3a0:	e1 f0       	breq	.+56     	; 0x3da <__fixunssfsi+0x4c>
 3a2:	66 0f       	add	r22, r22
 3a4:	77 1f       	adc	r23, r23
 3a6:	88 1f       	adc	r24, r24
 3a8:	99 1f       	adc	r25, r25
 3aa:	1a f0       	brmi	.+6      	; 0x3b2 <__fixunssfsi+0x24>
 3ac:	ba 95       	dec	r27
 3ae:	c9 f7       	brne	.-14     	; 0x3a2 <__fixunssfsi+0x14>
 3b0:	14 c0       	rjmp	.+40     	; 0x3da <__fixunssfsi+0x4c>
 3b2:	b1 30       	cpi	r27, 0x01	; 1
 3b4:	91 f0       	breq	.+36     	; 0x3da <__fixunssfsi+0x4c>
 3b6:	0e 94 7d 02 	call	0x4fa	; 0x4fa <__fp_zero>
 3ba:	b1 e0       	ldi	r27, 0x01	; 1
 3bc:	08 95       	ret
 3be:	0c 94 7d 02 	jmp	0x4fa	; 0x4fa <__fp_zero>
 3c2:	67 2f       	mov	r22, r23
 3c4:	78 2f       	mov	r23, r24
 3c6:	88 27       	eor	r24, r24
 3c8:	b8 5f       	subi	r27, 0xF8	; 248
 3ca:	39 f0       	breq	.+14     	; 0x3da <__fixunssfsi+0x4c>
 3cc:	b9 3f       	cpi	r27, 0xF9	; 249
 3ce:	cc f3       	brlt	.-14     	; 0x3c2 <__fixunssfsi+0x34>
 3d0:	86 95       	lsr	r24
 3d2:	77 95       	ror	r23
 3d4:	67 95       	ror	r22
 3d6:	b3 95       	inc	r27
 3d8:	d9 f7       	brne	.-10     	; 0x3d0 <__fixunssfsi+0x42>
 3da:	3e f4       	brtc	.+14     	; 0x3ea <__fixunssfsi+0x5c>
 3dc:	90 95       	com	r25
 3de:	80 95       	com	r24
 3e0:	70 95       	com	r23
 3e2:	61 95       	neg	r22
 3e4:	7f 4f       	sbci	r23, 0xFF	; 255
 3e6:	8f 4f       	sbci	r24, 0xFF	; 255
 3e8:	9f 4f       	sbci	r25, 0xFF	; 255
 3ea:	08 95       	ret

000003ec <__floatunsisf>:
 3ec:	e8 94       	clt
 3ee:	09 c0       	rjmp	.+18     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>

000003f0 <__floatsisf>:
 3f0:	97 fb       	bst	r25, 7
 3f2:	3e f4       	brtc	.+14     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3f4:	90 95       	com	r25
 3f6:	80 95       	com	r24
 3f8:	70 95       	com	r23
 3fa:	61 95       	neg	r22
 3fc:	7f 4f       	sbci	r23, 0xFF	; 255
 3fe:	8f 4f       	sbci	r24, 0xFF	; 255
 400:	9f 4f       	sbci	r25, 0xFF	; 255
 402:	99 23       	and	r25, r25
 404:	a9 f0       	breq	.+42     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 406:	f9 2f       	mov	r31, r25
 408:	96 e9       	ldi	r25, 0x96	; 150
 40a:	bb 27       	eor	r27, r27
 40c:	93 95       	inc	r25
 40e:	f6 95       	lsr	r31
 410:	87 95       	ror	r24
 412:	77 95       	ror	r23
 414:	67 95       	ror	r22
 416:	b7 95       	ror	r27
 418:	f1 11       	cpse	r31, r1
 41a:	f8 cf       	rjmp	.-16     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 41c:	fa f4       	brpl	.+62     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 41e:	bb 0f       	add	r27, r27
 420:	11 f4       	brne	.+4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 422:	60 ff       	sbrs	r22, 0
 424:	1b c0       	rjmp	.+54     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 426:	6f 5f       	subi	r22, 0xFF	; 255
 428:	7f 4f       	sbci	r23, 0xFF	; 255
 42a:	8f 4f       	sbci	r24, 0xFF	; 255
 42c:	9f 4f       	sbci	r25, 0xFF	; 255
 42e:	16 c0       	rjmp	.+44     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 430:	88 23       	and	r24, r24
 432:	11 f0       	breq	.+4      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 434:	96 e9       	ldi	r25, 0x96	; 150
 436:	11 c0       	rjmp	.+34     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 438:	77 23       	and	r23, r23
 43a:	21 f0       	breq	.+8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43c:	9e e8       	ldi	r25, 0x8E	; 142
 43e:	87 2f       	mov	r24, r23
 440:	76 2f       	mov	r23, r22
 442:	05 c0       	rjmp	.+10     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 444:	66 23       	and	r22, r22
 446:	71 f0       	breq	.+28     	; 0x464 <__stack+0x5>
 448:	96 e8       	ldi	r25, 0x86	; 134
 44a:	86 2f       	mov	r24, r22
 44c:	70 e0       	ldi	r23, 0x00	; 0
 44e:	60 e0       	ldi	r22, 0x00	; 0
 450:	2a f0       	brmi	.+10     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 452:	9a 95       	dec	r25
 454:	66 0f       	add	r22, r22
 456:	77 1f       	adc	r23, r23
 458:	88 1f       	adc	r24, r24
 45a:	da f7       	brpl	.-10     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 45c:	88 0f       	add	r24, r24
 45e:	96 95       	lsr	r25
 460:	87 95       	ror	r24
 462:	97 f9       	bld	r25, 7
 464:	08 95       	ret

00000466 <__fp_inf>:
 466:	97 f9       	bld	r25, 7
 468:	9f 67       	ori	r25, 0x7F	; 127
 46a:	80 e8       	ldi	r24, 0x80	; 128
 46c:	70 e0       	ldi	r23, 0x00	; 0
 46e:	60 e0       	ldi	r22, 0x00	; 0
 470:	08 95       	ret

00000472 <__fp_nan>:
 472:	9f ef       	ldi	r25, 0xFF	; 255
 474:	80 ec       	ldi	r24, 0xC0	; 192
 476:	08 95       	ret

00000478 <__fp_pscA>:
 478:	00 24       	eor	r0, r0
 47a:	0a 94       	dec	r0
 47c:	16 16       	cp	r1, r22
 47e:	17 06       	cpc	r1, r23
 480:	18 06       	cpc	r1, r24
 482:	09 06       	cpc	r0, r25
 484:	08 95       	ret

00000486 <__fp_pscB>:
 486:	00 24       	eor	r0, r0
 488:	0a 94       	dec	r0
 48a:	12 16       	cp	r1, r18
 48c:	13 06       	cpc	r1, r19
 48e:	14 06       	cpc	r1, r20
 490:	05 06       	cpc	r0, r21
 492:	08 95       	ret

00000494 <__fp_round>:
 494:	09 2e       	mov	r0, r25
 496:	03 94       	inc	r0
 498:	00 0c       	add	r0, r0
 49a:	11 f4       	brne	.+4      	; 0x4a0 <__fp_round+0xc>
 49c:	88 23       	and	r24, r24
 49e:	52 f0       	brmi	.+20     	; 0x4b4 <__fp_round+0x20>
 4a0:	bb 0f       	add	r27, r27
 4a2:	40 f4       	brcc	.+16     	; 0x4b4 <__fp_round+0x20>
 4a4:	bf 2b       	or	r27, r31
 4a6:	11 f4       	brne	.+4      	; 0x4ac <__fp_round+0x18>
 4a8:	60 ff       	sbrs	r22, 0
 4aa:	04 c0       	rjmp	.+8      	; 0x4b4 <__fp_round+0x20>
 4ac:	6f 5f       	subi	r22, 0xFF	; 255
 4ae:	7f 4f       	sbci	r23, 0xFF	; 255
 4b0:	8f 4f       	sbci	r24, 0xFF	; 255
 4b2:	9f 4f       	sbci	r25, 0xFF	; 255
 4b4:	08 95       	ret

000004b6 <__fp_split3>:
 4b6:	57 fd       	sbrc	r21, 7
 4b8:	90 58       	subi	r25, 0x80	; 128
 4ba:	44 0f       	add	r20, r20
 4bc:	55 1f       	adc	r21, r21
 4be:	59 f0       	breq	.+22     	; 0x4d6 <__fp_splitA+0x10>
 4c0:	5f 3f       	cpi	r21, 0xFF	; 255
 4c2:	71 f0       	breq	.+28     	; 0x4e0 <__fp_splitA+0x1a>
 4c4:	47 95       	ror	r20

000004c6 <__fp_splitA>:
 4c6:	88 0f       	add	r24, r24
 4c8:	97 fb       	bst	r25, 7
 4ca:	99 1f       	adc	r25, r25
 4cc:	61 f0       	breq	.+24     	; 0x4e6 <__fp_splitA+0x20>
 4ce:	9f 3f       	cpi	r25, 0xFF	; 255
 4d0:	79 f0       	breq	.+30     	; 0x4f0 <__fp_splitA+0x2a>
 4d2:	87 95       	ror	r24
 4d4:	08 95       	ret
 4d6:	12 16       	cp	r1, r18
 4d8:	13 06       	cpc	r1, r19
 4da:	14 06       	cpc	r1, r20
 4dc:	55 1f       	adc	r21, r21
 4de:	f2 cf       	rjmp	.-28     	; 0x4c4 <__fp_split3+0xe>
 4e0:	46 95       	lsr	r20
 4e2:	f1 df       	rcall	.-30     	; 0x4c6 <__fp_splitA>
 4e4:	08 c0       	rjmp	.+16     	; 0x4f6 <__fp_splitA+0x30>
 4e6:	16 16       	cp	r1, r22
 4e8:	17 06       	cpc	r1, r23
 4ea:	18 06       	cpc	r1, r24
 4ec:	99 1f       	adc	r25, r25
 4ee:	f1 cf       	rjmp	.-30     	; 0x4d2 <__fp_splitA+0xc>
 4f0:	86 95       	lsr	r24
 4f2:	71 05       	cpc	r23, r1
 4f4:	61 05       	cpc	r22, r1
 4f6:	08 94       	sec
 4f8:	08 95       	ret

000004fa <__fp_zero>:
 4fa:	e8 94       	clt

000004fc <__fp_szero>:
 4fc:	bb 27       	eor	r27, r27
 4fe:	66 27       	eor	r22, r22
 500:	77 27       	eor	r23, r23
 502:	cb 01       	movw	r24, r22
 504:	97 f9       	bld	r25, 7
 506:	08 95       	ret

00000508 <__mulsf3>:
 508:	0e 94 97 02 	call	0x52e	; 0x52e <__mulsf3x>
 50c:	0c 94 4a 02 	jmp	0x494	; 0x494 <__fp_round>
 510:	0e 94 3c 02 	call	0x478	; 0x478 <__fp_pscA>
 514:	38 f0       	brcs	.+14     	; 0x524 <__mulsf3+0x1c>
 516:	0e 94 43 02 	call	0x486	; 0x486 <__fp_pscB>
 51a:	20 f0       	brcs	.+8      	; 0x524 <__mulsf3+0x1c>
 51c:	95 23       	and	r25, r21
 51e:	11 f0       	breq	.+4      	; 0x524 <__mulsf3+0x1c>
 520:	0c 94 33 02 	jmp	0x466	; 0x466 <__fp_inf>
 524:	0c 94 39 02 	jmp	0x472	; 0x472 <__fp_nan>
 528:	11 24       	eor	r1, r1
 52a:	0c 94 7e 02 	jmp	0x4fc	; 0x4fc <__fp_szero>

0000052e <__mulsf3x>:
 52e:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__fp_split3>
 532:	70 f3       	brcs	.-36     	; 0x510 <__mulsf3+0x8>

00000534 <__mulsf3_pse>:
 534:	95 9f       	mul	r25, r21
 536:	c1 f3       	breq	.-16     	; 0x528 <__mulsf3+0x20>
 538:	95 0f       	add	r25, r21
 53a:	50 e0       	ldi	r21, 0x00	; 0
 53c:	55 1f       	adc	r21, r21
 53e:	62 9f       	mul	r22, r18
 540:	f0 01       	movw	r30, r0
 542:	72 9f       	mul	r23, r18
 544:	bb 27       	eor	r27, r27
 546:	f0 0d       	add	r31, r0
 548:	b1 1d       	adc	r27, r1
 54a:	63 9f       	mul	r22, r19
 54c:	aa 27       	eor	r26, r26
 54e:	f0 0d       	add	r31, r0
 550:	b1 1d       	adc	r27, r1
 552:	aa 1f       	adc	r26, r26
 554:	64 9f       	mul	r22, r20
 556:	66 27       	eor	r22, r22
 558:	b0 0d       	add	r27, r0
 55a:	a1 1d       	adc	r26, r1
 55c:	66 1f       	adc	r22, r22
 55e:	82 9f       	mul	r24, r18
 560:	22 27       	eor	r18, r18
 562:	b0 0d       	add	r27, r0
 564:	a1 1d       	adc	r26, r1
 566:	62 1f       	adc	r22, r18
 568:	73 9f       	mul	r23, r19
 56a:	b0 0d       	add	r27, r0
 56c:	a1 1d       	adc	r26, r1
 56e:	62 1f       	adc	r22, r18
 570:	83 9f       	mul	r24, r19
 572:	a0 0d       	add	r26, r0
 574:	61 1d       	adc	r22, r1
 576:	22 1f       	adc	r18, r18
 578:	74 9f       	mul	r23, r20
 57a:	33 27       	eor	r19, r19
 57c:	a0 0d       	add	r26, r0
 57e:	61 1d       	adc	r22, r1
 580:	23 1f       	adc	r18, r19
 582:	84 9f       	mul	r24, r20
 584:	60 0d       	add	r22, r0
 586:	21 1d       	adc	r18, r1
 588:	82 2f       	mov	r24, r18
 58a:	76 2f       	mov	r23, r22
 58c:	6a 2f       	mov	r22, r26
 58e:	11 24       	eor	r1, r1
 590:	9f 57       	subi	r25, 0x7F	; 127
 592:	50 40       	sbci	r21, 0x00	; 0
 594:	9a f0       	brmi	.+38     	; 0x5bc <__mulsf3_pse+0x88>
 596:	f1 f0       	breq	.+60     	; 0x5d4 <__mulsf3_pse+0xa0>
 598:	88 23       	and	r24, r24
 59a:	4a f0       	brmi	.+18     	; 0x5ae <__mulsf3_pse+0x7a>
 59c:	ee 0f       	add	r30, r30
 59e:	ff 1f       	adc	r31, r31
 5a0:	bb 1f       	adc	r27, r27
 5a2:	66 1f       	adc	r22, r22
 5a4:	77 1f       	adc	r23, r23
 5a6:	88 1f       	adc	r24, r24
 5a8:	91 50       	subi	r25, 0x01	; 1
 5aa:	50 40       	sbci	r21, 0x00	; 0
 5ac:	a9 f7       	brne	.-22     	; 0x598 <__mulsf3_pse+0x64>
 5ae:	9e 3f       	cpi	r25, 0xFE	; 254
 5b0:	51 05       	cpc	r21, r1
 5b2:	80 f0       	brcs	.+32     	; 0x5d4 <__mulsf3_pse+0xa0>
 5b4:	0c 94 33 02 	jmp	0x466	; 0x466 <__fp_inf>
 5b8:	0c 94 7e 02 	jmp	0x4fc	; 0x4fc <__fp_szero>
 5bc:	5f 3f       	cpi	r21, 0xFF	; 255
 5be:	e4 f3       	brlt	.-8      	; 0x5b8 <__mulsf3_pse+0x84>
 5c0:	98 3e       	cpi	r25, 0xE8	; 232
 5c2:	d4 f3       	brlt	.-12     	; 0x5b8 <__mulsf3_pse+0x84>
 5c4:	86 95       	lsr	r24
 5c6:	77 95       	ror	r23
 5c8:	67 95       	ror	r22
 5ca:	b7 95       	ror	r27
 5cc:	f7 95       	ror	r31
 5ce:	e7 95       	ror	r30
 5d0:	9f 5f       	subi	r25, 0xFF	; 255
 5d2:	c1 f7       	brne	.-16     	; 0x5c4 <__mulsf3_pse+0x90>
 5d4:	fe 2b       	or	r31, r30
 5d6:	88 0f       	add	r24, r24
 5d8:	91 1d       	adc	r25, r1
 5da:	96 95       	lsr	r25
 5dc:	87 95       	ror	r24
 5de:	97 f9       	bld	r25, 7
 5e0:	08 95       	ret

000005e2 <__mulsi3>:
 5e2:	db 01       	movw	r26, r22
 5e4:	8f 93       	push	r24
 5e6:	9f 93       	push	r25
 5e8:	0e 94 20 03 	call	0x640	; 0x640 <__muluhisi3>
 5ec:	bf 91       	pop	r27
 5ee:	af 91       	pop	r26
 5f0:	a2 9f       	mul	r26, r18
 5f2:	80 0d       	add	r24, r0
 5f4:	91 1d       	adc	r25, r1
 5f6:	a3 9f       	mul	r26, r19
 5f8:	90 0d       	add	r25, r0
 5fa:	b2 9f       	mul	r27, r18
 5fc:	90 0d       	add	r25, r0
 5fe:	11 24       	eor	r1, r1
 600:	08 95       	ret

00000602 <__divmodsi4>:
 602:	05 2e       	mov	r0, r21
 604:	97 fb       	bst	r25, 7
 606:	1e f4       	brtc	.+6      	; 0x60e <__divmodsi4+0xc>
 608:	00 94       	com	r0
 60a:	0e 94 18 03 	call	0x630	; 0x630 <__negsi2>
 60e:	57 fd       	sbrc	r21, 7
 610:	07 d0       	rcall	.+14     	; 0x620 <__divmodsi4_neg2>
 612:	0e 94 2b 03 	call	0x656	; 0x656 <__udivmodsi4>
 616:	07 fc       	sbrc	r0, 7
 618:	03 d0       	rcall	.+6      	; 0x620 <__divmodsi4_neg2>
 61a:	4e f4       	brtc	.+18     	; 0x62e <__divmodsi4_exit>
 61c:	0c 94 18 03 	jmp	0x630	; 0x630 <__negsi2>

00000620 <__divmodsi4_neg2>:
 620:	50 95       	com	r21
 622:	40 95       	com	r20
 624:	30 95       	com	r19
 626:	21 95       	neg	r18
 628:	3f 4f       	sbci	r19, 0xFF	; 255
 62a:	4f 4f       	sbci	r20, 0xFF	; 255
 62c:	5f 4f       	sbci	r21, 0xFF	; 255

0000062e <__divmodsi4_exit>:
 62e:	08 95       	ret

00000630 <__negsi2>:
 630:	90 95       	com	r25
 632:	80 95       	com	r24
 634:	70 95       	com	r23
 636:	61 95       	neg	r22
 638:	7f 4f       	sbci	r23, 0xFF	; 255
 63a:	8f 4f       	sbci	r24, 0xFF	; 255
 63c:	9f 4f       	sbci	r25, 0xFF	; 255
 63e:	08 95       	ret

00000640 <__muluhisi3>:
 640:	0e 94 4d 03 	call	0x69a	; 0x69a <__umulhisi3>
 644:	a5 9f       	mul	r26, r21
 646:	90 0d       	add	r25, r0
 648:	b4 9f       	mul	r27, r20
 64a:	90 0d       	add	r25, r0
 64c:	a4 9f       	mul	r26, r20
 64e:	80 0d       	add	r24, r0
 650:	91 1d       	adc	r25, r1
 652:	11 24       	eor	r1, r1
 654:	08 95       	ret

00000656 <__udivmodsi4>:
 656:	a1 e2       	ldi	r26, 0x21	; 33
 658:	1a 2e       	mov	r1, r26
 65a:	aa 1b       	sub	r26, r26
 65c:	bb 1b       	sub	r27, r27
 65e:	fd 01       	movw	r30, r26
 660:	0d c0       	rjmp	.+26     	; 0x67c <__udivmodsi4_ep>

00000662 <__udivmodsi4_loop>:
 662:	aa 1f       	adc	r26, r26
 664:	bb 1f       	adc	r27, r27
 666:	ee 1f       	adc	r30, r30
 668:	ff 1f       	adc	r31, r31
 66a:	a2 17       	cp	r26, r18
 66c:	b3 07       	cpc	r27, r19
 66e:	e4 07       	cpc	r30, r20
 670:	f5 07       	cpc	r31, r21
 672:	20 f0       	brcs	.+8      	; 0x67c <__udivmodsi4_ep>
 674:	a2 1b       	sub	r26, r18
 676:	b3 0b       	sbc	r27, r19
 678:	e4 0b       	sbc	r30, r20
 67a:	f5 0b       	sbc	r31, r21

0000067c <__udivmodsi4_ep>:
 67c:	66 1f       	adc	r22, r22
 67e:	77 1f       	adc	r23, r23
 680:	88 1f       	adc	r24, r24
 682:	99 1f       	adc	r25, r25
 684:	1a 94       	dec	r1
 686:	69 f7       	brne	.-38     	; 0x662 <__udivmodsi4_loop>
 688:	60 95       	com	r22
 68a:	70 95       	com	r23
 68c:	80 95       	com	r24
 68e:	90 95       	com	r25
 690:	9b 01       	movw	r18, r22
 692:	ac 01       	movw	r20, r24
 694:	bd 01       	movw	r22, r26
 696:	cf 01       	movw	r24, r30
 698:	08 95       	ret

0000069a <__umulhisi3>:
 69a:	a2 9f       	mul	r26, r18
 69c:	b0 01       	movw	r22, r0
 69e:	b3 9f       	mul	r27, r19
 6a0:	c0 01       	movw	r24, r0
 6a2:	a3 9f       	mul	r26, r19
 6a4:	70 0d       	add	r23, r0
 6a6:	81 1d       	adc	r24, r1
 6a8:	11 24       	eor	r1, r1
 6aa:	91 1d       	adc	r25, r1
 6ac:	b2 9f       	mul	r27, r18
 6ae:	70 0d       	add	r23, r0
 6b0:	81 1d       	adc	r24, r1
 6b2:	11 24       	eor	r1, r1
 6b4:	91 1d       	adc	r25, r1
 6b6:	08 95       	ret

000006b8 <_exit>:
 6b8:	f8 94       	cli

000006ba <__stop_program>:
 6ba:	ff cf       	rjmp	.-2      	; 0x6ba <__stop_program>
