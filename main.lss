
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000007d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000007d8  0000084c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  0000084c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000860  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  0000089c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000813  00000000  00000000  000008c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000623  00000000  00000000  000010d7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001f7  00000000  00000000  000016fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000ac  00000000  00000000  000018f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000032c  00000000  00000000  000019a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000438  00000000  00000000  00001ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00002104  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  64:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <Receive>:
#define FOSC 1000000// Clock Speed
#define BAUD 9600
#define ubbr_value FOSC/16/BAUD-1
unsigned char Receive(void)
{
	while (! (UCSRA & (1 << RXC)) );
  6c:	5f 9b       	sbis	0x0b, 7	; 11
  6e:	fe cf       	rjmp	.-4      	; 0x6c <Receive>
	return UDR;
  70:	8c b1       	in	r24, 0x0c	; 12
}
  72:	08 95       	ret

00000074 <Transmit>:

void Transmit(unsigned char data)
{
	while (! (UCSRA & (1 << UDRE)) );
  74:	5d 9b       	sbis	0x0b, 5	; 11
  76:	fe cf       	rjmp	.-4      	; 0x74 <Transmit>
	UDR = data;
  78:	8c b9       	out	0x0c, r24	; 12
  7a:	08 95       	ret

0000007c <map>:

}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
  7c:	4f 92       	push	r4
  7e:	5f 92       	push	r5
  80:	6f 92       	push	r6
  82:	7f 92       	push	r7
  84:	af 92       	push	r10
  86:	bf 92       	push	r11
  88:	cf 92       	push	r12
  8a:	df 92       	push	r13
  8c:	ef 92       	push	r14
  8e:	ff 92       	push	r15
  90:	0f 93       	push	r16
  92:	1f 93       	push	r17
  94:	cf 93       	push	r28
  96:	df 93       	push	r29
  98:	cd b7       	in	r28, 0x3d	; 61
  9a:	de b7       	in	r29, 0x3e	; 62
  9c:	29 01       	movw	r4, r18
  9e:	3a 01       	movw	r6, r20
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  a0:	9b 01       	movw	r18, r22
  a2:	ac 01       	movw	r20, r24
  a4:	24 19       	sub	r18, r4
  a6:	35 09       	sbc	r19, r5
  a8:	46 09       	sbc	r20, r6
  aa:	57 09       	sbc	r21, r7
  ac:	89 89       	ldd	r24, Y+17	; 0x11
  ae:	9a 89       	ldd	r25, Y+18	; 0x12
  b0:	ab 89       	ldd	r26, Y+19	; 0x13
  b2:	bc 89       	ldd	r27, Y+20	; 0x14
  b4:	bc 01       	movw	r22, r24
  b6:	cd 01       	movw	r24, r26
  b8:	6a 19       	sub	r22, r10
  ba:	7b 09       	sbc	r23, r11
  bc:	8c 09       	sbc	r24, r12
  be:	9d 09       	sbc	r25, r13
  c0:	0e 94 57 03 	call	0x6ae	; 0x6ae <__mulsi3>
  c4:	a8 01       	movw	r20, r16
  c6:	97 01       	movw	r18, r14
  c8:	24 19       	sub	r18, r4
  ca:	35 09       	sbc	r19, r5
  cc:	46 09       	sbc	r20, r6
  ce:	57 09       	sbc	r21, r7
  d0:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__divmodsi4>
  d4:	ca 01       	movw	r24, r20
  d6:	b9 01       	movw	r22, r18
  d8:	6a 0d       	add	r22, r10
  da:	7b 1d       	adc	r23, r11
  dc:	8c 1d       	adc	r24, r12
  de:	9d 1d       	adc	r25, r13
}
  e0:	df 91       	pop	r29
  e2:	cf 91       	pop	r28
  e4:	1f 91       	pop	r17
  e6:	0f 91       	pop	r16
  e8:	ff 90       	pop	r15
  ea:	ef 90       	pop	r14
  ec:	df 90       	pop	r13
  ee:	cf 90       	pop	r12
  f0:	bf 90       	pop	r11
  f2:	af 90       	pop	r10
  f4:	7f 90       	pop	r7
  f6:	6f 90       	pop	r6
  f8:	5f 90       	pop	r5
  fa:	4f 90       	pop	r4
  fc:	08 95       	ret

000000fe <main>:
int main(void)
{
  TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
  fe:	83 b7       	in	r24, 0x33	; 51
 100:	89 66       	ori	r24, 0x69	; 105
 102:	83 bf       	out	0x33, r24	; 51
DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 104:	87 b3       	in	r24, 0x17	; 23
 106:	8b 60       	ori	r24, 0x0B	; 11
 108:	87 bb       	out	0x17, r24	; 23
TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 10a:	85 b5       	in	r24, 0x25	; 37
 10c:	89 66       	ori	r24, 0x69	; 105
 10e:	85 bd       	out	0x25, r24	; 37
TCCR1A = 1<<COM1A1 | 1<<COM1B1  | 1<<WGM10;
 110:	81 ea       	ldi	r24, 0xA1	; 161
 112:	8f bd       	out	0x2f, r24	; 47
TCCR1B = 1<<WGM12| 1<<CS10;
 114:	89 e0       	ldi	r24, 0x09	; 9
 116:	8e bd       	out	0x2e, r24	; 46
DDRD |= 1<< PD7 | 1<< PD2 | 1<<PD4| 1<<PD5;
 118:	81 b3       	in	r24, 0x11	; 17
 11a:	84 6b       	ori	r24, 0xB4	; 180
 11c:	81 bb       	out	0x11, r24	; 17
PORTB &= ~(1<< PINB0);
 11e:	c0 98       	cbi	0x18, 0	; 24
PORTD &= ~(1<< PIND2);
 120:	92 98       	cbi	0x12, 2	; 18
 UCSRA = (1 << U2X);
 122:	82 e0       	ldi	r24, 0x02	; 2
 124:	8b b9       	out	0x0b, r24	; 11
  UBRRH = (unsigned char) (ubbr_value >> 8);
 126:	10 bc       	out	0x20, r1	; 32
  UBRRL = (unsigned char) ubbr_value;
 128:	8f ef       	ldi	r24, 0xFF	; 255
 12a:	89 b9       	out	0x09, r24	; 9
  UCSRB = (1 << RXEN);
 12c:	80 e1       	ldi	r24, 0x10	; 16
 12e:	8a b9       	out	0x0a, r24	; 10
  UCSRC = (1 << URSEL) | (3 << UCSZ0);
 130:	86 e8       	ldi	r24, 0x86	; 134
 132:	80 bd       	out	0x20, r24	; 32
	UDR = data;

}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 134:	86 ea       	ldi	r24, 0xA6	; 166
 136:	88 2e       	mov	r8, r24
 138:	85 e0       	ldi	r24, 0x05	; 5
 13a:	98 2e       	mov	r9, r24
 13c:	a1 2c       	mov	r10, r1
 13e:	b1 2c       	mov	r11, r1

	while (1)
	{

		uint16_t x,y;
		if(Receive()==0x11)
 140:	0e 94 36 00 	call	0x6c	; 0x6c <Receive>
 144:	81 31       	cpi	r24, 0x11	; 17
 146:	09 f0       	breq	.+2      	; 0x14a <main+0x4c>
 148:	6a c0       	rjmp	.+212    	; 0x21e <main+0x120>
		{
				int x1= Receive();
 14a:	0e 94 36 00 	call	0x6c	; 0x6c <Receive>
 14e:	c8 2f       	mov	r28, r24
    		x = (Receive())<<8 | x1;
 150:	0e 94 36 00 	call	0x6c	; 0x6c <Receive>
 154:	08 2f       	mov	r16, r24
			OCR2=0;
			OCR1AL=0;
			OCR1BL=0;
			continue;
		}
		if(Receive()==0x21)
 156:	0e 94 36 00 	call	0x6c	; 0x6c <Receive>
 15a:	81 32       	cpi	r24, 0x21	; 33
 15c:	09 f0       	breq	.+2      	; 0x160 <main+0x62>
 15e:	5f c0       	rjmp	.+190    	; 0x21e <main+0x120>
		{
				int y1=Receive();
 160:	0e 94 36 00 	call	0x6c	; 0x6c <Receive>
 164:	18 2f       	mov	r17, r24
    		y=(Receive())<<8 | y1;
 166:	0e 94 36 00 	call	0x6c	; 0x6c <Receive>
			OCR2=0;
			OCR1AL=0;
			OCR1BL=0;
			continue;
		}
		int x2=x-512;
 16a:	d0 e0       	ldi	r29, 0x00	; 0
 16c:	d0 2b       	or	r29, r16
 16e:	d2 50       	subi	r29, 0x02	; 2
    int y2=512-y;
 170:	21 2f       	mov	r18, r17
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	38 2b       	or	r19, r24
 176:	00 e0       	ldi	r16, 0x00	; 0
 178:	12 e0       	ldi	r17, 0x02	; 2
 17a:	02 1b       	sub	r16, r18
 17c:	13 0b       	sbc	r17, r19
    int x3 = x2;
    int y3 = y2;
    int x4= (x3*0.707)+(y3*0.707);
 17e:	b8 01       	movw	r22, r16
 180:	01 2e       	mov	r0, r17
 182:	00 0c       	add	r0, r0
 184:	88 0b       	sbc	r24, r24
 186:	99 0b       	sbc	r25, r25
 188:	0e 94 35 02 	call	0x46a	; 0x46a <__floatsisf>
 18c:	24 ef       	ldi	r18, 0xF4	; 244
 18e:	3d ef       	ldi	r19, 0xFD	; 253
 190:	44 e3       	ldi	r20, 0x34	; 52
 192:	5f e3       	ldi	r21, 0x3F	; 63
 194:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__mulsf3>
 198:	2b 01       	movw	r4, r22
 19a:	3c 01       	movw	r6, r24
 19c:	be 01       	movw	r22, r28
 19e:	0d 2e       	mov	r0, r29
 1a0:	00 0c       	add	r0, r0
 1a2:	88 0b       	sbc	r24, r24
 1a4:	99 0b       	sbc	r25, r25
 1a6:	0e 94 35 02 	call	0x46a	; 0x46a <__floatsisf>
 1aa:	24 ef       	ldi	r18, 0xF4	; 244
 1ac:	3d ef       	ldi	r19, 0xFD	; 253
 1ae:	44 e3       	ldi	r20, 0x34	; 52
 1b0:	5f e3       	ldi	r21, 0x3F	; 63
 1b2:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__mulsf3>
 1b6:	a3 01       	movw	r20, r6
 1b8:	92 01       	movw	r18, r4
 1ba:	0e 94 8c 01 	call	0x318	; 0x318 <__addsf3>
 1be:	0e 94 fd 01 	call	0x3fa	; 0x3fa <__fixsfsi>
 1c2:	6b 01       	movw	r12, r22
 1c4:	7c 01       	movw	r14, r24
    int y4=(-x3*0.707)+(y3*0.707);
 1c6:	66 27       	eor	r22, r22
 1c8:	77 27       	eor	r23, r23
 1ca:	6c 1b       	sub	r22, r28
 1cc:	7d 0b       	sbc	r23, r29
 1ce:	07 2e       	mov	r0, r23
 1d0:	00 0c       	add	r0, r0
 1d2:	88 0b       	sbc	r24, r24
 1d4:	99 0b       	sbc	r25, r25
 1d6:	0e 94 35 02 	call	0x46a	; 0x46a <__floatsisf>
 1da:	24 ef       	ldi	r18, 0xF4	; 244
 1dc:	3d ef       	ldi	r19, 0xFD	; 253
 1de:	44 e3       	ldi	r20, 0x34	; 52
 1e0:	5f e3       	ldi	r21, 0x3F	; 63
 1e2:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__mulsf3>
 1e6:	a3 01       	movw	r20, r6
 1e8:	92 01       	movw	r18, r4
 1ea:	0e 94 8c 01 	call	0x318	; 0x318 <__addsf3>
 1ee:	0e 94 fd 01 	call	0x3fa	; 0x3fa <__fixsfsi>
 1f2:	3b 01       	movw	r6, r22
		if(y2/x2>=12.8&&y2/x2<=-12.8)
 1f4:	c8 01       	movw	r24, r16
 1f6:	be 01       	movw	r22, r28
 1f8:	0e 94 67 03 	call	0x6ce	; 0x6ce <__divmodhi4>
 1fc:	07 2e       	mov	r0, r23
 1fe:	00 0c       	add	r0, r0
 200:	88 0b       	sbc	r24, r24
 202:	99 0b       	sbc	r25, r25
 204:	0e 94 35 02 	call	0x46a	; 0x46a <__floatsisf>
 208:	1b 01       	movw	r2, r22
 20a:	2c 01       	movw	r4, r24
 20c:	2d ec       	ldi	r18, 0xCD	; 205
 20e:	3c ec       	ldi	r19, 0xCC	; 204
 210:	4c e4       	ldi	r20, 0x4C	; 76
 212:	51 e4       	ldi	r21, 0x41	; 65
 214:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__gesf2>
 218:	87 ff       	sbrs	r24, 7
 21a:	06 c0       	rjmp	.+12     	; 0x228 <main+0x12a>
 21c:	10 c0       	rjmp	.+32     	; 0x23e <main+0x140>
				int y1=Receive();
    		y=(Receive())<<8 | y1;
		}
		else
		{
			OCR0=0;
 21e:	1c be       	out	0x3c, r1	; 60
			OCR2=0;
 220:	13 bc       	out	0x23, r1	; 35
			OCR1AL=0;
 222:	1a bc       	out	0x2a, r1	; 42
			OCR1BL=0;
 224:	18 bc       	out	0x28, r1	; 40
			continue;
 226:	8c cf       	rjmp	.-232    	; 0x140 <main+0x42>
    int y2=512-y;
    int x3 = x2;
    int y3 = y2;
    int x4= (x3*0.707)+(y3*0.707);
    int y4=(-x3*0.707)+(y3*0.707);
		if(y2/x2>=12.8&&y2/x2<=-12.8)
 228:	2d ec       	ldi	r18, 0xCD	; 205
 22a:	3c ec       	ldi	r19, 0xCC	; 204
 22c:	4c e4       	ldi	r20, 0x4C	; 76
 22e:	51 ec       	ldi	r21, 0xC1	; 193
 230:	c2 01       	movw	r24, r4
 232:	b1 01       	movw	r22, r2
 234:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__cmpsf2>
 238:	18 16       	cp	r1, r24
 23a:	0c f0       	brlt	.+2      	; 0x23e <main+0x140>
		y4=x4;
 23c:	36 01       	movw	r6, r12
		if(y2/x2<=0.0390625&&y2/x2>=-0.0390625)
 23e:	20 e0       	ldi	r18, 0x00	; 0
 240:	30 e0       	ldi	r19, 0x00	; 0
 242:	40 e2       	ldi	r20, 0x20	; 32
 244:	5d e3       	ldi	r21, 0x3D	; 61
 246:	c2 01       	movw	r24, r4
 248:	b1 01       	movw	r22, r2
 24a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <__cmpsf2>
 24e:	18 16       	cp	r1, r24
 250:	74 f0       	brlt	.+28     	; 0x26e <main+0x170>
 252:	20 e0       	ldi	r18, 0x00	; 0
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	40 e2       	ldi	r20, 0x20	; 32
 258:	5d eb       	ldi	r21, 0xBD	; 189
 25a:	c2 01       	movw	r24, r4
 25c:	b1 01       	movw	r22, r2
 25e:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__gesf2>
 262:	87 fd       	sbrc	r24, 7
 264:	04 c0       	rjmp	.+8      	; 0x26e <main+0x170>
		y4=-x4;
 266:	66 24       	eor	r6, r6
 268:	77 24       	eor	r7, r7
 26a:	6c 18       	sub	r6, r12
 26c:	7d 08       	sbc	r7, r13
	UDR = data;

}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 26e:	c6 01       	movw	r24, r12
 270:	dd 0c       	add	r13, r13
 272:	aa 0b       	sbc	r26, r26
 274:	bb 0b       	sbc	r27, r27
 276:	9c 01       	movw	r18, r24
 278:	ad 01       	movw	r20, r26
 27a:	2d 52       	subi	r18, 0x2D	; 45
 27c:	3d 4f       	sbci	r19, 0xFD	; 253
 27e:	4f 4f       	sbci	r20, 0xFF	; 255
 280:	5f 4f       	sbci	r21, 0xFF	; 255
 282:	ae ef       	ldi	r26, 0xFE	; 254
 284:	b1 e0       	ldi	r27, 0x01	; 1
 286:	0e 94 9a 03 	call	0x734	; 0x734 <__muluhisi3>
 28a:	a5 01       	movw	r20, r10
 28c:	94 01       	movw	r18, r8
 28e:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__divmodsi4>
 292:	69 01       	movw	r12, r18
 294:	7a 01       	movw	r14, r20
 296:	8f ef       	ldi	r24, 0xFF	; 255
 298:	c8 1a       	sub	r12, r24
 29a:	d1 08       	sbc	r13, r1
 29c:	e1 08       	sbc	r14, r1
 29e:	f1 08       	sbc	r15, r1
 2a0:	c3 01       	movw	r24, r6
 2a2:	77 0c       	add	r7, r7
 2a4:	aa 0b       	sbc	r26, r26
 2a6:	bb 0b       	sbc	r27, r27
 2a8:	9c 01       	movw	r18, r24
 2aa:	ad 01       	movw	r20, r26
 2ac:	2d 52       	subi	r18, 0x2D	; 45
 2ae:	3d 4f       	sbci	r19, 0xFD	; 253
 2b0:	4f 4f       	sbci	r20, 0xFF	; 255
 2b2:	5f 4f       	sbci	r21, 0xFF	; 255
 2b4:	ae ef       	ldi	r26, 0xFE	; 254
 2b6:	b1 e0       	ldi	r27, 0x01	; 1
 2b8:	0e 94 9a 03 	call	0x734	; 0x734 <__muluhisi3>
 2bc:	a5 01       	movw	r20, r10
 2be:	94 01       	movw	r18, r8
 2c0:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__divmodsi4>
 2c4:	ba 01       	movw	r22, r20
 2c6:	a9 01       	movw	r20, r18
 2c8:	4f 5f       	subi	r20, 0xFF	; 255
 2ca:	51 09       	sbc	r21, r1
 2cc:	61 09       	sbc	r22, r1
 2ce:	71 09       	sbc	r23, r1
		if(y2/x2<=0.0390625&&y2/x2>=-0.0390625)
		y4=-x4;
    int x5=map(x4,-723,723,-255,255);
    int y5=map(y4,-723,723,-255,255);

		if(x5<20&&x5>-20)
 2d0:	c6 01       	movw	r24, r12
 2d2:	43 96       	adiw	r24, 0x13	; 19
 2d4:	87 97       	sbiw	r24, 0x27	; 39
 2d6:	10 f4       	brcc	.+4      	; 0x2dc <main+0x1de>
		x5=0;
 2d8:	c1 2c       	mov	r12, r1
 2da:	d1 2c       	mov	r13, r1

		if(y5<20&&y5>-20)
 2dc:	ca 01       	movw	r24, r20
 2de:	43 96       	adiw	r24, 0x13	; 19
 2e0:	87 97       	sbiw	r24, 0x27	; 39
 2e2:	10 f0       	brcs	.+4      	; 0x2e8 <main+0x1ea>
		if(y2/x2>=12.8&&y2/x2<=-12.8)
		y4=x4;
		if(y2/x2<=0.0390625&&y2/x2>=-0.0390625)
		y4=-x4;
    int x5=map(x4,-723,723,-255,255);
    int y5=map(y4,-723,723,-255,255);
 2e4:	9a 01       	movw	r18, r20
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <main+0x1ee>

		if(x5<20&&x5>-20)
		x5=0;

		if(y5<20&&y5>-20)
		y5=0;
 2e8:	20 e0       	ldi	r18, 0x00	; 0
 2ea:	30 e0       	ldi	r19, 0x00	; 0

		if(x5>0)
 2ec:	1c 14       	cp	r1, r12
 2ee:	1d 04       	cpc	r1, r13
 2f0:	1c f4       	brge	.+6      	; 0x2f8 <main+0x1fa>
		{
			OCR0=x5;
 2f2:	cc be       	out	0x3c, r12	; 60
			OCR1BL=0;
 2f4:	18 bc       	out	0x28, r1	; 40
 2f6:	05 c0       	rjmp	.+10     	; 0x302 <main+0x204>
		}
		else
		{
			OCR0=0;
 2f8:	1c be       	out	0x3c, r1	; 60
			OCR1BL=--x5;
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	c8 1a       	sub	r12, r24
 2fe:	d1 08       	sbc	r13, r1
 300:	c8 bc       	out	0x28, r12	; 40
		}
		if(y5>0)
 302:	12 16       	cp	r1, r18
 304:	13 06       	cpc	r1, r19
 306:	1c f4       	brge	.+6      	; 0x30e <main+0x210>
		{
		OCR2=y5;
 308:	23 bd       	out	0x23, r18	; 35
		OCR1AL=0;
 30a:	1a bc       	out	0x2a, r1	; 42
 30c:	19 cf       	rjmp	.-462    	; 0x140 <main+0x42>
		}
		else
		{
			OCR2=0;
 30e:	13 bc       	out	0x23, r1	; 35
			OCR1AL=-y5;
 310:	21 95       	neg	r18
 312:	2a bd       	out	0x2a, r18	; 42
 314:	15 cf       	rjmp	.-470    	; 0x140 <main+0x42>

00000316 <__subsf3>:
 316:	50 58       	subi	r21, 0x80	; 128

00000318 <__addsf3>:
 318:	bb 27       	eor	r27, r27
 31a:	aa 27       	eor	r26, r26
 31c:	0e 94 a3 01 	call	0x346	; 0x346 <__addsf3x>
 320:	0c 94 ab 02 	jmp	0x556	; 0x556 <__fp_round>
 324:	0e 94 9d 02 	call	0x53a	; 0x53a <__fp_pscA>
 328:	38 f0       	brcs	.+14     	; 0x338 <__addsf3+0x20>
 32a:	0e 94 a4 02 	call	0x548	; 0x548 <__fp_pscB>
 32e:	20 f0       	brcs	.+8      	; 0x338 <__addsf3+0x20>
 330:	39 f4       	brne	.+14     	; 0x340 <__addsf3+0x28>
 332:	9f 3f       	cpi	r25, 0xFF	; 255
 334:	19 f4       	brne	.+6      	; 0x33c <__addsf3+0x24>
 336:	26 f4       	brtc	.+8      	; 0x340 <__addsf3+0x28>
 338:	0c 94 9a 02 	jmp	0x534	; 0x534 <__fp_nan>
 33c:	0e f4       	brtc	.+2      	; 0x340 <__addsf3+0x28>
 33e:	e0 95       	com	r30
 340:	e7 fb       	bst	r30, 7
 342:	0c 94 94 02 	jmp	0x528	; 0x528 <__fp_inf>

00000346 <__addsf3x>:
 346:	e9 2f       	mov	r30, r25
 348:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_split3>
 34c:	58 f3       	brcs	.-42     	; 0x324 <__addsf3+0xc>
 34e:	ba 17       	cp	r27, r26
 350:	62 07       	cpc	r22, r18
 352:	73 07       	cpc	r23, r19
 354:	84 07       	cpc	r24, r20
 356:	95 07       	cpc	r25, r21
 358:	20 f0       	brcs	.+8      	; 0x362 <__addsf3x+0x1c>
 35a:	79 f4       	brne	.+30     	; 0x37a <__addsf3x+0x34>
 35c:	a6 f5       	brtc	.+104    	; 0x3c6 <__addsf3x+0x80>
 35e:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_zero>
 362:	0e f4       	brtc	.+2      	; 0x366 <__addsf3x+0x20>
 364:	e0 95       	com	r30
 366:	0b 2e       	mov	r0, r27
 368:	ba 2f       	mov	r27, r26
 36a:	a0 2d       	mov	r26, r0
 36c:	0b 01       	movw	r0, r22
 36e:	b9 01       	movw	r22, r18
 370:	90 01       	movw	r18, r0
 372:	0c 01       	movw	r0, r24
 374:	ca 01       	movw	r24, r20
 376:	a0 01       	movw	r20, r0
 378:	11 24       	eor	r1, r1
 37a:	ff 27       	eor	r31, r31
 37c:	59 1b       	sub	r21, r25
 37e:	99 f0       	breq	.+38     	; 0x3a6 <__addsf3x+0x60>
 380:	59 3f       	cpi	r21, 0xF9	; 249
 382:	50 f4       	brcc	.+20     	; 0x398 <__addsf3x+0x52>
 384:	50 3e       	cpi	r21, 0xE0	; 224
 386:	68 f1       	brcs	.+90     	; 0x3e2 <__addsf3x+0x9c>
 388:	1a 16       	cp	r1, r26
 38a:	f0 40       	sbci	r31, 0x00	; 0
 38c:	a2 2f       	mov	r26, r18
 38e:	23 2f       	mov	r18, r19
 390:	34 2f       	mov	r19, r20
 392:	44 27       	eor	r20, r20
 394:	58 5f       	subi	r21, 0xF8	; 248
 396:	f3 cf       	rjmp	.-26     	; 0x37e <__addsf3x+0x38>
 398:	46 95       	lsr	r20
 39a:	37 95       	ror	r19
 39c:	27 95       	ror	r18
 39e:	a7 95       	ror	r26
 3a0:	f0 40       	sbci	r31, 0x00	; 0
 3a2:	53 95       	inc	r21
 3a4:	c9 f7       	brne	.-14     	; 0x398 <__addsf3x+0x52>
 3a6:	7e f4       	brtc	.+30     	; 0x3c6 <__addsf3x+0x80>
 3a8:	1f 16       	cp	r1, r31
 3aa:	ba 0b       	sbc	r27, r26
 3ac:	62 0b       	sbc	r22, r18
 3ae:	73 0b       	sbc	r23, r19
 3b0:	84 0b       	sbc	r24, r20
 3b2:	ba f0       	brmi	.+46     	; 0x3e2 <__addsf3x+0x9c>
 3b4:	91 50       	subi	r25, 0x01	; 1
 3b6:	a1 f0       	breq	.+40     	; 0x3e0 <__addsf3x+0x9a>
 3b8:	ff 0f       	add	r31, r31
 3ba:	bb 1f       	adc	r27, r27
 3bc:	66 1f       	adc	r22, r22
 3be:	77 1f       	adc	r23, r23
 3c0:	88 1f       	adc	r24, r24
 3c2:	c2 f7       	brpl	.-16     	; 0x3b4 <__addsf3x+0x6e>
 3c4:	0e c0       	rjmp	.+28     	; 0x3e2 <__addsf3x+0x9c>
 3c6:	ba 0f       	add	r27, r26
 3c8:	62 1f       	adc	r22, r18
 3ca:	73 1f       	adc	r23, r19
 3cc:	84 1f       	adc	r24, r20
 3ce:	48 f4       	brcc	.+18     	; 0x3e2 <__addsf3x+0x9c>
 3d0:	87 95       	ror	r24
 3d2:	77 95       	ror	r23
 3d4:	67 95       	ror	r22
 3d6:	b7 95       	ror	r27
 3d8:	f7 95       	ror	r31
 3da:	9e 3f       	cpi	r25, 0xFE	; 254
 3dc:	08 f0       	brcs	.+2      	; 0x3e0 <__addsf3x+0x9a>
 3de:	b0 cf       	rjmp	.-160    	; 0x340 <__addsf3+0x28>
 3e0:	93 95       	inc	r25
 3e2:	88 0f       	add	r24, r24
 3e4:	08 f0       	brcs	.+2      	; 0x3e8 <__addsf3x+0xa2>
 3e6:	99 27       	eor	r25, r25
 3e8:	ee 0f       	add	r30, r30
 3ea:	97 95       	ror	r25
 3ec:	87 95       	ror	r24
 3ee:	08 95       	ret

000003f0 <__cmpsf2>:
 3f0:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__fp_cmp>
 3f4:	08 f4       	brcc	.+2      	; 0x3f8 <__cmpsf2+0x8>
 3f6:	81 e0       	ldi	r24, 0x01	; 1
 3f8:	08 95       	ret

000003fa <__fixsfsi>:
 3fa:	0e 94 04 02 	call	0x408	; 0x408 <__fixunssfsi>
 3fe:	68 94       	set
 400:	b1 11       	cpse	r27, r1
 402:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_szero>
 406:	08 95       	ret

00000408 <__fixunssfsi>:
 408:	0e 94 c4 02 	call	0x588	; 0x588 <__fp_splitA>
 40c:	88 f0       	brcs	.+34     	; 0x430 <__fixunssfsi+0x28>
 40e:	9f 57       	subi	r25, 0x7F	; 127
 410:	98 f0       	brcs	.+38     	; 0x438 <__fixunssfsi+0x30>
 412:	b9 2f       	mov	r27, r25
 414:	99 27       	eor	r25, r25
 416:	b7 51       	subi	r27, 0x17	; 23
 418:	b0 f0       	brcs	.+44     	; 0x446 <__fixunssfsi+0x3e>
 41a:	e1 f0       	breq	.+56     	; 0x454 <__fixunssfsi+0x4c>
 41c:	66 0f       	add	r22, r22
 41e:	77 1f       	adc	r23, r23
 420:	88 1f       	adc	r24, r24
 422:	99 1f       	adc	r25, r25
 424:	1a f0       	brmi	.+6      	; 0x42c <__fixunssfsi+0x24>
 426:	ba 95       	dec	r27
 428:	c9 f7       	brne	.-14     	; 0x41c <__fixunssfsi+0x14>
 42a:	14 c0       	rjmp	.+40     	; 0x454 <__fixunssfsi+0x4c>
 42c:	b1 30       	cpi	r27, 0x01	; 1
 42e:	91 f0       	breq	.+36     	; 0x454 <__fixunssfsi+0x4c>
 430:	0e 94 de 02 	call	0x5bc	; 0x5bc <__fp_zero>
 434:	b1 e0       	ldi	r27, 0x01	; 1
 436:	08 95       	ret
 438:	0c 94 de 02 	jmp	0x5bc	; 0x5bc <__fp_zero>
 43c:	67 2f       	mov	r22, r23
 43e:	78 2f       	mov	r23, r24
 440:	88 27       	eor	r24, r24
 442:	b8 5f       	subi	r27, 0xF8	; 248
 444:	39 f0       	breq	.+14     	; 0x454 <__fixunssfsi+0x4c>
 446:	b9 3f       	cpi	r27, 0xF9	; 249
 448:	cc f3       	brlt	.-14     	; 0x43c <__fixunssfsi+0x34>
 44a:	86 95       	lsr	r24
 44c:	77 95       	ror	r23
 44e:	67 95       	ror	r22
 450:	b3 95       	inc	r27
 452:	d9 f7       	brne	.-10     	; 0x44a <__fixunssfsi+0x42>
 454:	3e f4       	brtc	.+14     	; 0x464 <__stack+0x5>
 456:	90 95       	com	r25
 458:	80 95       	com	r24
 45a:	70 95       	com	r23
 45c:	61 95       	neg	r22
 45e:	7f 4f       	sbci	r23, 0xFF	; 255
 460:	8f 4f       	sbci	r24, 0xFF	; 255
 462:	9f 4f       	sbci	r25, 0xFF	; 255
 464:	08 95       	ret

00000466 <__floatunsisf>:
 466:	e8 94       	clt
 468:	09 c0       	rjmp	.+18     	; 0x47c <__floatsisf+0x12>

0000046a <__floatsisf>:
 46a:	97 fb       	bst	r25, 7
 46c:	3e f4       	brtc	.+14     	; 0x47c <__floatsisf+0x12>
 46e:	90 95       	com	r25
 470:	80 95       	com	r24
 472:	70 95       	com	r23
 474:	61 95       	neg	r22
 476:	7f 4f       	sbci	r23, 0xFF	; 255
 478:	8f 4f       	sbci	r24, 0xFF	; 255
 47a:	9f 4f       	sbci	r25, 0xFF	; 255
 47c:	99 23       	and	r25, r25
 47e:	a9 f0       	breq	.+42     	; 0x4aa <__floatsisf+0x40>
 480:	f9 2f       	mov	r31, r25
 482:	96 e9       	ldi	r25, 0x96	; 150
 484:	bb 27       	eor	r27, r27
 486:	93 95       	inc	r25
 488:	f6 95       	lsr	r31
 48a:	87 95       	ror	r24
 48c:	77 95       	ror	r23
 48e:	67 95       	ror	r22
 490:	b7 95       	ror	r27
 492:	f1 11       	cpse	r31, r1
 494:	f8 cf       	rjmp	.-16     	; 0x486 <__floatsisf+0x1c>
 496:	fa f4       	brpl	.+62     	; 0x4d6 <__floatsisf+0x6c>
 498:	bb 0f       	add	r27, r27
 49a:	11 f4       	brne	.+4      	; 0x4a0 <__floatsisf+0x36>
 49c:	60 ff       	sbrs	r22, 0
 49e:	1b c0       	rjmp	.+54     	; 0x4d6 <__floatsisf+0x6c>
 4a0:	6f 5f       	subi	r22, 0xFF	; 255
 4a2:	7f 4f       	sbci	r23, 0xFF	; 255
 4a4:	8f 4f       	sbci	r24, 0xFF	; 255
 4a6:	9f 4f       	sbci	r25, 0xFF	; 255
 4a8:	16 c0       	rjmp	.+44     	; 0x4d6 <__floatsisf+0x6c>
 4aa:	88 23       	and	r24, r24
 4ac:	11 f0       	breq	.+4      	; 0x4b2 <__floatsisf+0x48>
 4ae:	96 e9       	ldi	r25, 0x96	; 150
 4b0:	11 c0       	rjmp	.+34     	; 0x4d4 <__floatsisf+0x6a>
 4b2:	77 23       	and	r23, r23
 4b4:	21 f0       	breq	.+8      	; 0x4be <__floatsisf+0x54>
 4b6:	9e e8       	ldi	r25, 0x8E	; 142
 4b8:	87 2f       	mov	r24, r23
 4ba:	76 2f       	mov	r23, r22
 4bc:	05 c0       	rjmp	.+10     	; 0x4c8 <__floatsisf+0x5e>
 4be:	66 23       	and	r22, r22
 4c0:	71 f0       	breq	.+28     	; 0x4de <__floatsisf+0x74>
 4c2:	96 e8       	ldi	r25, 0x86	; 134
 4c4:	86 2f       	mov	r24, r22
 4c6:	70 e0       	ldi	r23, 0x00	; 0
 4c8:	60 e0       	ldi	r22, 0x00	; 0
 4ca:	2a f0       	brmi	.+10     	; 0x4d6 <__floatsisf+0x6c>
 4cc:	9a 95       	dec	r25
 4ce:	66 0f       	add	r22, r22
 4d0:	77 1f       	adc	r23, r23
 4d2:	88 1f       	adc	r24, r24
 4d4:	da f7       	brpl	.-10     	; 0x4cc <__floatsisf+0x62>
 4d6:	88 0f       	add	r24, r24
 4d8:	96 95       	lsr	r25
 4da:	87 95       	ror	r24
 4dc:	97 f9       	bld	r25, 7
 4de:	08 95       	ret

000004e0 <__fp_cmp>:
 4e0:	99 0f       	add	r25, r25
 4e2:	00 08       	sbc	r0, r0
 4e4:	55 0f       	add	r21, r21
 4e6:	aa 0b       	sbc	r26, r26
 4e8:	e0 e8       	ldi	r30, 0x80	; 128
 4ea:	fe ef       	ldi	r31, 0xFE	; 254
 4ec:	16 16       	cp	r1, r22
 4ee:	17 06       	cpc	r1, r23
 4f0:	e8 07       	cpc	r30, r24
 4f2:	f9 07       	cpc	r31, r25
 4f4:	c0 f0       	brcs	.+48     	; 0x526 <__fp_cmp+0x46>
 4f6:	12 16       	cp	r1, r18
 4f8:	13 06       	cpc	r1, r19
 4fa:	e4 07       	cpc	r30, r20
 4fc:	f5 07       	cpc	r31, r21
 4fe:	98 f0       	brcs	.+38     	; 0x526 <__fp_cmp+0x46>
 500:	62 1b       	sub	r22, r18
 502:	73 0b       	sbc	r23, r19
 504:	84 0b       	sbc	r24, r20
 506:	95 0b       	sbc	r25, r21
 508:	39 f4       	brne	.+14     	; 0x518 <__fp_cmp+0x38>
 50a:	0a 26       	eor	r0, r26
 50c:	61 f0       	breq	.+24     	; 0x526 <__fp_cmp+0x46>
 50e:	23 2b       	or	r18, r19
 510:	24 2b       	or	r18, r20
 512:	25 2b       	or	r18, r21
 514:	21 f4       	brne	.+8      	; 0x51e <__fp_cmp+0x3e>
 516:	08 95       	ret
 518:	0a 26       	eor	r0, r26
 51a:	09 f4       	brne	.+2      	; 0x51e <__fp_cmp+0x3e>
 51c:	a1 40       	sbci	r26, 0x01	; 1
 51e:	a6 95       	lsr	r26
 520:	8f ef       	ldi	r24, 0xFF	; 255
 522:	81 1d       	adc	r24, r1
 524:	81 1d       	adc	r24, r1
 526:	08 95       	ret

00000528 <__fp_inf>:
 528:	97 f9       	bld	r25, 7
 52a:	9f 67       	ori	r25, 0x7F	; 127
 52c:	80 e8       	ldi	r24, 0x80	; 128
 52e:	70 e0       	ldi	r23, 0x00	; 0
 530:	60 e0       	ldi	r22, 0x00	; 0
 532:	08 95       	ret

00000534 <__fp_nan>:
 534:	9f ef       	ldi	r25, 0xFF	; 255
 536:	80 ec       	ldi	r24, 0xC0	; 192
 538:	08 95       	ret

0000053a <__fp_pscA>:
 53a:	00 24       	eor	r0, r0
 53c:	0a 94       	dec	r0
 53e:	16 16       	cp	r1, r22
 540:	17 06       	cpc	r1, r23
 542:	18 06       	cpc	r1, r24
 544:	09 06       	cpc	r0, r25
 546:	08 95       	ret

00000548 <__fp_pscB>:
 548:	00 24       	eor	r0, r0
 54a:	0a 94       	dec	r0
 54c:	12 16       	cp	r1, r18
 54e:	13 06       	cpc	r1, r19
 550:	14 06       	cpc	r1, r20
 552:	05 06       	cpc	r0, r21
 554:	08 95       	ret

00000556 <__fp_round>:
 556:	09 2e       	mov	r0, r25
 558:	03 94       	inc	r0
 55a:	00 0c       	add	r0, r0
 55c:	11 f4       	brne	.+4      	; 0x562 <__fp_round+0xc>
 55e:	88 23       	and	r24, r24
 560:	52 f0       	brmi	.+20     	; 0x576 <__fp_round+0x20>
 562:	bb 0f       	add	r27, r27
 564:	40 f4       	brcc	.+16     	; 0x576 <__fp_round+0x20>
 566:	bf 2b       	or	r27, r31
 568:	11 f4       	brne	.+4      	; 0x56e <__fp_round+0x18>
 56a:	60 ff       	sbrs	r22, 0
 56c:	04 c0       	rjmp	.+8      	; 0x576 <__fp_round+0x20>
 56e:	6f 5f       	subi	r22, 0xFF	; 255
 570:	7f 4f       	sbci	r23, 0xFF	; 255
 572:	8f 4f       	sbci	r24, 0xFF	; 255
 574:	9f 4f       	sbci	r25, 0xFF	; 255
 576:	08 95       	ret

00000578 <__fp_split3>:
 578:	57 fd       	sbrc	r21, 7
 57a:	90 58       	subi	r25, 0x80	; 128
 57c:	44 0f       	add	r20, r20
 57e:	55 1f       	adc	r21, r21
 580:	59 f0       	breq	.+22     	; 0x598 <__fp_splitA+0x10>
 582:	5f 3f       	cpi	r21, 0xFF	; 255
 584:	71 f0       	breq	.+28     	; 0x5a2 <__fp_splitA+0x1a>
 586:	47 95       	ror	r20

00000588 <__fp_splitA>:
 588:	88 0f       	add	r24, r24
 58a:	97 fb       	bst	r25, 7
 58c:	99 1f       	adc	r25, r25
 58e:	61 f0       	breq	.+24     	; 0x5a8 <__fp_splitA+0x20>
 590:	9f 3f       	cpi	r25, 0xFF	; 255
 592:	79 f0       	breq	.+30     	; 0x5b2 <__fp_splitA+0x2a>
 594:	87 95       	ror	r24
 596:	08 95       	ret
 598:	12 16       	cp	r1, r18
 59a:	13 06       	cpc	r1, r19
 59c:	14 06       	cpc	r1, r20
 59e:	55 1f       	adc	r21, r21
 5a0:	f2 cf       	rjmp	.-28     	; 0x586 <__fp_split3+0xe>
 5a2:	46 95       	lsr	r20
 5a4:	f1 df       	rcall	.-30     	; 0x588 <__fp_splitA>
 5a6:	08 c0       	rjmp	.+16     	; 0x5b8 <__fp_splitA+0x30>
 5a8:	16 16       	cp	r1, r22
 5aa:	17 06       	cpc	r1, r23
 5ac:	18 06       	cpc	r1, r24
 5ae:	99 1f       	adc	r25, r25
 5b0:	f1 cf       	rjmp	.-30     	; 0x594 <__fp_splitA+0xc>
 5b2:	86 95       	lsr	r24
 5b4:	71 05       	cpc	r23, r1
 5b6:	61 05       	cpc	r22, r1
 5b8:	08 94       	sec
 5ba:	08 95       	ret

000005bc <__fp_zero>:
 5bc:	e8 94       	clt

000005be <__fp_szero>:
 5be:	bb 27       	eor	r27, r27
 5c0:	66 27       	eor	r22, r22
 5c2:	77 27       	eor	r23, r23
 5c4:	cb 01       	movw	r24, r22
 5c6:	97 f9       	bld	r25, 7
 5c8:	08 95       	ret

000005ca <__gesf2>:
 5ca:	0e 94 70 02 	call	0x4e0	; 0x4e0 <__fp_cmp>
 5ce:	08 f4       	brcc	.+2      	; 0x5d2 <__gesf2+0x8>
 5d0:	8f ef       	ldi	r24, 0xFF	; 255
 5d2:	08 95       	ret

000005d4 <__mulsf3>:
 5d4:	0e 94 fd 02 	call	0x5fa	; 0x5fa <__mulsf3x>
 5d8:	0c 94 ab 02 	jmp	0x556	; 0x556 <__fp_round>
 5dc:	0e 94 9d 02 	call	0x53a	; 0x53a <__fp_pscA>
 5e0:	38 f0       	brcs	.+14     	; 0x5f0 <__mulsf3+0x1c>
 5e2:	0e 94 a4 02 	call	0x548	; 0x548 <__fp_pscB>
 5e6:	20 f0       	brcs	.+8      	; 0x5f0 <__mulsf3+0x1c>
 5e8:	95 23       	and	r25, r21
 5ea:	11 f0       	breq	.+4      	; 0x5f0 <__mulsf3+0x1c>
 5ec:	0c 94 94 02 	jmp	0x528	; 0x528 <__fp_inf>
 5f0:	0c 94 9a 02 	jmp	0x534	; 0x534 <__fp_nan>
 5f4:	11 24       	eor	r1, r1
 5f6:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_szero>

000005fa <__mulsf3x>:
 5fa:	0e 94 bc 02 	call	0x578	; 0x578 <__fp_split3>
 5fe:	70 f3       	brcs	.-36     	; 0x5dc <__mulsf3+0x8>

00000600 <__mulsf3_pse>:
 600:	95 9f       	mul	r25, r21
 602:	c1 f3       	breq	.-16     	; 0x5f4 <__mulsf3+0x20>
 604:	95 0f       	add	r25, r21
 606:	50 e0       	ldi	r21, 0x00	; 0
 608:	55 1f       	adc	r21, r21
 60a:	62 9f       	mul	r22, r18
 60c:	f0 01       	movw	r30, r0
 60e:	72 9f       	mul	r23, r18
 610:	bb 27       	eor	r27, r27
 612:	f0 0d       	add	r31, r0
 614:	b1 1d       	adc	r27, r1
 616:	63 9f       	mul	r22, r19
 618:	aa 27       	eor	r26, r26
 61a:	f0 0d       	add	r31, r0
 61c:	b1 1d       	adc	r27, r1
 61e:	aa 1f       	adc	r26, r26
 620:	64 9f       	mul	r22, r20
 622:	66 27       	eor	r22, r22
 624:	b0 0d       	add	r27, r0
 626:	a1 1d       	adc	r26, r1
 628:	66 1f       	adc	r22, r22
 62a:	82 9f       	mul	r24, r18
 62c:	22 27       	eor	r18, r18
 62e:	b0 0d       	add	r27, r0
 630:	a1 1d       	adc	r26, r1
 632:	62 1f       	adc	r22, r18
 634:	73 9f       	mul	r23, r19
 636:	b0 0d       	add	r27, r0
 638:	a1 1d       	adc	r26, r1
 63a:	62 1f       	adc	r22, r18
 63c:	83 9f       	mul	r24, r19
 63e:	a0 0d       	add	r26, r0
 640:	61 1d       	adc	r22, r1
 642:	22 1f       	adc	r18, r18
 644:	74 9f       	mul	r23, r20
 646:	33 27       	eor	r19, r19
 648:	a0 0d       	add	r26, r0
 64a:	61 1d       	adc	r22, r1
 64c:	23 1f       	adc	r18, r19
 64e:	84 9f       	mul	r24, r20
 650:	60 0d       	add	r22, r0
 652:	21 1d       	adc	r18, r1
 654:	82 2f       	mov	r24, r18
 656:	76 2f       	mov	r23, r22
 658:	6a 2f       	mov	r22, r26
 65a:	11 24       	eor	r1, r1
 65c:	9f 57       	subi	r25, 0x7F	; 127
 65e:	50 40       	sbci	r21, 0x00	; 0
 660:	9a f0       	brmi	.+38     	; 0x688 <__mulsf3_pse+0x88>
 662:	f1 f0       	breq	.+60     	; 0x6a0 <__mulsf3_pse+0xa0>
 664:	88 23       	and	r24, r24
 666:	4a f0       	brmi	.+18     	; 0x67a <__mulsf3_pse+0x7a>
 668:	ee 0f       	add	r30, r30
 66a:	ff 1f       	adc	r31, r31
 66c:	bb 1f       	adc	r27, r27
 66e:	66 1f       	adc	r22, r22
 670:	77 1f       	adc	r23, r23
 672:	88 1f       	adc	r24, r24
 674:	91 50       	subi	r25, 0x01	; 1
 676:	50 40       	sbci	r21, 0x00	; 0
 678:	a9 f7       	brne	.-22     	; 0x664 <__mulsf3_pse+0x64>
 67a:	9e 3f       	cpi	r25, 0xFE	; 254
 67c:	51 05       	cpc	r21, r1
 67e:	80 f0       	brcs	.+32     	; 0x6a0 <__mulsf3_pse+0xa0>
 680:	0c 94 94 02 	jmp	0x528	; 0x528 <__fp_inf>
 684:	0c 94 df 02 	jmp	0x5be	; 0x5be <__fp_szero>
 688:	5f 3f       	cpi	r21, 0xFF	; 255
 68a:	e4 f3       	brlt	.-8      	; 0x684 <__mulsf3_pse+0x84>
 68c:	98 3e       	cpi	r25, 0xE8	; 232
 68e:	d4 f3       	brlt	.-12     	; 0x684 <__mulsf3_pse+0x84>
 690:	86 95       	lsr	r24
 692:	77 95       	ror	r23
 694:	67 95       	ror	r22
 696:	b7 95       	ror	r27
 698:	f7 95       	ror	r31
 69a:	e7 95       	ror	r30
 69c:	9f 5f       	subi	r25, 0xFF	; 255
 69e:	c1 f7       	brne	.-16     	; 0x690 <__mulsf3_pse+0x90>
 6a0:	fe 2b       	or	r31, r30
 6a2:	88 0f       	add	r24, r24
 6a4:	91 1d       	adc	r25, r1
 6a6:	96 95       	lsr	r25
 6a8:	87 95       	ror	r24
 6aa:	97 f9       	bld	r25, 7
 6ac:	08 95       	ret

000006ae <__mulsi3>:
 6ae:	db 01       	movw	r26, r22
 6b0:	8f 93       	push	r24
 6b2:	9f 93       	push	r25
 6b4:	0e 94 9a 03 	call	0x734	; 0x734 <__muluhisi3>
 6b8:	bf 91       	pop	r27
 6ba:	af 91       	pop	r26
 6bc:	a2 9f       	mul	r26, r18
 6be:	80 0d       	add	r24, r0
 6c0:	91 1d       	adc	r25, r1
 6c2:	a3 9f       	mul	r26, r19
 6c4:	90 0d       	add	r25, r0
 6c6:	b2 9f       	mul	r27, r18
 6c8:	90 0d       	add	r25, r0
 6ca:	11 24       	eor	r1, r1
 6cc:	08 95       	ret

000006ce <__divmodhi4>:
 6ce:	97 fb       	bst	r25, 7
 6d0:	07 2e       	mov	r0, r23
 6d2:	16 f4       	brtc	.+4      	; 0x6d8 <__divmodhi4+0xa>
 6d4:	00 94       	com	r0
 6d6:	07 d0       	rcall	.+14     	; 0x6e6 <__divmodhi4_neg1>
 6d8:	77 fd       	sbrc	r23, 7
 6da:	09 d0       	rcall	.+18     	; 0x6ee <__divmodhi4_neg2>
 6dc:	0e 94 a5 03 	call	0x74a	; 0x74a <__udivmodhi4>
 6e0:	07 fc       	sbrc	r0, 7
 6e2:	05 d0       	rcall	.+10     	; 0x6ee <__divmodhi4_neg2>
 6e4:	3e f4       	brtc	.+14     	; 0x6f4 <__divmodhi4_exit>

000006e6 <__divmodhi4_neg1>:
 6e6:	90 95       	com	r25
 6e8:	81 95       	neg	r24
 6ea:	9f 4f       	sbci	r25, 0xFF	; 255
 6ec:	08 95       	ret

000006ee <__divmodhi4_neg2>:
 6ee:	70 95       	com	r23
 6f0:	61 95       	neg	r22
 6f2:	7f 4f       	sbci	r23, 0xFF	; 255

000006f4 <__divmodhi4_exit>:
 6f4:	08 95       	ret

000006f6 <__divmodsi4>:
 6f6:	05 2e       	mov	r0, r21
 6f8:	97 fb       	bst	r25, 7
 6fa:	1e f4       	brtc	.+6      	; 0x702 <__divmodsi4+0xc>
 6fc:	00 94       	com	r0
 6fe:	0e 94 92 03 	call	0x724	; 0x724 <__negsi2>
 702:	57 fd       	sbrc	r21, 7
 704:	07 d0       	rcall	.+14     	; 0x714 <__divmodsi4_neg2>
 706:	0e 94 b9 03 	call	0x772	; 0x772 <__udivmodsi4>
 70a:	07 fc       	sbrc	r0, 7
 70c:	03 d0       	rcall	.+6      	; 0x714 <__divmodsi4_neg2>
 70e:	4e f4       	brtc	.+18     	; 0x722 <__divmodsi4_exit>
 710:	0c 94 92 03 	jmp	0x724	; 0x724 <__negsi2>

00000714 <__divmodsi4_neg2>:
 714:	50 95       	com	r21
 716:	40 95       	com	r20
 718:	30 95       	com	r19
 71a:	21 95       	neg	r18
 71c:	3f 4f       	sbci	r19, 0xFF	; 255
 71e:	4f 4f       	sbci	r20, 0xFF	; 255
 720:	5f 4f       	sbci	r21, 0xFF	; 255

00000722 <__divmodsi4_exit>:
 722:	08 95       	ret

00000724 <__negsi2>:
 724:	90 95       	com	r25
 726:	80 95       	com	r24
 728:	70 95       	com	r23
 72a:	61 95       	neg	r22
 72c:	7f 4f       	sbci	r23, 0xFF	; 255
 72e:	8f 4f       	sbci	r24, 0xFF	; 255
 730:	9f 4f       	sbci	r25, 0xFF	; 255
 732:	08 95       	ret

00000734 <__muluhisi3>:
 734:	0e 94 db 03 	call	0x7b6	; 0x7b6 <__umulhisi3>
 738:	a5 9f       	mul	r26, r21
 73a:	90 0d       	add	r25, r0
 73c:	b4 9f       	mul	r27, r20
 73e:	90 0d       	add	r25, r0
 740:	a4 9f       	mul	r26, r20
 742:	80 0d       	add	r24, r0
 744:	91 1d       	adc	r25, r1
 746:	11 24       	eor	r1, r1
 748:	08 95       	ret

0000074a <__udivmodhi4>:
 74a:	aa 1b       	sub	r26, r26
 74c:	bb 1b       	sub	r27, r27
 74e:	51 e1       	ldi	r21, 0x11	; 17
 750:	07 c0       	rjmp	.+14     	; 0x760 <__udivmodhi4_ep>

00000752 <__udivmodhi4_loop>:
 752:	aa 1f       	adc	r26, r26
 754:	bb 1f       	adc	r27, r27
 756:	a6 17       	cp	r26, r22
 758:	b7 07       	cpc	r27, r23
 75a:	10 f0       	brcs	.+4      	; 0x760 <__udivmodhi4_ep>
 75c:	a6 1b       	sub	r26, r22
 75e:	b7 0b       	sbc	r27, r23

00000760 <__udivmodhi4_ep>:
 760:	88 1f       	adc	r24, r24
 762:	99 1f       	adc	r25, r25
 764:	5a 95       	dec	r21
 766:	a9 f7       	brne	.-22     	; 0x752 <__udivmodhi4_loop>
 768:	80 95       	com	r24
 76a:	90 95       	com	r25
 76c:	bc 01       	movw	r22, r24
 76e:	cd 01       	movw	r24, r26
 770:	08 95       	ret

00000772 <__udivmodsi4>:
 772:	a1 e2       	ldi	r26, 0x21	; 33
 774:	1a 2e       	mov	r1, r26
 776:	aa 1b       	sub	r26, r26
 778:	bb 1b       	sub	r27, r27
 77a:	fd 01       	movw	r30, r26
 77c:	0d c0       	rjmp	.+26     	; 0x798 <__udivmodsi4_ep>

0000077e <__udivmodsi4_loop>:
 77e:	aa 1f       	adc	r26, r26
 780:	bb 1f       	adc	r27, r27
 782:	ee 1f       	adc	r30, r30
 784:	ff 1f       	adc	r31, r31
 786:	a2 17       	cp	r26, r18
 788:	b3 07       	cpc	r27, r19
 78a:	e4 07       	cpc	r30, r20
 78c:	f5 07       	cpc	r31, r21
 78e:	20 f0       	brcs	.+8      	; 0x798 <__udivmodsi4_ep>
 790:	a2 1b       	sub	r26, r18
 792:	b3 0b       	sbc	r27, r19
 794:	e4 0b       	sbc	r30, r20
 796:	f5 0b       	sbc	r31, r21

00000798 <__udivmodsi4_ep>:
 798:	66 1f       	adc	r22, r22
 79a:	77 1f       	adc	r23, r23
 79c:	88 1f       	adc	r24, r24
 79e:	99 1f       	adc	r25, r25
 7a0:	1a 94       	dec	r1
 7a2:	69 f7       	brne	.-38     	; 0x77e <__udivmodsi4_loop>
 7a4:	60 95       	com	r22
 7a6:	70 95       	com	r23
 7a8:	80 95       	com	r24
 7aa:	90 95       	com	r25
 7ac:	9b 01       	movw	r18, r22
 7ae:	ac 01       	movw	r20, r24
 7b0:	bd 01       	movw	r22, r26
 7b2:	cf 01       	movw	r24, r30
 7b4:	08 95       	ret

000007b6 <__umulhisi3>:
 7b6:	a2 9f       	mul	r26, r18
 7b8:	b0 01       	movw	r22, r0
 7ba:	b3 9f       	mul	r27, r19
 7bc:	c0 01       	movw	r24, r0
 7be:	a3 9f       	mul	r26, r19
 7c0:	70 0d       	add	r23, r0
 7c2:	81 1d       	adc	r24, r1
 7c4:	11 24       	eor	r1, r1
 7c6:	91 1d       	adc	r25, r1
 7c8:	b2 9f       	mul	r27, r18
 7ca:	70 0d       	add	r23, r0
 7cc:	81 1d       	adc	r24, r1
 7ce:	11 24       	eor	r1, r1
 7d0:	91 1d       	adc	r25, r1
 7d2:	08 95       	ret

000007d4 <_exit>:
 7d4:	f8 94       	cli

000007d6 <__stop_program>:
 7d6:	ff cf       	rjmp	.-2      	; 0x7d6 <__stop_program>
