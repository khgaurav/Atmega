   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	_Z7Receivev
  12               	_Z7Receivev:
  13               	.LFB2:
  14               		.file 1 "main.cpp"
   1:main.cpp      **** 
   2:main.cpp      **** #include <avr/io.h>
   3:main.cpp      **** #include<avr/interrupt.h>
   4:main.cpp      **** #include<math.h>
   5:main.cpp      **** #define FOSC 1000000// Clock Speed
   6:main.cpp      **** #define BAUD 9600
   7:main.cpp      **** #define ubbr_value FOSC/16/BAUD-1
   8:main.cpp      **** int Receive()
   9:main.cpp      **** {
  15               		.loc 1 9 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               	.L2:
  10:main.cpp      **** 	while (! (UCSRA & (1 << RXC)) );
  22               		.loc 1 10 0
  23 0000 5F9B      		sbis 0xb,7
  24 0002 00C0      		rjmp .L2
  11:main.cpp      **** 	return UDR;
  25               		.loc 1 11 0
  26 0004 8CB1      		in r24,0xc
  12:main.cpp      **** }
  27               		.loc 1 12 0
  28 0006 90E0      		ldi r25,0
  29 0008 0895      		ret
  30               		.cfi_endproc
  31               	.LFE2:
  33               	.global	_Z8Transmith
  35               	_Z8Transmith:
  36               	.LFB3:
  13:main.cpp      **** 
  14:main.cpp      **** void Transmit(unsigned char data)
  15:main.cpp      **** {
  37               		.loc 1 15 0
  38               		.cfi_startproc
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 0 */
  42               	.L__stack_usage = 0
  43               	.LVL0:
  44               	.L6:
  16:main.cpp      **** 	while (! (UCSRA & (1 << UDRE)) );
  45               		.loc 1 16 0
  46 000a 5D9B      		sbis 0xb,5
  47 000c 00C0      		rjmp .L6
  17:main.cpp      **** 	UDR = data;
  48               		.loc 1 17 0
  49 000e 8CB9      		out 0xc,r24
  50 0010 0895      		ret
  51               		.cfi_endproc
  52               	.LFE3:
  54               	.global	__subsf3
  55               	.global	__mulsf3
  56               	.global	__divsf3
  57               	.global	__addsf3
  58               	.global	_Z3mapeeeee
  60               	_Z3mapeeeee:
  61               	.LFB4:
  18:main.cpp      **** 
  19:main.cpp      **** }
  20:main.cpp      **** 
  21:main.cpp      **** long double map(long double x, long double in_min, long double in_max, long double out_min, long do
  22:main.cpp      **** {
  62               		.loc 1 22 0
  63               		.cfi_startproc
  64               	.LVL1:
  65 0012 4F92      		push r4
  66               	.LCFI0:
  67               		.cfi_def_cfa_offset 3
  68               		.cfi_offset 4, -2
  69 0014 5F92      		push r5
  70               	.LCFI1:
  71               		.cfi_def_cfa_offset 4
  72               		.cfi_offset 5, -3
  73 0016 6F92      		push r6
  74               	.LCFI2:
  75               		.cfi_def_cfa_offset 5
  76               		.cfi_offset 6, -4
  77 0018 7F92      		push r7
  78               	.LCFI3:
  79               		.cfi_def_cfa_offset 6
  80               		.cfi_offset 7, -5
  81 001a AF92      		push r10
  82               	.LCFI4:
  83               		.cfi_def_cfa_offset 7
  84               		.cfi_offset 10, -6
  85 001c BF92      		push r11
  86               	.LCFI5:
  87               		.cfi_def_cfa_offset 8
  88               		.cfi_offset 11, -7
  89 001e CF92      		push r12
  90               	.LCFI6:
  91               		.cfi_def_cfa_offset 9
  92               		.cfi_offset 12, -8
  93 0020 DF92      		push r13
  94               	.LCFI7:
  95               		.cfi_def_cfa_offset 10
  96               		.cfi_offset 13, -9
  97 0022 EF92      		push r14
  98               	.LCFI8:
  99               		.cfi_def_cfa_offset 11
 100               		.cfi_offset 14, -10
 101 0024 FF92      		push r15
 102               	.LCFI9:
 103               		.cfi_def_cfa_offset 12
 104               		.cfi_offset 15, -11
 105 0026 0F93      		push r16
 106               	.LCFI10:
 107               		.cfi_def_cfa_offset 13
 108               		.cfi_offset 16, -12
 109 0028 1F93      		push r17
 110               	.LCFI11:
 111               		.cfi_def_cfa_offset 14
 112               		.cfi_offset 17, -13
 113 002a CF93      		push r28
 114               	.LCFI12:
 115               		.cfi_def_cfa_offset 15
 116               		.cfi_offset 28, -14
 117 002c DF93      		push r29
 118               	.LCFI13:
 119               		.cfi_def_cfa_offset 16
 120               		.cfi_offset 29, -15
 121 002e CDB7      		in r28,__SP_L__
 122 0030 DEB7      		in r29,__SP_H__
 123               	.LCFI14:
 124               		.cfi_def_cfa_register 28
 125 0032 2897      		sbiw r28,8
 126               	.LCFI15:
 127               		.cfi_def_cfa_offset 24
 128 0034 0FB6      		in __tmp_reg__,__SREG__
 129 0036 F894      		cli
 130 0038 DEBF      		out __SP_H__,r29
 131 003a 0FBE      		out __SREG__,__tmp_reg__
 132 003c CDBF      		out __SP_L__,r28
 133               	/* prologue: function */
 134               	/* frame size = 8 */
 135               	/* stack size = 22 */
 136               	.L__stack_usage = 22
 137 003e 2901      		movw r4,r18
 138 0040 3A01      		movw r6,r20
 139 0042 ED82      		std Y+5,r14
 140 0044 FE82      		std Y+6,r15
 141 0046 0F83      		std Y+7,r16
 142 0048 1887      		std Y+8,r17
  23:main.cpp      **** 	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 143               		.loc 1 23 0
 144 004a 0E94 0000 		call __subsf3
 145               	.LVL2:
 146 004e 6983      		std Y+1,r22
 147 0050 7A83      		std Y+2,r23
 148 0052 8B83      		std Y+3,r24
 149 0054 9C83      		std Y+4,r25
 150 0056 A601      		movw r20,r12
 151 0058 9501      		movw r18,r10
 152 005a 698D      		ldd r22,Y+25
 153 005c 7A8D      		ldd r23,Y+26
 154 005e 8B8D      		ldd r24,Y+27
 155 0060 9C8D      		ldd r25,Y+28
 156 0062 0E94 0000 		call __subsf3
 157               	.LVL3:
 158 0066 9B01      		movw r18,r22
 159 0068 AC01      		movw r20,r24
 160 006a 6981      		ldd r22,Y+1
 161 006c 7A81      		ldd r23,Y+2
 162 006e 8B81      		ldd r24,Y+3
 163 0070 9C81      		ldd r25,Y+4
 164 0072 0E94 0000 		call __mulsf3
 165               	.LVL4:
 166 0076 6983      		std Y+1,r22
 167 0078 7A83      		std Y+2,r23
 168 007a 8B83      		std Y+3,r24
 169 007c 9C83      		std Y+4,r25
 170 007e A301      		movw r20,r6
 171 0080 9201      		movw r18,r4
 172 0082 C801      		movw r24,r16
 173 0084 B701      		movw r22,r14
 174 0086 0E94 0000 		call __subsf3
 175               	.LVL5:
 176 008a 9B01      		movw r18,r22
 177 008c AC01      		movw r20,r24
 178 008e 6981      		ldd r22,Y+1
 179 0090 7A81      		ldd r23,Y+2
 180 0092 8B81      		ldd r24,Y+3
 181 0094 9C81      		ldd r25,Y+4
 182 0096 0E94 0000 		call __divsf3
 183               	.LVL6:
 184 009a A601      		movw r20,r12
 185 009c 9501      		movw r18,r10
 186 009e 0E94 0000 		call __addsf3
 187               	.LVL7:
 188               	/* epilogue start */
  24:main.cpp      **** }
 189               		.loc 1 24 0
 190 00a2 2896      		adiw r28,8
 191 00a4 0FB6      		in __tmp_reg__,__SREG__
 192 00a6 F894      		cli
 193 00a8 DEBF      		out __SP_H__,r29
 194 00aa 0FBE      		out __SREG__,__tmp_reg__
 195 00ac CDBF      		out __SP_L__,r28
 196 00ae DF91      		pop r29
 197 00b0 CF91      		pop r28
 198 00b2 1F91      		pop r17
 199 00b4 0F91      		pop r16
 200 00b6 FF90      		pop r15
 201 00b8 EF90      		pop r14
 202               	.LVL8:
 203 00ba DF90      		pop r13
 204 00bc CF90      		pop r12
 205 00be BF90      		pop r11
 206 00c0 AF90      		pop r10
 207               	.LVL9:
 208 00c2 7F90      		pop r7
 209 00c4 6F90      		pop r6
 210 00c6 5F90      		pop r5
 211 00c8 4F90      		pop r4
 212               	.LVL10:
 213 00ca 0895      		ret
 214               		.cfi_endproc
 215               	.LFE4:
 217               	.global	_Z22ellipticalSquareToDisceeReS_
 219               	_Z22ellipticalSquareToDisceeReS_:
 220               	.LFB5:
  25:main.cpp      **** void ellipticalSquareToDisc(long double x, long double y, long double& u, long double& v)
  26:main.cpp      **** {
 221               		.loc 1 26 0
 222               		.cfi_startproc
 223               	.LVL11:
 224 00cc 4F92      		push r4
 225               	.LCFI16:
 226               		.cfi_def_cfa_offset 3
 227               		.cfi_offset 4, -2
 228 00ce 5F92      		push r5
 229               	.LCFI17:
 230               		.cfi_def_cfa_offset 4
 231               		.cfi_offset 5, -3
 232 00d0 6F92      		push r6
 233               	.LCFI18:
 234               		.cfi_def_cfa_offset 5
 235               		.cfi_offset 6, -4
 236 00d2 7F92      		push r7
 237               	.LCFI19:
 238               		.cfi_def_cfa_offset 6
 239               		.cfi_offset 7, -5
 240 00d4 8F92      		push r8
 241               	.LCFI20:
 242               		.cfi_def_cfa_offset 7
 243               		.cfi_offset 8, -6
 244 00d6 9F92      		push r9
 245               	.LCFI21:
 246               		.cfi_def_cfa_offset 8
 247               		.cfi_offset 9, -7
 248 00d8 AF92      		push r10
 249               	.LCFI22:
 250               		.cfi_def_cfa_offset 9
 251               		.cfi_offset 10, -8
 252 00da BF92      		push r11
 253               	.LCFI23:
 254               		.cfi_def_cfa_offset 10
 255               		.cfi_offset 11, -9
 256 00dc EF92      		push r14
 257               	.LCFI24:
 258               		.cfi_def_cfa_offset 11
 259               		.cfi_offset 14, -10
 260 00de FF92      		push r15
 261               	.LCFI25:
 262               		.cfi_def_cfa_offset 12
 263               		.cfi_offset 15, -11
 264 00e0 0F93      		push r16
 265               	.LCFI26:
 266               		.cfi_def_cfa_offset 13
 267               		.cfi_offset 16, -12
 268 00e2 1F93      		push r17
 269               	.LCFI27:
 270               		.cfi_def_cfa_offset 14
 271               		.cfi_offset 17, -13
 272               	/* prologue: function */
 273               	/* frame size = 0 */
 274               	/* stack size = 12 */
 275               	.L__stack_usage = 12
 276 00e4 2B01      		movw r4,r22
 277 00e6 3C01      		movw r6,r24
 278 00e8 4901      		movw r8,r18
 279 00ea 5A01      		movw r10,r20
  27:main.cpp      **** 	u = x * sqrt(1.0 - y*y/2.0);
 280               		.loc 1 27 0
 281 00ec CA01      		movw r24,r20
 282 00ee B901      		movw r22,r18
 283               	.LVL12:
 284 00f0 0E94 0000 		call __mulsf3
 285               	.LVL13:
 286 00f4 20E0      		ldi r18,0
 287 00f6 30E0      		ldi r19,0
 288 00f8 40E0      		ldi r20,0
 289 00fa 5FE3      		ldi r21,lo8(63)
 290 00fc 0E94 0000 		call __mulsf3
 291               	.LVL14:
 292 0100 9B01      		movw r18,r22
 293 0102 AC01      		movw r20,r24
 294 0104 60E0      		ldi r22,0
 295 0106 70E0      		ldi r23,0
 296 0108 80E8      		ldi r24,lo8(-128)
 297 010a 9FE3      		ldi r25,lo8(63)
 298 010c 0E94 0000 		call __subsf3
 299               	.LVL15:
 300 0110 0E94 0000 		call sqrt
 301               	.LVL16:
 302 0114 A301      		movw r20,r6
 303 0116 9201      		movw r18,r4
 304 0118 0E94 0000 		call __mulsf3
 305               	.LVL17:
 306 011c F801      		movw r30,r16
 307 011e 6083      		st Z,r22
 308 0120 7183      		std Z+1,r23
 309 0122 8283      		std Z+2,r24
 310 0124 9383      		std Z+3,r25
  28:main.cpp      **** 	v = y * sqrt(1.0 - x*x/2.0);
 311               		.loc 1 28 0
 312 0126 A301      		movw r20,r6
 313 0128 9201      		movw r18,r4
 314 012a C301      		movw r24,r6
 315 012c B201      		movw r22,r4
 316 012e 0E94 0000 		call __mulsf3
 317               	.LVL18:
 318 0132 20E0      		ldi r18,0
 319 0134 30E0      		ldi r19,0
 320 0136 40E0      		ldi r20,0
 321 0138 5FE3      		ldi r21,lo8(63)
 322 013a 0E94 0000 		call __mulsf3
 323               	.LVL19:
 324 013e 9B01      		movw r18,r22
 325 0140 AC01      		movw r20,r24
 326 0142 60E0      		ldi r22,0
 327 0144 70E0      		ldi r23,0
 328 0146 80E8      		ldi r24,lo8(-128)
 329 0148 9FE3      		ldi r25,lo8(63)
 330 014a 0E94 0000 		call __subsf3
 331               	.LVL20:
 332 014e 0E94 0000 		call sqrt
 333               	.LVL21:
 334 0152 9B01      		movw r18,r22
 335 0154 AC01      		movw r20,r24
 336 0156 C501      		movw r24,r10
 337 0158 B401      		movw r22,r8
 338 015a 0E94 0000 		call __mulsf3
 339               	.LVL22:
 340 015e F701      		movw r30,r14
 341 0160 6083      		st Z,r22
 342 0162 7183      		std Z+1,r23
 343 0164 8283      		std Z+2,r24
 344 0166 9383      		std Z+3,r25
 345               	/* epilogue start */
  29:main.cpp      **** }
 346               		.loc 1 29 0
 347 0168 1F91      		pop r17
 348 016a 0F91      		pop r16
 349               	.LVL23:
 350 016c FF90      		pop r15
 351 016e EF90      		pop r14
 352               	.LVL24:
 353 0170 BF90      		pop r11
 354 0172 AF90      		pop r10
 355 0174 9F90      		pop r9
 356 0176 8F90      		pop r8
 357               	.LVL25:
 358 0178 7F90      		pop r7
 359 017a 6F90      		pop r6
 360 017c 5F90      		pop r5
 361 017e 4F90      		pop r4
 362               	.LVL26:
 363 0180 0895      		ret
 364               		.cfi_endproc
 365               	.LFE5:
 367               	.global	_Z22ellipticalDiscToSquareeeReS_
 369               	_Z22ellipticalDiscToSquareeeReS_:
 370               	.LFB6:
  30:main.cpp      **** 
  31:main.cpp      **** void ellipticalDiscToSquare(long double u, long double v, long double& x, long double& y)
  32:main.cpp      **** {
 371               		.loc 1 32 0
 372               		.cfi_startproc
 373               	.LVL27:
 374 0182 4F92      		push r4
 375               	.LCFI28:
 376               		.cfi_def_cfa_offset 3
 377               		.cfi_offset 4, -2
 378 0184 5F92      		push r5
 379               	.LCFI29:
 380               		.cfi_def_cfa_offset 4
 381               		.cfi_offset 5, -3
 382 0186 6F92      		push r6
 383               	.LCFI30:
 384               		.cfi_def_cfa_offset 5
 385               		.cfi_offset 6, -4
 386 0188 7F92      		push r7
 387               	.LCFI31:
 388               		.cfi_def_cfa_offset 6
 389               		.cfi_offset 7, -5
 390 018a 8F92      		push r8
 391               	.LCFI32:
 392               		.cfi_def_cfa_offset 7
 393               		.cfi_offset 8, -6
 394 018c 9F92      		push r9
 395               	.LCFI33:
 396               		.cfi_def_cfa_offset 8
 397               		.cfi_offset 9, -7
 398 018e AF92      		push r10
 399               	.LCFI34:
 400               		.cfi_def_cfa_offset 9
 401               		.cfi_offset 10, -8
 402 0190 BF92      		push r11
 403               	.LCFI35:
 404               		.cfi_def_cfa_offset 10
 405               		.cfi_offset 11, -9
 406 0192 CF92      		push r12
 407               	.LCFI36:
 408               		.cfi_def_cfa_offset 11
 409               		.cfi_offset 12, -10
 410 0194 DF92      		push r13
 411               	.LCFI37:
 412               		.cfi_def_cfa_offset 12
 413               		.cfi_offset 13, -11
 414 0196 EF92      		push r14
 415               	.LCFI38:
 416               		.cfi_def_cfa_offset 13
 417               		.cfi_offset 14, -12
 418 0198 FF92      		push r15
 419               	.LCFI39:
 420               		.cfi_def_cfa_offset 14
 421               		.cfi_offset 15, -13
 422 019a 0F93      		push r16
 423               	.LCFI40:
 424               		.cfi_def_cfa_offset 15
 425               		.cfi_offset 16, -14
 426 019c 1F93      		push r17
 427               	.LCFI41:
 428               		.cfi_def_cfa_offset 16
 429               		.cfi_offset 17, -15
 430 019e CF93      		push r28
 431               	.LCFI42:
 432               		.cfi_def_cfa_offset 17
 433               		.cfi_offset 28, -16
 434 01a0 DF93      		push r29
 435               	.LCFI43:
 436               		.cfi_def_cfa_offset 18
 437               		.cfi_offset 29, -17
 438 01a2 CDB7      		in r28,__SP_L__
 439 01a4 DEB7      		in r29,__SP_H__
 440               	.LCFI44:
 441               		.cfi_def_cfa_register 28
 442 01a6 2E97      		sbiw r28,14
 443               	.LCFI45:
 444               		.cfi_def_cfa_offset 32
 445 01a8 0FB6      		in __tmp_reg__,__SREG__
 446 01aa F894      		cli
 447 01ac DEBF      		out __SP_H__,r29
 448 01ae 0FBE      		out __SREG__,__tmp_reg__
 449 01b0 CDBF      		out __SP_L__,r28
 450               	/* prologue: function */
 451               	/* frame size = 14 */
 452               	/* stack size = 30 */
 453               	.L__stack_usage = 30
 454 01b2 4B01      		movw r8,r22
 455 01b4 5C01      		movw r10,r24
 456 01b6 2901      		movw r4,r18
 457 01b8 3A01      		movw r6,r20
 458 01ba FE86      		std Y+14,r15
 459 01bc ED86      		std Y+13,r14
  33:main.cpp      **** 	long double u2 = u * u;
 460               		.loc 1 33 0
 461 01be 9B01      		movw r18,r22
 462 01c0 AC01      		movw r20,r24
 463               	.LVL28:
 464 01c2 0E94 0000 		call __mulsf3
 465               	.LVL29:
 466 01c6 6B01      		movw r12,r22
 467 01c8 7C01      		movw r14,r24
 468               	.LVL30:
  34:main.cpp      **** 	long double v2 = v * v;
 469               		.loc 1 34 0
 470 01ca A301      		movw r20,r6
 471 01cc 9201      		movw r18,r4
 472 01ce C301      		movw r24,r6
 473 01d0 B201      		movw r22,r4
 474 01d2 0E94 0000 		call __mulsf3
 475               	.LVL31:
 476 01d6 6983      		std Y+1,r22
 477 01d8 7A83      		std Y+2,r23
 478 01da 8B83      		std Y+3,r24
 479 01dc 9C83      		std Y+4,r25
 480               	.LVL32:
  35:main.cpp      **** 	long double twosqrt2 = 2.0 * sqrt(2.0);
  36:main.cpp      **** 	long double subtermx = 2.0 + u2 - v2;
 481               		.loc 1 36 0
 482 01de 20E0      		ldi r18,0
 483 01e0 30E0      		ldi r19,0
 484 01e2 40E0      		ldi r20,0
 485 01e4 50E4      		ldi r21,lo8(64)
 486 01e6 C701      		movw r24,r14
 487 01e8 B601      		movw r22,r12
 488               	.LVL33:
 489 01ea 0E94 0000 		call __addsf3
 490               	.LVL34:
 491 01ee 2981      		ldd r18,Y+1
 492 01f0 3A81      		ldd r19,Y+2
 493 01f2 4B81      		ldd r20,Y+3
 494 01f4 5C81      		ldd r21,Y+4
 495 01f6 0E94 0000 		call __subsf3
 496               	.LVL35:
 497 01fa 6D83      		std Y+5,r22
 498 01fc 7E83      		std Y+6,r23
 499 01fe 8F83      		std Y+7,r24
 500 0200 9887      		std Y+8,r25
 501               	.LVL36:
  37:main.cpp      **** 	long double subtermy = 2.0 - u2 + v2;
 502               		.loc 1 37 0
 503 0202 A701      		movw r20,r14
 504 0204 9601      		movw r18,r12
 505 0206 60E0      		ldi r22,0
 506 0208 70E0      		ldi r23,0
 507 020a 80E0      		ldi r24,0
 508 020c 90E4      		ldi r25,lo8(64)
 509               	.LVL37:
 510 020e 0E94 0000 		call __subsf3
 511               	.LVL38:
 512 0212 2981      		ldd r18,Y+1
 513 0214 3A81      		ldd r19,Y+2
 514 0216 4B81      		ldd r20,Y+3
 515 0218 5C81      		ldd r21,Y+4
 516 021a 0E94 0000 		call __addsf3
 517               	.LVL39:
 518 021e 6B01      		movw r12,r22
 519 0220 7C01      		movw r14,r24
 520               	.LVL40:
  38:main.cpp      **** 	long double termx1 = subtermx + u * twosqrt2;
 521               		.loc 1 38 0
 522 0222 23EF      		ldi r18,lo8(-13)
 523 0224 34E0      		ldi r19,lo8(4)
 524 0226 45E3      		ldi r20,lo8(53)
 525 0228 50E4      		ldi r21,lo8(64)
 526 022a C501      		movw r24,r10
 527 022c B401      		movw r22,r8
 528 022e 0E94 0000 		call __mulsf3
 529               	.LVL41:
 530 0232 4B01      		movw r8,r22
 531 0234 5C01      		movw r10,r24
 532               	.LVL42:
  39:main.cpp      **** 	long double termx2 = subtermx - u * twosqrt2;
  40:main.cpp      **** 	long double termy1 = subtermy + v * twosqrt2;
 533               		.loc 1 40 0
 534 0236 23EF      		ldi r18,lo8(-13)
 535 0238 34E0      		ldi r19,lo8(4)
 536 023a 45E3      		ldi r20,lo8(53)
 537 023c 50E4      		ldi r21,lo8(64)
 538 023e C301      		movw r24,r6
 539 0240 B201      		movw r22,r4
 540 0242 0E94 0000 		call __mulsf3
 541               	.LVL43:
 542 0246 6983      		std Y+1,r22
 543 0248 7A83      		std Y+2,r23
 544 024a 8B83      		std Y+3,r24
 545 024c 9C83      		std Y+4,r25
 546               	.LVL44:
  41:main.cpp      **** 	long double termy2 = subtermy - v * twosqrt2;
  42:main.cpp      **** 	x = 0.5 * sqrt(termx1) - 0.5 * sqrt(termx2);
 547               		.loc 1 42 0
 548 024e A501      		movw r20,r10
 549 0250 9401      		movw r18,r8
 550 0252 6D81      		ldd r22,Y+5
 551 0254 7E81      		ldd r23,Y+6
 552 0256 8F81      		ldd r24,Y+7
 553 0258 9885      		ldd r25,Y+8
 554               	.LVL45:
 555 025a 0E94 0000 		call __addsf3
 556               	.LVL46:
 557 025e 0E94 0000 		call sqrt
 558               	.LVL47:
 559 0262 6987      		std Y+9,r22
 560 0264 7A87      		std Y+10,r23
 561 0266 8B87      		std Y+11,r24
 562 0268 9C87      		std Y+12,r25
 563 026a A501      		movw r20,r10
 564 026c 9401      		movw r18,r8
 565 026e 6D81      		ldd r22,Y+5
 566 0270 7E81      		ldd r23,Y+6
 567 0272 8F81      		ldd r24,Y+7
 568 0274 9885      		ldd r25,Y+8
 569 0276 0E94 0000 		call __subsf3
 570               	.LVL48:
 571 027a 0E94 0000 		call sqrt
 572               	.LVL49:
 573 027e 2B01      		movw r4,r22
 574 0280 3C01      		movw r6,r24
 575               	.LVL50:
 576 0282 20E0      		ldi r18,0
 577 0284 30E0      		ldi r19,0
 578 0286 40E0      		ldi r20,0
 579 0288 5FE3      		ldi r21,lo8(63)
 580 028a 6985      		ldd r22,Y+9
 581 028c 7A85      		ldd r23,Y+10
 582 028e 8B85      		ldd r24,Y+11
 583 0290 9C85      		ldd r25,Y+12
 584 0292 0E94 0000 		call __mulsf3
 585               	.LVL51:
 586 0296 4B01      		movw r8,r22
 587 0298 5C01      		movw r10,r24
 588               	.LVL52:
 589 029a 20E0      		ldi r18,0
 590 029c 30E0      		ldi r19,0
 591 029e 40E0      		ldi r20,0
 592 02a0 5FE3      		ldi r21,lo8(63)
 593 02a2 C301      		movw r24,r6
 594 02a4 B201      		movw r22,r4
 595 02a6 0E94 0000 		call __mulsf3
 596               	.LVL53:
 597 02aa 9B01      		movw r18,r22
 598 02ac AC01      		movw r20,r24
 599 02ae C501      		movw r24,r10
 600 02b0 B401      		movw r22,r8
 601 02b2 0E94 0000 		call __subsf3
 602               	.LVL54:
 603 02b6 F801      		movw r30,r16
 604 02b8 6083      		st Z,r22
 605 02ba 7183      		std Z+1,r23
 606 02bc 8283      		std Z+2,r24
 607 02be 9383      		std Z+3,r25
  43:main.cpp      **** 	y = 0.5 * sqrt(termy1) - 0.5 * sqrt(termy2);
 608               		.loc 1 43 0
 609 02c0 2981      		ldd r18,Y+1
 610 02c2 3A81      		ldd r19,Y+2
 611 02c4 4B81      		ldd r20,Y+3
 612 02c6 5C81      		ldd r21,Y+4
 613 02c8 C701      		movw r24,r14
 614 02ca B601      		movw r22,r12
 615 02cc 0E94 0000 		call __addsf3
 616               	.LVL55:
 617 02d0 0E94 0000 		call sqrt
 618               	.LVL56:
 619 02d4 4B01      		movw r8,r22
 620 02d6 5C01      		movw r10,r24
 621 02d8 2981      		ldd r18,Y+1
 622 02da 3A81      		ldd r19,Y+2
 623 02dc 4B81      		ldd r20,Y+3
 624 02de 5C81      		ldd r21,Y+4
 625 02e0 C701      		movw r24,r14
 626 02e2 B601      		movw r22,r12
 627 02e4 0E94 0000 		call __subsf3
 628               	.LVL57:
 629 02e8 0E94 0000 		call sqrt
 630               	.LVL58:
 631 02ec 2B01      		movw r4,r22
 632 02ee 3C01      		movw r6,r24
 633 02f0 20E0      		ldi r18,0
 634 02f2 30E0      		ldi r19,0
 635 02f4 40E0      		ldi r20,0
 636 02f6 5FE3      		ldi r21,lo8(63)
 637 02f8 C501      		movw r24,r10
 638 02fa B401      		movw r22,r8
 639 02fc 0E94 0000 		call __mulsf3
 640               	.LVL59:
 641 0300 6B01      		movw r12,r22
 642 0302 7C01      		movw r14,r24
 643               	.LVL60:
 644 0304 20E0      		ldi r18,0
 645 0306 30E0      		ldi r19,0
 646 0308 40E0      		ldi r20,0
 647 030a 5FE3      		ldi r21,lo8(63)
 648 030c C301      		movw r24,r6
 649 030e B201      		movw r22,r4
 650 0310 0E94 0000 		call __mulsf3
 651               	.LVL61:
 652 0314 9B01      		movw r18,r22
 653 0316 AC01      		movw r20,r24
 654 0318 C701      		movw r24,r14
 655 031a B601      		movw r22,r12
 656 031c 0E94 0000 		call __subsf3
 657               	.LVL62:
 658 0320 ED85      		ldd r30,Y+13
 659 0322 FE85      		ldd r31,Y+14
 660 0324 6083      		st Z,r22
 661 0326 7183      		std Z+1,r23
 662 0328 8283      		std Z+2,r24
 663 032a 9383      		std Z+3,r25
 664               	/* epilogue start */
  44:main.cpp      **** 
  45:main.cpp      **** }
 665               		.loc 1 45 0
 666 032c 2E96      		adiw r28,14
 667 032e 0FB6      		in __tmp_reg__,__SREG__
 668 0330 F894      		cli
 669 0332 DEBF      		out __SP_H__,r29
 670 0334 0FBE      		out __SREG__,__tmp_reg__
 671 0336 CDBF      		out __SP_L__,r28
 672 0338 DF91      		pop r29
 673 033a CF91      		pop r28
 674 033c 1F91      		pop r17
 675 033e 0F91      		pop r16
 676               	.LVL63:
 677 0340 FF90      		pop r15
 678 0342 EF90      		pop r14
 679               	.LVL64:
 680 0344 DF90      		pop r13
 681 0346 CF90      		pop r12
 682 0348 BF90      		pop r11
 683 034a AF90      		pop r10
 684 034c 9F90      		pop r9
 685 034e 8F90      		pop r8
 686 0350 7F90      		pop r7
 687 0352 6F90      		pop r6
 688 0354 5F90      		pop r5
 689 0356 4F90      		pop r4
 690 0358 0895      		ret
 691               		.cfi_endproc
 692               	.LFE6:
 694               	.global	__floatsisf
 695               	.global	__gesf2
 696               	.global	__lesf2
 697               	.global	__gtsf2
 698               	.global	__ltsf2
 699               	.global	__fixsfsi
 700               		.section	.text.startup,"ax",@progbits
 701               	.global	main
 703               	main:
 704               	.LFB7:
  46:main.cpp      **** int main (void)
  47:main.cpp      **** {
 705               		.loc 1 47 0
 706               		.cfi_startproc
 707 0000 CF93      		push r28
 708               	.LCFI46:
 709               		.cfi_def_cfa_offset 3
 710               		.cfi_offset 28, -2
 711 0002 DF93      		push r29
 712               	.LCFI47:
 713               		.cfi_def_cfa_offset 4
 714               		.cfi_offset 29, -3
 715 0004 CDB7      		in r28,__SP_L__
 716 0006 DEB7      		in r29,__SP_H__
 717               	.LCFI48:
 718               		.cfi_def_cfa_register 28
 719 0008 2A97      		sbiw r28,10
 720               	.LCFI49:
 721               		.cfi_def_cfa_offset 14
 722 000a 0FB6      		in __tmp_reg__,__SREG__
 723 000c F894      		cli
 724 000e DEBF      		out __SP_H__,r29
 725 0010 0FBE      		out __SREG__,__tmp_reg__
 726 0012 CDBF      		out __SP_L__,r28
 727               	/* prologue: function */
 728               	/* frame size = 10 */
 729               	/* stack size = 12 */
 730               	.L__stack_usage = 12
  48:main.cpp      **** 	TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 731               		.loc 1 48 0
 732 0014 83B7      		in r24,0x33
 733 0016 8966      		ori r24,lo8(105)
 734 0018 83BF      		out 0x33,r24
  49:main.cpp      **** 	DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 735               		.loc 1 49 0
 736 001a 87B3      		in r24,0x17
 737 001c 8B60      		ori r24,lo8(11)
 738 001e 87BB      		out 0x17,r24
  50:main.cpp      **** 	TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 739               		.loc 1 50 0
 740 0020 85B5      		in r24,0x25
 741 0022 8966      		ori r24,lo8(105)
 742 0024 85BD      		out 0x25,r24
  51:main.cpp      **** 	DDRD |= 1<< PB7 | 1<< PD4;
 743               		.loc 1 51 0
 744 0026 81B3      		in r24,0x11
 745 0028 8069      		ori r24,lo8(-112)
 746 002a 81BB      		out 0x11,r24
  52:main.cpp      **** 	PORTB &= ~(1<< PINB0);
 747               		.loc 1 52 0
 748 002c C098      		cbi 0x18,0
  53:main.cpp      **** 	PORTD &= ~(1<< PIND4);
 749               		.loc 1 53 0
 750 002e 9498      		cbi 0x12,4
  54:main.cpp      **** 	UCSRA = (1 << U2X);
 751               		.loc 1 54 0
 752 0030 82E0      		ldi r24,lo8(2)
 753 0032 8BB9      		out 0xb,r24
  55:main.cpp      **** 		UBRRH = 0x00;
 754               		.loc 1 55 0
 755 0034 10BC      		out 0x20,__zero_reg__
  56:main.cpp      **** 	UBRRL = 0x01;
 756               		.loc 1 56 0
 757 0036 81E0      		ldi r24,lo8(1)
 758 0038 89B9      		out 0x9,r24
  57:main.cpp      **** 	UCSRB = (1 << RXEN);
 759               		.loc 1 57 0
 760 003a 80E1      		ldi r24,lo8(16)
 761 003c 8AB9      		out 0xa,r24
  58:main.cpp      **** 	UCSRC = (1 << URSEL) | (3 << UCSZ0);
 762               		.loc 1 58 0
 763 003e 86E8      		ldi r24,lo8(-122)
 764 0040 80BD      		out 0x20,r24
 765               	.L13:
 766               	.LBB15:
 767               	.LBB16:
  59:main.cpp      **** 	while (1)
  60:main.cpp      **** 	{
  61:main.cpp      **** 
  62:main.cpp      **** 		double x2,y2;
  63:main.cpp      **** 		if(Receive()==0x11)
 768               		.loc 1 63 0
 769 0042 0E94 0000 		call _Z7Receivev
 770               	.LVL65:
 771 0046 4197      		sbiw r24,17
 772 0048 01F0      		breq .+2
 773 004a 00C0      		rjmp .L53
 774               	.LBB17:
  64:main.cpp      **** 		{
  65:main.cpp      **** 			int x1= Receive();
 775               		.loc 1 65 0
 776 004c 0E94 0000 		call _Z7Receivev
 777               	.LVL66:
 778 0050 7C01      		movw r14,r24
 779               	.LVL67:
  66:main.cpp      **** 			x2 = (Receive())<<8 | x1;
 780               		.loc 1 66 0
 781 0052 0E94 0000 		call _Z7Receivev
 782               	.LVL68:
 783 0056 D82E      		mov r13,r24
 784               	.LVL69:
 785               	.LBE17:
 786               	.LBE16:
 787               	.LBB18:
  67:main.cpp      **** 
  68:main.cpp      **** 		}
  69:main.cpp      **** 		else
  70:main.cpp      **** 		{
  71:main.cpp      **** 			OCR0=0;
  72:main.cpp      **** 			OCR2=0;
  73:main.cpp      **** 			PORTD&=~1<<PD4;
  74:main.cpp      **** 			PORTB&=~(1<<PB0);
  75:main.cpp      **** 			continue;
  76:main.cpp      **** 		}
  77:main.cpp      **** 		if(Receive()==0x21)
 788               		.loc 1 77 0
 789 0058 0E94 0000 		call _Z7Receivev
 790               	.LVL70:
 791 005c 8197      		sbiw r24,33
 792 005e 01F4      		brne .L53
 793               	.LBB19:
  78:main.cpp      **** 		{
  79:main.cpp      **** 			int y1=Receive();
 794               		.loc 1 79 0
 795 0060 0E94 0000 		call _Z7Receivev
 796               	.LVL71:
 797 0064 3C01      		movw r6,r24
 798               	.LVL72:
  80:main.cpp      **** 			y2=(Receive())<<8 | y1;
 799               		.loc 1 80 0
 800 0066 0E94 0000 		call _Z7Receivev
 801               	.LVL73:
 802 006a 582E      		mov r5,r24
 803               	.LVL74:
 804               	.LBE19:
 805               	.LBE18:
  81:main.cpp      **** 		}
  82:main.cpp      **** 		else
  83:main.cpp      **** 		{
  84:main.cpp      **** 			OCR0=0;
  85:main.cpp      **** 			OCR2=0;
  86:main.cpp      **** 			PORTD&=~1<<PD4;
  87:main.cpp      **** 			PORTB&=~(1<<PB0);
  88:main.cpp      **** 			continue;
  89:main.cpp      **** 		}
  90:main.cpp      **** 		long double x1 = x2 - 512;
 806               		.loc 1 90 0
 807 006c 3D2C      		mov r3,r13
 808 006e 212C      		mov r2,__zero_reg__
 809 0070 B101      		movw r22,r2
 810 0072 6E29      		or r22,r14
 811 0074 7F29      		or r23,r15
 812 0076 072E      		mov __tmp_reg__,r23
 813 0078 000C      		lsl r0
 814 007a 880B      		sbc r24,r24
 815 007c 990B      		sbc r25,r25
 816 007e 0E94 0000 		call __floatsisf
 817               	.LVL75:
 818 0082 20E0      		ldi r18,0
 819 0084 30E0      		ldi r19,0
 820 0086 40E0      		ldi r20,0
 821 0088 54E4      		ldi r21,lo8(68)
 822 008a 0E94 0000 		call __subsf3
 823               	.LVL76:
 824 008e 6B01      		movw r12,r22
 825 0090 7C01      		movw r14,r24
 826               	.LVL77:
  91:main.cpp      **** 		long double y1 = 512 - y2;
 827               		.loc 1 91 0
 828 0092 5A86      		std Y+10,r5
 829 0094 1986      		std Y+9,__zero_reg__
 830 0096 6985      		ldd r22,Y+9
 831 0098 7A85      		ldd r23,Y+10
 832 009a 6629      		or r22,r6
 833 009c 7729      		or r23,r7
 834 009e 072E      		mov __tmp_reg__,r23
 835 00a0 000C      		lsl r0
 836 00a2 880B      		sbc r24,r24
 837 00a4 990B      		sbc r25,r25
 838 00a6 0E94 0000 		call __floatsisf
 839               	.LVL78:
 840 00aa 9B01      		movw r18,r22
 841 00ac AC01      		movw r20,r24
 842 00ae 60E0      		ldi r22,0
 843 00b0 70E0      		ldi r23,0
 844 00b2 80E0      		ldi r24,0
 845 00b4 94E4      		ldi r25,lo8(68)
 846 00b6 0E94 0000 		call __subsf3
 847               	.LVL79:
 848 00ba 2B01      		movw r4,r22
 849 00bc 3C01      		movw r6,r24
 850               	.LVL80:
  92:main.cpp      **** 		if(y1/x1>=12.8&&y1/x1<=-12.8)
 851               		.loc 1 92 0
 852 00be A701      		movw r20,r14
 853 00c0 9601      		movw r18,r12
 854 00c2 0E94 0000 		call __divsf3
 855               	.LVL81:
 856 00c6 4B01      		movw r8,r22
 857 00c8 5C01      		movw r10,r24
 858 00ca 2DEC      		ldi r18,lo8(-51)
 859 00cc 3CEC      		ldi r19,lo8(-52)
 860 00ce 4CE4      		ldi r20,lo8(76)
 861 00d0 51E4      		ldi r21,lo8(65)
 862 00d2 0E94 0000 		call __gesf2
 863               	.LVL82:
 864 00d6 87FF      		sbrs r24,7
 865 00d8 00C0      		rjmp .L18
 866 00da 00C0      		rjmp .L19
 867               	.LVL83:
 868               	.L53:
 869               	.LBB20:
  84:main.cpp      **** 			OCR2=0;
 870               		.loc 1 84 0
 871 00dc 1CBE      		out 0x3c,__zero_reg__
  85:main.cpp      **** 			PORTD&=~1<<PD4;
 872               		.loc 1 85 0
 873 00de 13BC      		out 0x23,__zero_reg__
  86:main.cpp      **** 			PORTB&=~(1<<PB0);
 874               		.loc 1 86 0
 875 00e0 82B3      		in r24,0x12
 876 00e2 807E      		andi r24,lo8(-32)
 877 00e4 82BB      		out 0x12,r24
  87:main.cpp      **** 			continue;
 878               		.loc 1 87 0
 879 00e6 C098      		cbi 0x18,0
  88:main.cpp      **** 		}
 880               		.loc 1 88 0
 881 00e8 00C0      		rjmp .L13
 882               	.LVL84:
 883               	.L18:
 884               	.LBE20:
 885               		.loc 1 92 0 discriminator 1
 886 00ea 2DEC      		ldi r18,lo8(-51)
 887 00ec 3CEC      		ldi r19,lo8(-52)
 888 00ee 4CE4      		ldi r20,lo8(76)
 889 00f0 51EC      		ldi r21,lo8(-63)
 890 00f2 C501      		movw r24,r10
 891 00f4 B401      		movw r22,r8
 892 00f6 0E94 0000 		call __lesf2
 893               	.LVL85:
 894 00fa 1816      		cp __zero_reg__,r24
 895 00fc 04F0      		brlt .L19
  93:main.cpp      **** 		x1=0;
 896               		.loc 1 93 0
 897 00fe C12C      		mov r12,__zero_reg__
 898 0100 D12C      		mov r13,__zero_reg__
 899 0102 7601      		movw r14,r12
 900               	.LVL86:
 901               	.L19:
  94:main.cpp      **** 		if(y1/x1<=0.390625&&y1/x1>=-0.390625)
 902               		.loc 1 94 0
 903 0104 A701      		movw r20,r14
 904 0106 9601      		movw r18,r12
 905 0108 C301      		movw r24,r6
 906 010a B201      		movw r22,r4
 907 010c 0E94 0000 		call __divsf3
 908               	.LVL87:
 909 0110 4B01      		movw r8,r22
 910 0112 5C01      		movw r10,r24
 911 0114 20E0      		ldi r18,0
 912 0116 30E0      		ldi r19,0
 913 0118 48EC      		ldi r20,lo8(-56)
 914 011a 5EE3      		ldi r21,lo8(62)
 915 011c 0E94 0000 		call __lesf2
 916               	.LVL88:
 917 0120 1816      		cp __zero_reg__,r24
 918 0122 04F0      		brlt .L21
 919               		.loc 1 94 0 is_stmt 0 discriminator 1
 920 0124 20E0      		ldi r18,0
 921 0126 30E0      		ldi r19,0
 922 0128 48EC      		ldi r20,lo8(-56)
 923 012a 5EEB      		ldi r21,lo8(-66)
 924 012c C501      		movw r24,r10
 925 012e B401      		movw r22,r8
 926 0130 0E94 0000 		call __gesf2
 927               	.LVL89:
 928 0134 87FD      		sbrc r24,7
 929 0136 00C0      		rjmp .L21
  95:main.cpp      **** 		y1=0;
 930               		.loc 1 95 0 is_stmt 1
 931 0138 412C      		mov r4,__zero_reg__
 932 013a 512C      		mov r5,__zero_reg__
 933 013c 3201      		movw r6,r4
 934               	.LVL90:
 935               	.L21:
  96:main.cpp      **** 		x1=map(x1,-512,512,-1,1);
  97:main.cpp      **** 		y1=map(y1,-512,512,-1,1);
  98:main.cpp      **** 		long double xans,yans;
  99:main.cpp      **** 		ellipticalSquareToDisc(x1, y1, xans, yans);
 936               		.loc 1 99 0
 937 013e 20E0      		ldi r18,0
 938 0140 30E0      		ldi r19,0
 939 0142 40E0      		ldi r20,0
 940 0144 54E4      		ldi r21,lo8(68)
 941 0146 C301      		movw r24,r6
 942 0148 B201      		movw r22,r4
 943 014a 0E94 0000 		call __addsf3
 944               	.LVL91:
 945 014e 9B01      		movw r18,r22
 946 0150 AC01      		movw r20,r24
 947 0152 0E94 0000 		call __addsf3
 948               	.LVL92:
 949 0156 20E0      		ldi r18,0
 950 0158 30E0      		ldi r19,0
 951 015a 40E8      		ldi r20,lo8(-128)
 952 015c 5AE3      		ldi r21,lo8(58)
 953 015e 0E94 0000 		call __mulsf3
 954               	.LVL93:
 955 0162 20E0      		ldi r18,0
 956 0164 30E0      		ldi r19,0
 957 0166 40E8      		ldi r20,lo8(-128)
 958 0168 5FE3      		ldi r21,lo8(63)
 959 016a 0E94 0000 		call __subsf3
 960               	.LVL94:
 961 016e 2B01      		movw r4,r22
 962 0170 3C01      		movw r6,r24
 963 0172 20E0      		ldi r18,0
 964 0174 30E0      		ldi r19,0
 965 0176 40E0      		ldi r20,0
 966 0178 54E4      		ldi r21,lo8(68)
 967 017a C701      		movw r24,r14
 968 017c B601      		movw r22,r12
 969 017e 0E94 0000 		call __addsf3
 970               	.LVL95:
 971 0182 9B01      		movw r18,r22
 972 0184 AC01      		movw r20,r24
 973 0186 0E94 0000 		call __addsf3
 974               	.LVL96:
 975 018a 20E0      		ldi r18,0
 976 018c 30E0      		ldi r19,0
 977 018e 40E8      		ldi r20,lo8(-128)
 978 0190 5AE3      		ldi r21,lo8(58)
 979 0192 0E94 0000 		call __mulsf3
 980               	.LVL97:
 981 0196 20E0      		ldi r18,0
 982 0198 30E0      		ldi r19,0
 983 019a 40E8      		ldi r20,lo8(-128)
 984 019c 5FE3      		ldi r21,lo8(63)
 985 019e 0E94 0000 		call __subsf3
 986               	.LVL98:
 987 01a2 9E01      		movw r18,r28
 988 01a4 2F5F      		subi r18,-1
 989 01a6 3F4F      		sbci r19,-1
 990 01a8 7901      		movw r14,r18
 991               	.LVL99:
 992 01aa 8E01      		movw r16,r28
 993 01ac 0B5F      		subi r16,-5
 994 01ae 1F4F      		sbci r17,-1
 995 01b0 A301      		movw r20,r6
 996 01b2 9201      		movw r18,r4
 997 01b4 0E94 0000 		call _Z22ellipticalSquareToDisceeReS_
 998               	.LVL100:
 100:main.cpp      **** 		long double x = (xans * 0.707) + (yans * 0.707);
 999               		.loc 1 100 0
 1000 01b8 8D80      		ldd r8,Y+5
 1001 01ba 9E80      		ldd r9,Y+6
 1002 01bc AF80      		ldd r10,Y+7
 1003 01be B884      		ldd r11,Y+8
 1004 01c0 24EF      		ldi r18,lo8(-12)
 1005 01c2 3DEF      		ldi r19,lo8(-3)
 1006 01c4 44E3      		ldi r20,lo8(52)
 1007 01c6 5FE3      		ldi r21,lo8(63)
 1008 01c8 6981      		ldd r22,Y+1
 1009 01ca 7A81      		ldd r23,Y+2
 1010 01cc 8B81      		ldd r24,Y+3
 1011 01ce 9C81      		ldd r25,Y+4
 1012 01d0 0E94 0000 		call __mulsf3
 1013               	.LVL101:
 1014 01d4 6B01      		movw r12,r22
 1015 01d6 7C01      		movw r14,r24
 1016               	.LVL102:
 101:main.cpp      **** 		long double y = (-xans * 0.707) + (yans * 0.707);
 102:main.cpp      **** 		ellipticalDiscToSquare(x,y,xans,yans);
 1017               		.loc 1 102 0
 1018 01d8 C501      		movw r24,r10
 1019 01da B401      		movw r22,r8
 1020 01dc 9058      		subi r25,0x80
 1021 01de 24EF      		ldi r18,lo8(-12)
 1022 01e0 3DEF      		ldi r19,lo8(-3)
 1023 01e2 44E3      		ldi r20,lo8(52)
 1024 01e4 5FE3      		ldi r21,lo8(63)
 1025 01e6 0E94 0000 		call __mulsf3
 1026               	.LVL103:
 1027 01ea A701      		movw r20,r14
 1028 01ec 9601      		movw r18,r12
 1029 01ee 0E94 0000 		call __addsf3
 1030               	.LVL104:
 1031 01f2 2B01      		movw r4,r22
 1032 01f4 3C01      		movw r6,r24
 1033 01f6 24EF      		ldi r18,lo8(-12)
 1034 01f8 3DEF      		ldi r19,lo8(-3)
 1035 01fa 44E3      		ldi r20,lo8(52)
 1036 01fc 5FE3      		ldi r21,lo8(63)
 1037 01fe C501      		movw r24,r10
 1038 0200 B401      		movw r22,r8
 1039 0202 0E94 0000 		call __mulsf3
 1040               	.LVL105:
 1041 0206 A701      		movw r20,r14
 1042 0208 9601      		movw r18,r12
 1043 020a 0E94 0000 		call __addsf3
 1044               	.LVL106:
 1045 020e 9E01      		movw r18,r28
 1046 0210 2F5F      		subi r18,-1
 1047 0212 3F4F      		sbci r19,-1
 1048 0214 7901      		movw r14,r18
 1049 0216 A301      		movw r20,r6
 1050 0218 9201      		movw r18,r4
 1051 021a 0E94 0000 		call _Z22ellipticalDiscToSquareeeReS_
 1052               	.LVL107:
 1053               	.LBB21:
 1054               	.LBB22:
  23:main.cpp      **** }
 1055               		.loc 1 23 0
 1056 021e 21E1      		ldi r18,lo8(17)
 1057 0220 34EC      		ldi r19,lo8(-60)
 1058 0222 4DE7      		ldi r20,lo8(125)
 1059 0224 5FE3      		ldi r21,lo8(63)
 1060 0226 6D81      		ldd r22,Y+5
 1061 0228 7E81      		ldd r23,Y+6
 1062 022a 8F81      		ldd r24,Y+7
 1063 022c 9885      		ldd r25,Y+8
 1064 022e 0E94 0000 		call __addsf3
 1065               	.LVL108:
 1066 0232 20E0      		ldi r18,0
 1067 0234 30E0      		ldi r19,0
 1068 0236 4FEF      		ldi r20,lo8(-1)
 1069 0238 53E4      		ldi r21,lo8(67)
 1070 023a 0E94 0000 		call __mulsf3
 1071               	.LVL109:
 1072 023e 21E1      		ldi r18,lo8(17)
 1073 0240 34EC      		ldi r19,lo8(-60)
 1074 0242 4DEF      		ldi r20,lo8(-3)
 1075 0244 5FE3      		ldi r21,lo8(63)
 1076 0246 0E94 0000 		call __divsf3
 1077               	.LVL110:
 1078 024a 20E0      		ldi r18,0
 1079 024c 30E0      		ldi r19,0
 1080 024e 4FE7      		ldi r20,lo8(127)
 1081 0250 53E4      		ldi r21,lo8(67)
 1082 0252 0E94 0000 		call __subsf3
 1083               	.LVL111:
 1084 0256 2B01      		movw r4,r22
 1085 0258 3C01      		movw r6,r24
 1086               	.LVL112:
 1087               	.LBE22:
 1088               	.LBE21:
 103:main.cpp      **** 		long double x3=map(xans,-0.991273,0.991273,-255,255);
 104:main.cpp      **** 		long double y3=map(yans,-0.991273,0.991273,-255,255)+70;
 1089               		.loc 1 104 0
 1090 025a 21E1      		ldi r18,lo8(17)
 1091 025c 34EC      		ldi r19,lo8(-60)
 1092 025e 4DE7      		ldi r20,lo8(125)
 1093 0260 5FE3      		ldi r21,lo8(63)
 1094 0262 6981      		ldd r22,Y+1
 1095 0264 7A81      		ldd r23,Y+2
 1096 0266 8B81      		ldd r24,Y+3
 1097 0268 9C81      		ldd r25,Y+4
 1098 026a 0E94 0000 		call __addsf3
 1099               	.LVL113:
 1100 026e 20E0      		ldi r18,0
 1101 0270 30E0      		ldi r19,0
 1102 0272 4FEF      		ldi r20,lo8(-1)
 1103 0274 53E4      		ldi r21,lo8(67)
 1104 0276 0E94 0000 		call __mulsf3
 1105               	.LVL114:
 1106 027a 21E1      		ldi r18,lo8(17)
 1107 027c 34EC      		ldi r19,lo8(-60)
 1108 027e 4DEF      		ldi r20,lo8(-3)
 1109 0280 5FE3      		ldi r21,lo8(63)
 1110 0282 0E94 0000 		call __divsf3
 1111               	.LVL115:
 1112 0286 20E0      		ldi r18,0
 1113 0288 30E0      		ldi r19,0
 1114 028a 4FE7      		ldi r20,lo8(127)
 1115 028c 53E4      		ldi r21,lo8(67)
 1116 028e 0E94 0000 		call __subsf3
 1117               	.LVL116:
 1118 0292 20E0      		ldi r18,0
 1119 0294 30E0      		ldi r19,0
 1120 0296 4CE8      		ldi r20,lo8(-116)
 1121 0298 52E4      		ldi r21,lo8(66)
 1122 029a 0E94 0000 		call __addsf3
 1123               	.LVL117:
 1124 029e 6B01      		movw r12,r22
 1125 02a0 7C01      		movw r14,r24
 1126               	.LVL118:
 105:main.cpp      **** 		if(x3>255)
 1127               		.loc 1 105 0
 1128 02a2 20E0      		ldi r18,0
 1129 02a4 30E0      		ldi r19,0
 1130 02a6 4FE7      		ldi r20,lo8(127)
 1131 02a8 53E4      		ldi r21,lo8(67)
 1132 02aa C301      		movw r24,r6
 1133 02ac B201      		movw r22,r4
 1134 02ae 0E94 0000 		call __gtsf2
 1135               	.LVL119:
 106:main.cpp      **** 		x3=255;
 107:main.cpp      **** 		if(y3>255)
 1136               		.loc 1 107 0
 1137 02b2 20E0      		ldi r18,0
 1138 02b4 30E0      		ldi r19,0
 1139 02b6 4FE7      		ldi r20,lo8(127)
 1140 02b8 53E4      		ldi r21,lo8(67)
 105:main.cpp      **** 		if(x3>255)
 1141               		.loc 1 105 0
 1142 02ba 1816      		cp __zero_reg__,r24
 1143 02bc 04F0      		brlt .L24
 1144               	.LVL120:
 1145               		.loc 1 107 0
 1146 02be C701      		movw r24,r14
 1147 02c0 B601      		movw r22,r12
 1148 02c2 0E94 0000 		call __gtsf2
 1149               	.LVL121:
 1150 02c6 1816      		cp __zero_reg__,r24
 1151 02c8 04F4      		brge .+2
 1152 02ca 00C0      		rjmp .L25
 1153               	.LVL122:
 1154               	.L40:
 108:main.cpp      **** 		y3=255;
 109:main.cpp      **** 		if(x3<20&&x3>-20)
 1155               		.loc 1 109 0
 1156 02cc 20E0      		ldi r18,0
 1157 02ce 30E0      		ldi r19,0
 1158 02d0 40EA      		ldi r20,lo8(-96)
 1159 02d2 51E4      		ldi r21,lo8(65)
 1160 02d4 C301      		movw r24,r6
 1161 02d6 B201      		movw r22,r4
 1162 02d8 0E94 0000 		call __ltsf2
 1163               	.LVL123:
 1164 02dc 87FF      		sbrs r24,7
 1165 02de 00C0      		rjmp .L26
 1166               		.loc 1 109 0 is_stmt 0 discriminator 1
 1167 02e0 20E0      		ldi r18,0
 1168 02e2 30E0      		ldi r19,0
 1169 02e4 40EA      		ldi r20,lo8(-96)
 1170 02e6 51EC      		ldi r21,lo8(-63)
 1171 02e8 C301      		movw r24,r6
 1172 02ea B201      		movw r22,r4
 1173 02ec 0E94 0000 		call __gtsf2
 1174               	.LVL124:
 1175 02f0 1816      		cp __zero_reg__,r24
 1176 02f2 04F0      		brlt .L28
 1177               	.LVL125:
 1178               	.L26:
 110:main.cpp      **** 		x3=0;
 111:main.cpp      **** 
 112:main.cpp      **** 		if(y3<20&&y3>-20)
 1179               		.loc 1 112 0 is_stmt 1
 1180 02f4 20E0      		ldi r18,0
 1181 02f6 30E0      		ldi r19,0
 1182 02f8 40EA      		ldi r20,lo8(-96)
 1183 02fa 51E4      		ldi r21,lo8(65)
 1184 02fc C701      		movw r24,r14
 1185 02fe B601      		movw r22,r12
 1186 0300 0E94 0000 		call __ltsf2
 1187               	.LVL126:
 1188 0304 87FF      		sbrs r24,7
 1189 0306 00C0      		rjmp .L29
 1190               		.loc 1 112 0 is_stmt 0 discriminator 1
 1191 0308 20E0      		ldi r18,0
 1192 030a 30E0      		ldi r19,0
 1193 030c 40EA      		ldi r20,lo8(-96)
 1194 030e 51EC      		ldi r21,lo8(-63)
 1195 0310 C701      		movw r24,r14
 1196 0312 B601      		movw r22,r12
 1197 0314 0E94 0000 		call __gtsf2
 1198               	.LVL127:
 1199 0318 1816      		cp __zero_reg__,r24
 1200 031a 04F4      		brge .L29
 113:main.cpp      **** 		y3=0;
 1201               		.loc 1 113 0 is_stmt 1
 1202 031c C12C      		mov r12,__zero_reg__
 1203 031e D12C      		mov r13,__zero_reg__
 1204 0320 7601      		movw r14,r12
 1205 0322 00C0      		rjmp .L29
 1206               	.LVL128:
 1207               	.L24:
 107:main.cpp      **** 		y3=255;
 1208               		.loc 1 107 0
 1209 0324 C701      		movw r24,r14
 1210 0326 B601      		movw r22,r12
 1211 0328 0E94 0000 		call __gtsf2
 1212               	.LVL129:
 106:main.cpp      **** 		if(y3>255)
 1213               		.loc 1 106 0
 1214 032c 412C      		mov r4,__zero_reg__
 1215 032e 512C      		mov r5,__zero_reg__
 1216 0330 2FE7      		ldi r18,lo8(127)
 1217 0332 622E      		mov r6,r18
 1218 0334 23E4      		ldi r18,lo8(67)
 1219 0336 722E      		mov r7,r18
 107:main.cpp      **** 		y3=255;
 1220               		.loc 1 107 0
 1221 0338 1816      		cp __zero_reg__,r24
 1222 033a 04F4      		brge .L40
 108:main.cpp      **** 		if(x3<20&&x3>-20)
 1223               		.loc 1 108 0
 1224 033c 7301      		movw r14,r6
 1225 033e 6201      		movw r12,r4
 1226               	.LVL130:
 1227               	.L29:
 114:main.cpp      **** 		if(x3>0)
 1228               		.loc 1 114 0
 1229 0340 20E0      		ldi r18,0
 1230 0342 30E0      		ldi r19,0
 1231 0344 A901      		movw r20,r18
 1232 0346 C301      		movw r24,r6
 1233 0348 B201      		movw r22,r4
 1234 034a 0E94 0000 		call __gtsf2
 1235               	.LVL131:
 1236 034e 1816      		cp __zero_reg__,r24
 1237 0350 04F4      		brge .L31
 115:main.cpp      **** 		{
 116:main.cpp      **** 			OCR0=(int)x3;
 1238               		.loc 1 116 0
 1239 0352 C301      		movw r24,r6
 1240 0354 B201      		movw r22,r4
 1241 0356 0E94 0000 		call __fixsfsi
 1242               	.LVL132:
 1243 035a 6CBF      		out 0x3c,r22
 117:main.cpp      **** 			PORTB|=1<<PB0;
 1244               		.loc 1 117 0
 1245 035c C09A      		sbi 0x18,0
 1246 035e 00C0      		rjmp .L33
 1247               	.L28:
 1248               	.LVL133:
 112:main.cpp      **** 		y3=0;
 1249               		.loc 1 112 0
 1250 0360 20E0      		ldi r18,0
 1251 0362 30E0      		ldi r19,0
 1252 0364 40EA      		ldi r20,lo8(-96)
 1253 0366 51E4      		ldi r21,lo8(65)
 1254 0368 C701      		movw r24,r14
 1255 036a B601      		movw r22,r12
 1256 036c 0E94 0000 		call __ltsf2
 1257               	.LVL134:
 1258 0370 87FF      		sbrs r24,7
 1259 0372 00C0      		rjmp .L55
 1260 0374 20E0      		ldi r18,0
 1261 0376 30E0      		ldi r19,0
 1262 0378 40EA      		ldi r20,lo8(-96)
 1263 037a 51EC      		ldi r21,lo8(-63)
 1264 037c C701      		movw r24,r14
 1265 037e B601      		movw r22,r12
 1266 0380 0E94 0000 		call __gtsf2
 1267               	.LVL135:
 1268 0384 1816      		cp __zero_reg__,r24
 1269 0386 04F0      		brlt .+2
 1270 0388 00C0      		rjmp .L56
 113:main.cpp      **** 		if(x3>0)
 1271               		.loc 1 113 0
 1272 038a C12C      		mov r12,__zero_reg__
 1273 038c D12C      		mov r13,__zero_reg__
 1274 038e 7601      		movw r14,r12
 1275               	.LVL136:
 110:main.cpp      **** 
 1276               		.loc 1 110 0
 1277 0390 2601      		movw r4,r12
 1278 0392 3701      		movw r6,r14
 1279               	.LVL137:
 1280               	.L31:
 118:main.cpp      **** 		}
 119:main.cpp      **** 		else
 120:main.cpp      **** 		{
 121:main.cpp      **** 			OCR0=-(int)x3;
 1281               		.loc 1 121 0
 1282 0394 C301      		movw r24,r6
 1283 0396 B201      		movw r22,r4
 1284 0398 0E94 0000 		call __fixsfsi
 1285               	.LVL138:
 1286 039c 6195      		neg r22
 1287 039e 6CBF      		out 0x3c,r22
 122:main.cpp      **** 			PORTB&=~(1<<PB0);
 1288               		.loc 1 122 0
 1289 03a0 C098      		cbi 0x18,0
 1290               	.L33:
 123:main.cpp      **** 		}
 124:main.cpp      **** 		if(y3>0)
 1291               		.loc 1 124 0
 1292 03a2 20E0      		ldi r18,0
 1293 03a4 30E0      		ldi r19,0
 1294 03a6 A901      		movw r20,r18
 1295 03a8 C701      		movw r24,r14
 1296 03aa B601      		movw r22,r12
 1297 03ac 0E94 0000 		call __gtsf2
 1298               	.LVL139:
 1299 03b0 1816      		cp __zero_reg__,r24
 1300 03b2 04F4      		brge .L54
 125:main.cpp      **** 		{
 126:main.cpp      **** 			OCR2=(int)y3;
 1301               		.loc 1 126 0
 1302 03b4 C701      		movw r24,r14
 1303 03b6 B601      		movw r22,r12
 1304 03b8 0E94 0000 		call __fixsfsi
 1305               	.LVL140:
 1306 03bc 63BD      		out 0x23,r22
 127:main.cpp      **** 			PORTD|=1<<PD4;
 1307               		.loc 1 127 0
 1308 03be 949A      		sbi 0x12,4
 1309 03c0 00C0      		rjmp .L13
 1310               	.L54:
 128:main.cpp      **** 		}
 129:main.cpp      **** 		else
 130:main.cpp      **** 		{
 131:main.cpp      **** 			OCR2=-(int)y3;
 1311               		.loc 1 131 0
 1312 03c2 C701      		movw r24,r14
 1313 03c4 B601      		movw r22,r12
 1314 03c6 0E94 0000 		call __fixsfsi
 1315               	.LVL141:
 1316 03ca 6195      		neg r22
 1317 03cc 63BD      		out 0x23,r22
 132:main.cpp      **** 			PORTD&=~1<<PD4;
 1318               		.loc 1 132 0
 1319 03ce 82B3      		in r24,0x12
 1320 03d0 807E      		andi r24,lo8(-32)
 1321 03d2 82BB      		out 0x12,r24
 1322 03d4 00C0      		rjmp .L13
 1323               	.LVL142:
 1324               	.L25:
 109:main.cpp      **** 		x3=0;
 1325               		.loc 1 109 0
 1326 03d6 20E0      		ldi r18,0
 1327 03d8 30E0      		ldi r19,0
 1328 03da 40EA      		ldi r20,lo8(-96)
 1329 03dc 51E4      		ldi r21,lo8(65)
 1330 03de C301      		movw r24,r6
 1331 03e0 B201      		movw r22,r4
 1332 03e2 0E94 0000 		call __ltsf2
 1333               	.LVL143:
 1334 03e6 87FD      		sbrc r24,7
 1335 03e8 00C0      		rjmp .L38
 108:main.cpp      **** 		if(x3<20&&x3>-20)
 1336               		.loc 1 108 0
 1337 03ea C12C      		mov r12,__zero_reg__
 1338 03ec D12C      		mov r13,__zero_reg__
 1339 03ee 3FE7      		ldi r19,lo8(127)
 1340 03f0 E32E      		mov r14,r19
 1341 03f2 33E4      		ldi r19,lo8(67)
 1342 03f4 F32E      		mov r15,r19
 1343 03f6 00C0      		rjmp .L29
 1344               	.L38:
 109:main.cpp      **** 		x3=0;
 1345               		.loc 1 109 0
 1346 03f8 20E0      		ldi r18,0
 1347 03fa 30E0      		ldi r19,0
 1348 03fc 40EA      		ldi r20,lo8(-96)
 1349 03fe 51EC      		ldi r21,lo8(-63)
 1350 0400 C301      		movw r24,r6
 1351 0402 B201      		movw r22,r4
 1352 0404 0E94 0000 		call __gtsf2
 1353               	.LVL144:
 108:main.cpp      **** 		if(x3<20&&x3>-20)
 1354               		.loc 1 108 0
 1355 0408 C12C      		mov r12,__zero_reg__
 1356 040a D12C      		mov r13,__zero_reg__
 1357 040c 9FE7      		ldi r25,lo8(127)
 1358 040e E92E      		mov r14,r25
 1359 0410 93E4      		ldi r25,lo8(67)
 1360 0412 F92E      		mov r15,r25
 109:main.cpp      **** 		x3=0;
 1361               		.loc 1 109 0
 1362 0414 1816      		cp __zero_reg__,r24
 1363 0416 04F0      		brlt .+2
 1364 0418 00C0      		rjmp .L26
 1365               	.LVL145:
 1366               	.L55:
 110:main.cpp      **** 
 1367               		.loc 1 110 0
 1368 041a 412C      		mov r4,__zero_reg__
 1369 041c 512C      		mov r5,__zero_reg__
 1370 041e 3201      		movw r6,r4
 1371 0420 00C0      		rjmp .L31
 1372               	.LVL146:
 1373               	.L56:
 1374 0422 412C      		mov r4,__zero_reg__
 1375 0424 512C      		mov r5,__zero_reg__
 1376 0426 3201      		movw r6,r4
 1377 0428 00C0      		rjmp .L29
 1378               	.LBE15:
 1379               		.cfi_endproc
 1380               	.LFE7:
 1382               		.text
 1383               	.Letext0:
 1384               		.file 2 "/usr/lib/avr/include/math.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cciOyULK.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cciOyULK.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cciOyULK.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cciOyULK.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cciOyULK.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cciOyULK.s:12     .text:0000000000000000 _Z7Receivev
     /tmp/cciOyULK.s:35     .text:000000000000000a _Z8Transmith
     /tmp/cciOyULK.s:60     .text:0000000000000012 _Z3mapeeeee
     /tmp/cciOyULK.s:219    .text:00000000000000cc _Z22ellipticalSquareToDisceeReS_
     /tmp/cciOyULK.s:369    .text:0000000000000182 _Z22ellipticalDiscToSquareeeReS_
     /tmp/cciOyULK.s:703    .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
__subsf3
__mulsf3
__divsf3
__addsf3
sqrt
__floatsisf
__gesf2
__lesf2
__gtsf2
__ltsf2
__fixsfsi
