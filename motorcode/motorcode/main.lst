   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	__subsf3
  11               	.global	__mulsf3
  12               	.global	__divsf3
  13               	.global	__addsf3
  14               	.global	_Z3mapeeeee
  16               	_Z3mapeeeee:
  17               	.LFB2:
  18               		.file 1 "main.cpp"
   1:main.cpp      **** 
   2:main.cpp      **** #include <avr/io.h>
   3:main.cpp      **** #include<avr/interrupt.h>
   4:main.cpp      **** #include<math.h>
   5:main.cpp      **** 
   6:main.cpp      **** long double map(long double x, long double in_min, long double in_max, long double out_min, long do
   7:main.cpp      **** {
  19               		.loc 1 7 0
  20               		.cfi_startproc
  21               	.LVL0:
  22 0000 4F92      		push r4
  23               	.LCFI0:
  24               		.cfi_def_cfa_offset 3
  25               		.cfi_offset 4, -2
  26 0002 5F92      		push r5
  27               	.LCFI1:
  28               		.cfi_def_cfa_offset 4
  29               		.cfi_offset 5, -3
  30 0004 6F92      		push r6
  31               	.LCFI2:
  32               		.cfi_def_cfa_offset 5
  33               		.cfi_offset 6, -4
  34 0006 7F92      		push r7
  35               	.LCFI3:
  36               		.cfi_def_cfa_offset 6
  37               		.cfi_offset 7, -5
  38 0008 AF92      		push r10
  39               	.LCFI4:
  40               		.cfi_def_cfa_offset 7
  41               		.cfi_offset 10, -6
  42 000a BF92      		push r11
  43               	.LCFI5:
  44               		.cfi_def_cfa_offset 8
  45               		.cfi_offset 11, -7
  46 000c CF92      		push r12
  47               	.LCFI6:
  48               		.cfi_def_cfa_offset 9
  49               		.cfi_offset 12, -8
  50 000e DF92      		push r13
  51               	.LCFI7:
  52               		.cfi_def_cfa_offset 10
  53               		.cfi_offset 13, -9
  54 0010 EF92      		push r14
  55               	.LCFI8:
  56               		.cfi_def_cfa_offset 11
  57               		.cfi_offset 14, -10
  58 0012 FF92      		push r15
  59               	.LCFI9:
  60               		.cfi_def_cfa_offset 12
  61               		.cfi_offset 15, -11
  62 0014 0F93      		push r16
  63               	.LCFI10:
  64               		.cfi_def_cfa_offset 13
  65               		.cfi_offset 16, -12
  66 0016 1F93      		push r17
  67               	.LCFI11:
  68               		.cfi_def_cfa_offset 14
  69               		.cfi_offset 17, -13
  70 0018 CF93      		push r28
  71               	.LCFI12:
  72               		.cfi_def_cfa_offset 15
  73               		.cfi_offset 28, -14
  74 001a DF93      		push r29
  75               	.LCFI13:
  76               		.cfi_def_cfa_offset 16
  77               		.cfi_offset 29, -15
  78 001c CDB7      		in r28,__SP_L__
  79 001e DEB7      		in r29,__SP_H__
  80               	.LCFI14:
  81               		.cfi_def_cfa_register 28
  82 0020 2897      		sbiw r28,8
  83               	.LCFI15:
  84               		.cfi_def_cfa_offset 24
  85 0022 0FB6      		in __tmp_reg__,__SREG__
  86 0024 F894      		cli
  87 0026 DEBF      		out __SP_H__,r29
  88 0028 0FBE      		out __SREG__,__tmp_reg__
  89 002a CDBF      		out __SP_L__,r28
  90               	/* prologue: function */
  91               	/* frame size = 8 */
  92               	/* stack size = 22 */
  93               	.L__stack_usage = 22
  94 002c 2901      		movw r4,r18
  95 002e 3A01      		movw r6,r20
  96 0030 ED82      		std Y+5,r14
  97 0032 FE82      		std Y+6,r15
  98 0034 0F83      		std Y+7,r16
  99 0036 1887      		std Y+8,r17
   8:main.cpp      **** 	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 100               		.loc 1 8 0
 101 0038 0E94 0000 		call __subsf3
 102               	.LVL1:
 103 003c 6983      		std Y+1,r22
 104 003e 7A83      		std Y+2,r23
 105 0040 8B83      		std Y+3,r24
 106 0042 9C83      		std Y+4,r25
 107 0044 A601      		movw r20,r12
 108 0046 9501      		movw r18,r10
 109 0048 698D      		ldd r22,Y+25
 110 004a 7A8D      		ldd r23,Y+26
 111 004c 8B8D      		ldd r24,Y+27
 112 004e 9C8D      		ldd r25,Y+28
 113 0050 0E94 0000 		call __subsf3
 114               	.LVL2:
 115 0054 9B01      		movw r18,r22
 116 0056 AC01      		movw r20,r24
 117 0058 6981      		ldd r22,Y+1
 118 005a 7A81      		ldd r23,Y+2
 119 005c 8B81      		ldd r24,Y+3
 120 005e 9C81      		ldd r25,Y+4
 121 0060 0E94 0000 		call __mulsf3
 122               	.LVL3:
 123 0064 6983      		std Y+1,r22
 124 0066 7A83      		std Y+2,r23
 125 0068 8B83      		std Y+3,r24
 126 006a 9C83      		std Y+4,r25
 127 006c A301      		movw r20,r6
 128 006e 9201      		movw r18,r4
 129 0070 C801      		movw r24,r16
 130 0072 B701      		movw r22,r14
 131 0074 0E94 0000 		call __subsf3
 132               	.LVL4:
 133 0078 9B01      		movw r18,r22
 134 007a AC01      		movw r20,r24
 135 007c 6981      		ldd r22,Y+1
 136 007e 7A81      		ldd r23,Y+2
 137 0080 8B81      		ldd r24,Y+3
 138 0082 9C81      		ldd r25,Y+4
 139 0084 0E94 0000 		call __divsf3
 140               	.LVL5:
 141 0088 A601      		movw r20,r12
 142 008a 9501      		movw r18,r10
 143 008c 0E94 0000 		call __addsf3
 144               	.LVL6:
 145               	/* epilogue start */
   9:main.cpp      **** }
 146               		.loc 1 9 0
 147 0090 2896      		adiw r28,8
 148 0092 0FB6      		in __tmp_reg__,__SREG__
 149 0094 F894      		cli
 150 0096 DEBF      		out __SP_H__,r29
 151 0098 0FBE      		out __SREG__,__tmp_reg__
 152 009a CDBF      		out __SP_L__,r28
 153 009c DF91      		pop r29
 154 009e CF91      		pop r28
 155 00a0 1F91      		pop r17
 156 00a2 0F91      		pop r16
 157 00a4 FF90      		pop r15
 158 00a6 EF90      		pop r14
 159               	.LVL7:
 160 00a8 DF90      		pop r13
 161 00aa CF90      		pop r12
 162 00ac BF90      		pop r11
 163 00ae AF90      		pop r10
 164               	.LVL8:
 165 00b0 7F90      		pop r7
 166 00b2 6F90      		pop r6
 167 00b4 5F90      		pop r5
 168 00b6 4F90      		pop r4
 169               	.LVL9:
 170 00b8 0895      		ret
 171               		.cfi_endproc
 172               	.LFE2:
 174               	.global	_Z22ellipticalSquareToDisceeReS_
 176               	_Z22ellipticalSquareToDisceeReS_:
 177               	.LFB3:
  10:main.cpp      **** void ellipticalSquareToDisc(long double x, long double y, long double& u, long double& v)
  11:main.cpp      **** {
 178               		.loc 1 11 0
 179               		.cfi_startproc
 180               	.LVL10:
 181 00ba 4F92      		push r4
 182               	.LCFI16:
 183               		.cfi_def_cfa_offset 3
 184               		.cfi_offset 4, -2
 185 00bc 5F92      		push r5
 186               	.LCFI17:
 187               		.cfi_def_cfa_offset 4
 188               		.cfi_offset 5, -3
 189 00be 6F92      		push r6
 190               	.LCFI18:
 191               		.cfi_def_cfa_offset 5
 192               		.cfi_offset 6, -4
 193 00c0 7F92      		push r7
 194               	.LCFI19:
 195               		.cfi_def_cfa_offset 6
 196               		.cfi_offset 7, -5
 197 00c2 8F92      		push r8
 198               	.LCFI20:
 199               		.cfi_def_cfa_offset 7
 200               		.cfi_offset 8, -6
 201 00c4 9F92      		push r9
 202               	.LCFI21:
 203               		.cfi_def_cfa_offset 8
 204               		.cfi_offset 9, -7
 205 00c6 AF92      		push r10
 206               	.LCFI22:
 207               		.cfi_def_cfa_offset 9
 208               		.cfi_offset 10, -8
 209 00c8 BF92      		push r11
 210               	.LCFI23:
 211               		.cfi_def_cfa_offset 10
 212               		.cfi_offset 11, -9
 213 00ca EF92      		push r14
 214               	.LCFI24:
 215               		.cfi_def_cfa_offset 11
 216               		.cfi_offset 14, -10
 217 00cc FF92      		push r15
 218               	.LCFI25:
 219               		.cfi_def_cfa_offset 12
 220               		.cfi_offset 15, -11
 221 00ce 0F93      		push r16
 222               	.LCFI26:
 223               		.cfi_def_cfa_offset 13
 224               		.cfi_offset 16, -12
 225 00d0 1F93      		push r17
 226               	.LCFI27:
 227               		.cfi_def_cfa_offset 14
 228               		.cfi_offset 17, -13
 229               	/* prologue: function */
 230               	/* frame size = 0 */
 231               	/* stack size = 12 */
 232               	.L__stack_usage = 12
 233 00d2 2B01      		movw r4,r22
 234 00d4 3C01      		movw r6,r24
 235 00d6 4901      		movw r8,r18
 236 00d8 5A01      		movw r10,r20
  12:main.cpp      ****     u = x * sqrt(1.0 - y*y/2.0);
 237               		.loc 1 12 0
 238 00da CA01      		movw r24,r20
 239 00dc B901      		movw r22,r18
 240               	.LVL11:
 241 00de 0E94 0000 		call __mulsf3
 242               	.LVL12:
 243 00e2 20E0      		ldi r18,0
 244 00e4 30E0      		ldi r19,0
 245 00e6 40E0      		ldi r20,0
 246 00e8 5FE3      		ldi r21,lo8(63)
 247 00ea 0E94 0000 		call __mulsf3
 248               	.LVL13:
 249 00ee 9B01      		movw r18,r22
 250 00f0 AC01      		movw r20,r24
 251 00f2 60E0      		ldi r22,0
 252 00f4 70E0      		ldi r23,0
 253 00f6 80E8      		ldi r24,lo8(-128)
 254 00f8 9FE3      		ldi r25,lo8(63)
 255 00fa 0E94 0000 		call __subsf3
 256               	.LVL14:
 257 00fe 0E94 0000 		call sqrt
 258               	.LVL15:
 259 0102 A301      		movw r20,r6
 260 0104 9201      		movw r18,r4
 261 0106 0E94 0000 		call __mulsf3
 262               	.LVL16:
 263 010a F801      		movw r30,r16
 264 010c 6083      		st Z,r22
 265 010e 7183      		std Z+1,r23
 266 0110 8283      		std Z+2,r24
 267 0112 9383      		std Z+3,r25
  13:main.cpp      ****     v = y * sqrt(1.0 - x*x/2.0);
 268               		.loc 1 13 0
 269 0114 A301      		movw r20,r6
 270 0116 9201      		movw r18,r4
 271 0118 C301      		movw r24,r6
 272 011a B201      		movw r22,r4
 273 011c 0E94 0000 		call __mulsf3
 274               	.LVL17:
 275 0120 20E0      		ldi r18,0
 276 0122 30E0      		ldi r19,0
 277 0124 40E0      		ldi r20,0
 278 0126 5FE3      		ldi r21,lo8(63)
 279 0128 0E94 0000 		call __mulsf3
 280               	.LVL18:
 281 012c 9B01      		movw r18,r22
 282 012e AC01      		movw r20,r24
 283 0130 60E0      		ldi r22,0
 284 0132 70E0      		ldi r23,0
 285 0134 80E8      		ldi r24,lo8(-128)
 286 0136 9FE3      		ldi r25,lo8(63)
 287 0138 0E94 0000 		call __subsf3
 288               	.LVL19:
 289 013c 0E94 0000 		call sqrt
 290               	.LVL20:
 291 0140 9B01      		movw r18,r22
 292 0142 AC01      		movw r20,r24
 293 0144 C501      		movw r24,r10
 294 0146 B401      		movw r22,r8
 295 0148 0E94 0000 		call __mulsf3
 296               	.LVL21:
 297 014c F701      		movw r30,r14
 298 014e 6083      		st Z,r22
 299 0150 7183      		std Z+1,r23
 300 0152 8283      		std Z+2,r24
 301 0154 9383      		std Z+3,r25
 302               	/* epilogue start */
  14:main.cpp      **** }
 303               		.loc 1 14 0
 304 0156 1F91      		pop r17
 305 0158 0F91      		pop r16
 306               	.LVL22:
 307 015a FF90      		pop r15
 308 015c EF90      		pop r14
 309               	.LVL23:
 310 015e BF90      		pop r11
 311 0160 AF90      		pop r10
 312 0162 9F90      		pop r9
 313 0164 8F90      		pop r8
 314               	.LVL24:
 315 0166 7F90      		pop r7
 316 0168 6F90      		pop r6
 317 016a 5F90      		pop r5
 318 016c 4F90      		pop r4
 319               	.LVL25:
 320 016e 0895      		ret
 321               		.cfi_endproc
 322               	.LFE3:
 324               	.global	_Z22ellipticalDiscToSquareeeReS_
 326               	_Z22ellipticalDiscToSquareeeReS_:
 327               	.LFB4:
  15:main.cpp      **** 
  16:main.cpp      **** void ellipticalDiscToSquare(long double u, long double v, long double& x, long double& y)
  17:main.cpp      **** {
 328               		.loc 1 17 0
 329               		.cfi_startproc
 330               	.LVL26:
 331 0170 4F92      		push r4
 332               	.LCFI28:
 333               		.cfi_def_cfa_offset 3
 334               		.cfi_offset 4, -2
 335 0172 5F92      		push r5
 336               	.LCFI29:
 337               		.cfi_def_cfa_offset 4
 338               		.cfi_offset 5, -3
 339 0174 6F92      		push r6
 340               	.LCFI30:
 341               		.cfi_def_cfa_offset 5
 342               		.cfi_offset 6, -4
 343 0176 7F92      		push r7
 344               	.LCFI31:
 345               		.cfi_def_cfa_offset 6
 346               		.cfi_offset 7, -5
 347 0178 8F92      		push r8
 348               	.LCFI32:
 349               		.cfi_def_cfa_offset 7
 350               		.cfi_offset 8, -6
 351 017a 9F92      		push r9
 352               	.LCFI33:
 353               		.cfi_def_cfa_offset 8
 354               		.cfi_offset 9, -7
 355 017c AF92      		push r10
 356               	.LCFI34:
 357               		.cfi_def_cfa_offset 9
 358               		.cfi_offset 10, -8
 359 017e BF92      		push r11
 360               	.LCFI35:
 361               		.cfi_def_cfa_offset 10
 362               		.cfi_offset 11, -9
 363 0180 CF92      		push r12
 364               	.LCFI36:
 365               		.cfi_def_cfa_offset 11
 366               		.cfi_offset 12, -10
 367 0182 DF92      		push r13
 368               	.LCFI37:
 369               		.cfi_def_cfa_offset 12
 370               		.cfi_offset 13, -11
 371 0184 EF92      		push r14
 372               	.LCFI38:
 373               		.cfi_def_cfa_offset 13
 374               		.cfi_offset 14, -12
 375 0186 FF92      		push r15
 376               	.LCFI39:
 377               		.cfi_def_cfa_offset 14
 378               		.cfi_offset 15, -13
 379 0188 0F93      		push r16
 380               	.LCFI40:
 381               		.cfi_def_cfa_offset 15
 382               		.cfi_offset 16, -14
 383 018a 1F93      		push r17
 384               	.LCFI41:
 385               		.cfi_def_cfa_offset 16
 386               		.cfi_offset 17, -15
 387 018c CF93      		push r28
 388               	.LCFI42:
 389               		.cfi_def_cfa_offset 17
 390               		.cfi_offset 28, -16
 391 018e DF93      		push r29
 392               	.LCFI43:
 393               		.cfi_def_cfa_offset 18
 394               		.cfi_offset 29, -17
 395 0190 CDB7      		in r28,__SP_L__
 396 0192 DEB7      		in r29,__SP_H__
 397               	.LCFI44:
 398               		.cfi_def_cfa_register 28
 399 0194 2E97      		sbiw r28,14
 400               	.LCFI45:
 401               		.cfi_def_cfa_offset 32
 402 0196 0FB6      		in __tmp_reg__,__SREG__
 403 0198 F894      		cli
 404 019a DEBF      		out __SP_H__,r29
 405 019c 0FBE      		out __SREG__,__tmp_reg__
 406 019e CDBF      		out __SP_L__,r28
 407               	/* prologue: function */
 408               	/* frame size = 14 */
 409               	/* stack size = 30 */
 410               	.L__stack_usage = 30
 411 01a0 4B01      		movw r8,r22
 412 01a2 5C01      		movw r10,r24
 413 01a4 2901      		movw r4,r18
 414 01a6 3A01      		movw r6,r20
 415 01a8 FE86      		std Y+14,r15
 416 01aa ED86      		std Y+13,r14
  18:main.cpp      ****     long double u2 = u * u;
 417               		.loc 1 18 0
 418 01ac 9B01      		movw r18,r22
 419 01ae AC01      		movw r20,r24
 420               	.LVL27:
 421 01b0 0E94 0000 		call __mulsf3
 422               	.LVL28:
 423 01b4 6B01      		movw r12,r22
 424 01b6 7C01      		movw r14,r24
 425               	.LVL29:
  19:main.cpp      ****     long double v2 = v * v;
 426               		.loc 1 19 0
 427 01b8 A301      		movw r20,r6
 428 01ba 9201      		movw r18,r4
 429 01bc C301      		movw r24,r6
 430 01be B201      		movw r22,r4
 431 01c0 0E94 0000 		call __mulsf3
 432               	.LVL30:
 433 01c4 6983      		std Y+1,r22
 434 01c6 7A83      		std Y+2,r23
 435 01c8 8B83      		std Y+3,r24
 436 01ca 9C83      		std Y+4,r25
 437               	.LVL31:
  20:main.cpp      ****     long double twosqrt2 = 2.0 * sqrt(2.0);
  21:main.cpp      ****     long double subtermx = 2.0 + u2 - v2;
 438               		.loc 1 21 0
 439 01cc 20E0      		ldi r18,0
 440 01ce 30E0      		ldi r19,0
 441 01d0 40E0      		ldi r20,0
 442 01d2 50E4      		ldi r21,lo8(64)
 443 01d4 C701      		movw r24,r14
 444 01d6 B601      		movw r22,r12
 445               	.LVL32:
 446 01d8 0E94 0000 		call __addsf3
 447               	.LVL33:
 448 01dc 2981      		ldd r18,Y+1
 449 01de 3A81      		ldd r19,Y+2
 450 01e0 4B81      		ldd r20,Y+3
 451 01e2 5C81      		ldd r21,Y+4
 452 01e4 0E94 0000 		call __subsf3
 453               	.LVL34:
 454 01e8 6D83      		std Y+5,r22
 455 01ea 7E83      		std Y+6,r23
 456 01ec 8F83      		std Y+7,r24
 457 01ee 9887      		std Y+8,r25
 458               	.LVL35:
  22:main.cpp      ****     long double subtermy = 2.0 - u2 + v2;
 459               		.loc 1 22 0
 460 01f0 A701      		movw r20,r14
 461 01f2 9601      		movw r18,r12
 462 01f4 60E0      		ldi r22,0
 463 01f6 70E0      		ldi r23,0
 464 01f8 80E0      		ldi r24,0
 465 01fa 90E4      		ldi r25,lo8(64)
 466               	.LVL36:
 467 01fc 0E94 0000 		call __subsf3
 468               	.LVL37:
 469 0200 2981      		ldd r18,Y+1
 470 0202 3A81      		ldd r19,Y+2
 471 0204 4B81      		ldd r20,Y+3
 472 0206 5C81      		ldd r21,Y+4
 473 0208 0E94 0000 		call __addsf3
 474               	.LVL38:
 475 020c 6B01      		movw r12,r22
 476 020e 7C01      		movw r14,r24
 477               	.LVL39:
  23:main.cpp      ****     long double termx1 = subtermx + u * twosqrt2;
 478               		.loc 1 23 0
 479 0210 23EF      		ldi r18,lo8(-13)
 480 0212 34E0      		ldi r19,lo8(4)
 481 0214 45E3      		ldi r20,lo8(53)
 482 0216 50E4      		ldi r21,lo8(64)
 483 0218 C501      		movw r24,r10
 484 021a B401      		movw r22,r8
 485 021c 0E94 0000 		call __mulsf3
 486               	.LVL40:
 487 0220 4B01      		movw r8,r22
 488 0222 5C01      		movw r10,r24
 489               	.LVL41:
  24:main.cpp      ****     long double termx2 = subtermx - u * twosqrt2;
  25:main.cpp      ****     long double termy1 = subtermy + v * twosqrt2;
 490               		.loc 1 25 0
 491 0224 23EF      		ldi r18,lo8(-13)
 492 0226 34E0      		ldi r19,lo8(4)
 493 0228 45E3      		ldi r20,lo8(53)
 494 022a 50E4      		ldi r21,lo8(64)
 495 022c C301      		movw r24,r6
 496 022e B201      		movw r22,r4
 497 0230 0E94 0000 		call __mulsf3
 498               	.LVL42:
 499 0234 6983      		std Y+1,r22
 500 0236 7A83      		std Y+2,r23
 501 0238 8B83      		std Y+3,r24
 502 023a 9C83      		std Y+4,r25
 503               	.LVL43:
  26:main.cpp      ****     long double termy2 = subtermy - v * twosqrt2;
  27:main.cpp      ****     x = 0.5 * sqrt(termx1) - 0.5 * sqrt(termx2);
 504               		.loc 1 27 0
 505 023c A501      		movw r20,r10
 506 023e 9401      		movw r18,r8
 507 0240 6D81      		ldd r22,Y+5
 508 0242 7E81      		ldd r23,Y+6
 509 0244 8F81      		ldd r24,Y+7
 510 0246 9885      		ldd r25,Y+8
 511               	.LVL44:
 512 0248 0E94 0000 		call __addsf3
 513               	.LVL45:
 514 024c 0E94 0000 		call sqrt
 515               	.LVL46:
 516 0250 6987      		std Y+9,r22
 517 0252 7A87      		std Y+10,r23
 518 0254 8B87      		std Y+11,r24
 519 0256 9C87      		std Y+12,r25
 520 0258 A501      		movw r20,r10
 521 025a 9401      		movw r18,r8
 522 025c 6D81      		ldd r22,Y+5
 523 025e 7E81      		ldd r23,Y+6
 524 0260 8F81      		ldd r24,Y+7
 525 0262 9885      		ldd r25,Y+8
 526 0264 0E94 0000 		call __subsf3
 527               	.LVL47:
 528 0268 0E94 0000 		call sqrt
 529               	.LVL48:
 530 026c 2B01      		movw r4,r22
 531 026e 3C01      		movw r6,r24
 532               	.LVL49:
 533 0270 20E0      		ldi r18,0
 534 0272 30E0      		ldi r19,0
 535 0274 40E0      		ldi r20,0
 536 0276 5FE3      		ldi r21,lo8(63)
 537 0278 6985      		ldd r22,Y+9
 538 027a 7A85      		ldd r23,Y+10
 539 027c 8B85      		ldd r24,Y+11
 540 027e 9C85      		ldd r25,Y+12
 541 0280 0E94 0000 		call __mulsf3
 542               	.LVL50:
 543 0284 4B01      		movw r8,r22
 544 0286 5C01      		movw r10,r24
 545               	.LVL51:
 546 0288 20E0      		ldi r18,0
 547 028a 30E0      		ldi r19,0
 548 028c 40E0      		ldi r20,0
 549 028e 5FE3      		ldi r21,lo8(63)
 550 0290 C301      		movw r24,r6
 551 0292 B201      		movw r22,r4
 552 0294 0E94 0000 		call __mulsf3
 553               	.LVL52:
 554 0298 9B01      		movw r18,r22
 555 029a AC01      		movw r20,r24
 556 029c C501      		movw r24,r10
 557 029e B401      		movw r22,r8
 558 02a0 0E94 0000 		call __subsf3
 559               	.LVL53:
 560 02a4 F801      		movw r30,r16
 561 02a6 6083      		st Z,r22
 562 02a8 7183      		std Z+1,r23
 563 02aa 8283      		std Z+2,r24
 564 02ac 9383      		std Z+3,r25
  28:main.cpp      ****     y = 0.5 * sqrt(termy1) - 0.5 * sqrt(termy2);
 565               		.loc 1 28 0
 566 02ae 2981      		ldd r18,Y+1
 567 02b0 3A81      		ldd r19,Y+2
 568 02b2 4B81      		ldd r20,Y+3
 569 02b4 5C81      		ldd r21,Y+4
 570 02b6 C701      		movw r24,r14
 571 02b8 B601      		movw r22,r12
 572 02ba 0E94 0000 		call __addsf3
 573               	.LVL54:
 574 02be 0E94 0000 		call sqrt
 575               	.LVL55:
 576 02c2 4B01      		movw r8,r22
 577 02c4 5C01      		movw r10,r24
 578 02c6 2981      		ldd r18,Y+1
 579 02c8 3A81      		ldd r19,Y+2
 580 02ca 4B81      		ldd r20,Y+3
 581 02cc 5C81      		ldd r21,Y+4
 582 02ce C701      		movw r24,r14
 583 02d0 B601      		movw r22,r12
 584 02d2 0E94 0000 		call __subsf3
 585               	.LVL56:
 586 02d6 0E94 0000 		call sqrt
 587               	.LVL57:
 588 02da 2B01      		movw r4,r22
 589 02dc 3C01      		movw r6,r24
 590 02de 20E0      		ldi r18,0
 591 02e0 30E0      		ldi r19,0
 592 02e2 40E0      		ldi r20,0
 593 02e4 5FE3      		ldi r21,lo8(63)
 594 02e6 C501      		movw r24,r10
 595 02e8 B401      		movw r22,r8
 596 02ea 0E94 0000 		call __mulsf3
 597               	.LVL58:
 598 02ee 6B01      		movw r12,r22
 599 02f0 7C01      		movw r14,r24
 600               	.LVL59:
 601 02f2 20E0      		ldi r18,0
 602 02f4 30E0      		ldi r19,0
 603 02f6 40E0      		ldi r20,0
 604 02f8 5FE3      		ldi r21,lo8(63)
 605 02fa C301      		movw r24,r6
 606 02fc B201      		movw r22,r4
 607 02fe 0E94 0000 		call __mulsf3
 608               	.LVL60:
 609 0302 9B01      		movw r18,r22
 610 0304 AC01      		movw r20,r24
 611 0306 C701      		movw r24,r14
 612 0308 B601      		movw r22,r12
 613 030a 0E94 0000 		call __subsf3
 614               	.LVL61:
 615 030e ED85      		ldd r30,Y+13
 616 0310 FE85      		ldd r31,Y+14
 617 0312 6083      		st Z,r22
 618 0314 7183      		std Z+1,r23
 619 0316 8283      		std Z+2,r24
 620 0318 9383      		std Z+3,r25
 621               	/* epilogue start */
  29:main.cpp      **** 
  30:main.cpp      **** }
 622               		.loc 1 30 0
 623 031a 2E96      		adiw r28,14
 624 031c 0FB6      		in __tmp_reg__,__SREG__
 625 031e F894      		cli
 626 0320 DEBF      		out __SP_H__,r29
 627 0322 0FBE      		out __SREG__,__tmp_reg__
 628 0324 CDBF      		out __SP_L__,r28
 629 0326 DF91      		pop r29
 630 0328 CF91      		pop r28
 631 032a 1F91      		pop r17
 632 032c 0F91      		pop r16
 633               	.LVL62:
 634 032e FF90      		pop r15
 635 0330 EF90      		pop r14
 636               	.LVL63:
 637 0332 DF90      		pop r13
 638 0334 CF90      		pop r12
 639 0336 BF90      		pop r11
 640 0338 AF90      		pop r10
 641 033a 9F90      		pop r9
 642 033c 8F90      		pop r8
 643 033e 7F90      		pop r7
 644 0340 6F90      		pop r6
 645 0342 5F90      		pop r5
 646 0344 4F90      		pop r4
 647 0346 0895      		ret
 648               		.cfi_endproc
 649               	.LFE4:
 651               	.global	__floatunsisf
 652               	.global	__fixsfsi
 653               		.section	.text.startup,"ax",@progbits
 654               	.global	main
 656               	main:
 657               	.LFB5:
  31:main.cpp      **** int main (void)
  32:main.cpp      **** {
 658               		.loc 1 32 0
 659               		.cfi_startproc
 660 0000 CF93      		push r28
 661               	.LCFI46:
 662               		.cfi_def_cfa_offset 3
 663               		.cfi_offset 28, -2
 664 0002 DF93      		push r29
 665               	.LCFI47:
 666               		.cfi_def_cfa_offset 4
 667               		.cfi_offset 29, -3
 668 0004 CDB7      		in r28,__SP_L__
 669 0006 DEB7      		in r29,__SP_H__
 670               	.LCFI48:
 671               		.cfi_def_cfa_register 28
 672 0008 2897      		sbiw r28,8
 673               	.LCFI49:
 674               		.cfi_def_cfa_offset 12
 675 000a 0FB6      		in __tmp_reg__,__SREG__
 676 000c F894      		cli
 677 000e DEBF      		out __SP_H__,r29
 678 0010 0FBE      		out __SREG__,__tmp_reg__
 679 0012 CDBF      		out __SP_L__,r28
 680               	/* prologue: function */
 681               	/* frame size = 8 */
 682               	/* stack size = 10 */
 683               	.L__stack_usage = 10
  33:main.cpp      ****     TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 684               		.loc 1 33 0
 685 0014 83B7      		in r24,0x33
 686 0016 8966      		ori r24,lo8(105)
 687 0018 83BF      		out 0x33,r24
  34:main.cpp      **** 	DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 688               		.loc 1 34 0
 689 001a 87B3      		in r24,0x17
 690 001c 8B60      		ori r24,lo8(11)
 691 001e 87BB      		out 0x17,r24
  35:main.cpp      **** 	TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 692               		.loc 1 35 0
 693 0020 85B5      		in r24,0x25
 694 0022 8966      		ori r24,lo8(105)
 695 0024 85BD      		out 0x25,r24
  36:main.cpp      **** 	DDRD |= 1<< PB7 | 1<< PB2;
 696               		.loc 1 36 0
 697 0026 81B3      		in r24,0x11
 698 0028 8468      		ori r24,lo8(-124)
 699 002a 81BB      		out 0x11,r24
  37:main.cpp      **** 	PORTB &= ~(1<< PINB0);
 700               		.loc 1 37 0
 701 002c C098      		cbi 0x18,0
  38:main.cpp      **** 	PORTD &= ~(1<< PIND2);
 702               		.loc 1 38 0
 703 002e 9298      		cbi 0x12,2
  39:main.cpp      **** 	ADMUX |= 1<< REFS0;
 704               		.loc 1 39 0
 705 0030 3E9A      		sbi 0x7,6
  40:main.cpp      **** 	ADCSRA |= 1<< ADPS2;
 706               		.loc 1 40 0
 707 0032 329A      		sbi 0x6,2
  41:main.cpp      **** 	ADCSRA |= 1<< ADEN;
 708               		.loc 1 41 0
 709 0034 379A      		sbi 0x6,7
 710               	.LBB11:
  42:main.cpp      **** 	while (1)
  43:main.cpp      ****     {
  44:main.cpp      **** 		ADCSRA |= 1<< ADSC;
  45:main.cpp      **** 		while (ADCSRA & (1<< ADSC));
  46:main.cpp      **** 		uint8_t c1 = ADCL;
  47:main.cpp      **** 		uint16_t x2 = ADCH<<8 | c1;
  48:main.cpp      **** 		ADMUX ^= (1<<MUX0);
 711               		.loc 1 48 0
 712 0036 3324      		clr r3
 713 0038 3394      		inc r3
 714               	.L11:
  44:main.cpp      **** 		while (ADCSRA & (1<< ADSC));
 715               		.loc 1 44 0
 716 003a 369A      		sbi 0x6,6
 717               	.L5:
  45:main.cpp      **** 		uint8_t c1 = ADCL;
 718               		.loc 1 45 0
 719 003c 3699      		sbic 0x6,6
 720 003e 00C0      		rjmp .L5
  46:main.cpp      **** 		uint16_t x2 = ADCH<<8 | c1;
 721               		.loc 1 46 0
 722 0040 E4B0      		in r14,0x4
 723               	.LVL64:
  47:main.cpp      **** 		ADMUX ^= (1<<MUX0);
 724               		.loc 1 47 0
 725 0042 85B1      		in r24,0x5
 726 0044 F12C      		mov r15,__zero_reg__
 727 0046 F82A      		or r15,r24
 728               	.LVL65:
 729               		.loc 1 48 0
 730 0048 87B1      		in r24,0x7
 731 004a 8325      		eor r24,r3
 732 004c 87B9      		out 0x7,r24
  49:main.cpp      **** 		ADCSRA |= 1<< ADSC;
 733               		.loc 1 49 0
 734 004e 369A      		sbi 0x6,6
 735               	.L6:
  50:main.cpp      **** 		while (ADCSRA & (1<< ADSC));
 736               		.loc 1 50 0
 737 0050 3699      		sbic 0x6,6
 738 0052 00C0      		rjmp .L6
  51:main.cpp      **** 		c1 = ADCL;
 739               		.loc 1 51 0
 740 0054 84B1      		in r24,0x4
 741               	.LVL66:
  52:main.cpp      **** 		uint16_t y2=ADCH<<8 | c1;
 742               		.loc 1 52 0
 743 0056 25B1      		in r18,0x5
 744               	.LVL67:
  53:main.cpp      **** 		ADMUX ^= (1<<MUX0);
 745               		.loc 1 53 0
 746 0058 97B1      		in r25,0x7
 747 005a 9325      		eor r25,r3
 748 005c 97B9      		out 0x7,r25
  54:main.cpp      **** 
  55:main.cpp      **** 
  56:main.cpp      **** 		long double x1 = x2 - 512;
  57:main.cpp      **** 		long double y1 = 512 - y2;
  58:main.cpp      **** 		x1=map(x1,-512,512,-1,1);
  59:main.cpp      **** 		y1=map(y1,-512,512,-1,1);
  60:main.cpp      **** 		long double xans,yans;
  61:main.cpp      **** 		ellipticalSquareToDisc(x1, y1, xans, yans);
 749               		.loc 1 61 0
 750 005e 90E0      		ldi r25,0
 751 0060 922B      		or r25,r18
 752 0062 60E0      		ldi r22,0
 753 0064 72E0      		ldi r23,lo8(2)
 754 0066 681B      		sub r22,r24
 755 0068 790B      		sbc r23,r25
 756 006a 80E0      		ldi r24,0
 757 006c 90E0      		ldi r25,0
 758               	.LVL68:
 759 006e 0E94 0000 		call __floatunsisf
 760               	.LVL69:
 761 0072 20E0      		ldi r18,0
 762 0074 30E0      		ldi r19,0
 763 0076 40E0      		ldi r20,0
 764 0078 54E4      		ldi r21,lo8(68)
 765 007a 0E94 0000 		call __addsf3
 766               	.LVL70:
 767 007e 9B01      		movw r18,r22
 768 0080 AC01      		movw r20,r24
 769 0082 0E94 0000 		call __addsf3
 770               	.LVL71:
 771 0086 20E0      		ldi r18,0
 772 0088 30E0      		ldi r19,0
 773 008a 40E8      		ldi r20,lo8(-128)
 774 008c 5AE3      		ldi r21,lo8(58)
 775 008e 0E94 0000 		call __mulsf3
 776               	.LVL72:
 777 0092 20E0      		ldi r18,0
 778 0094 30E0      		ldi r19,0
 779 0096 40E8      		ldi r20,lo8(-128)
 780 0098 5FE3      		ldi r21,lo8(63)
 781 009a 0E94 0000 		call __subsf3
 782               	.LVL73:
 783 009e 2B01      		movw r4,r22
 784 00a0 3C01      		movw r6,r24
 785 00a2 B701      		movw r22,r14
 786 00a4 7250      		subi r23,2
 787 00a6 80E0      		ldi r24,0
 788 00a8 90E0      		ldi r25,0
 789 00aa 0E94 0000 		call __floatunsisf
 790               	.LVL74:
 791 00ae 20E0      		ldi r18,0
 792 00b0 30E0      		ldi r19,0
 793 00b2 40E0      		ldi r20,0
 794 00b4 54E4      		ldi r21,lo8(68)
 795 00b6 0E94 0000 		call __addsf3
 796               	.LVL75:
 797 00ba 9B01      		movw r18,r22
 798 00bc AC01      		movw r20,r24
 799 00be 0E94 0000 		call __addsf3
 800               	.LVL76:
 801 00c2 20E0      		ldi r18,0
 802 00c4 30E0      		ldi r19,0
 803 00c6 40E8      		ldi r20,lo8(-128)
 804 00c8 5AE3      		ldi r21,lo8(58)
 805 00ca 0E94 0000 		call __mulsf3
 806               	.LVL77:
 807 00ce 20E0      		ldi r18,0
 808 00d0 30E0      		ldi r19,0
 809 00d2 40E8      		ldi r20,lo8(-128)
 810 00d4 5FE3      		ldi r21,lo8(63)
 811 00d6 0E94 0000 		call __subsf3
 812               	.LVL78:
 813 00da 9E01      		movw r18,r28
 814 00dc 2F5F      		subi r18,-1
 815 00de 3F4F      		sbci r19,-1
 816 00e0 7901      		movw r14,r18
 817               	.LVL79:
 818 00e2 8E01      		movw r16,r28
 819 00e4 0B5F      		subi r16,-5
 820 00e6 1F4F      		sbci r17,-1
 821 00e8 A301      		movw r20,r6
 822 00ea 9201      		movw r18,r4
 823 00ec 0E94 0000 		call _Z22ellipticalSquareToDisceeReS_
 824               	.LVL80:
  62:main.cpp      **** 
  63:main.cpp      **** 
  64:main.cpp      **** 
  65:main.cpp      **** 		long double x = (xans * 0.707) + (yans * 0.707);
 825               		.loc 1 65 0
 826 00f0 CD80      		ldd r12,Y+5
 827 00f2 DE80      		ldd r13,Y+6
 828 00f4 EF80      		ldd r14,Y+7
 829 00f6 F884      		ldd r15,Y+8
 830 00f8 24EF      		ldi r18,lo8(-12)
 831 00fa 3DEF      		ldi r19,lo8(-3)
 832 00fc 44E3      		ldi r20,lo8(52)
 833 00fe 5FE3      		ldi r21,lo8(63)
 834 0100 6981      		ldd r22,Y+1
 835 0102 7A81      		ldd r23,Y+2
 836 0104 8B81      		ldd r24,Y+3
 837 0106 9C81      		ldd r25,Y+4
 838 0108 0E94 0000 		call __mulsf3
 839               	.LVL81:
 840 010c 2B01      		movw r4,r22
 841 010e 3C01      		movw r6,r24
 842               	.LVL82:
  66:main.cpp      **** 		long double y = (-xans * 0.707) + (yans * 0.707);
  67:main.cpp      **** 		ellipticalDiscToSquare(x,y,xans,yans);
 843               		.loc 1 67 0
 844 0110 C701      		movw r24,r14
 845 0112 B601      		movw r22,r12
 846 0114 9058      		subi r25,0x80
 847 0116 24EF      		ldi r18,lo8(-12)
 848 0118 3DEF      		ldi r19,lo8(-3)
 849 011a 44E3      		ldi r20,lo8(52)
 850 011c 5FE3      		ldi r21,lo8(63)
 851 011e 0E94 0000 		call __mulsf3
 852               	.LVL83:
 853 0122 A301      		movw r20,r6
 854 0124 9201      		movw r18,r4
 855 0126 0E94 0000 		call __addsf3
 856               	.LVL84:
 857 012a 4B01      		movw r8,r22
 858 012c 5C01      		movw r10,r24
 859 012e 24EF      		ldi r18,lo8(-12)
 860 0130 3DEF      		ldi r19,lo8(-3)
 861 0132 44E3      		ldi r20,lo8(52)
 862 0134 5FE3      		ldi r21,lo8(63)
 863 0136 C701      		movw r24,r14
 864 0138 B601      		movw r22,r12
 865 013a 0E94 0000 		call __mulsf3
 866               	.LVL85:
 867 013e A301      		movw r20,r6
 868 0140 9201      		movw r18,r4
 869 0142 0E94 0000 		call __addsf3
 870               	.LVL86:
 871 0146 9E01      		movw r18,r28
 872 0148 2F5F      		subi r18,-1
 873 014a 3F4F      		sbci r19,-1
 874 014c 7901      		movw r14,r18
 875 014e A501      		movw r20,r10
 876 0150 9401      		movw r18,r8
 877 0152 0E94 0000 		call _Z22ellipticalDiscToSquareeeReS_
 878               	.LVL87:
  68:main.cpp      **** 		int x3=map(xans,-0.991273,0.991273,-255,255);
 879               		.loc 1 68 0
 880 0156 21E1      		ldi r18,lo8(17)
 881 0158 34EC      		ldi r19,lo8(-60)
 882 015a 4DE7      		ldi r20,lo8(125)
 883 015c 5FE3      		ldi r21,lo8(63)
 884 015e 6D81      		ldd r22,Y+5
 885 0160 7E81      		ldd r23,Y+6
 886 0162 8F81      		ldd r24,Y+7
 887 0164 9885      		ldd r25,Y+8
 888 0166 0E94 0000 		call __addsf3
 889               	.LVL88:
 890 016a 20E0      		ldi r18,0
 891 016c 30E0      		ldi r19,0
 892 016e 4FEF      		ldi r20,lo8(-1)
 893 0170 53E4      		ldi r21,lo8(67)
 894 0172 0E94 0000 		call __mulsf3
 895               	.LVL89:
 896 0176 21E1      		ldi r18,lo8(17)
 897 0178 34EC      		ldi r19,lo8(-60)
 898 017a 4DEF      		ldi r20,lo8(-3)
 899 017c 5FE3      		ldi r21,lo8(63)
 900 017e 0E94 0000 		call __divsf3
 901               	.LVL90:
 902 0182 20E0      		ldi r18,0
 903 0184 30E0      		ldi r19,0
 904 0186 4FE7      		ldi r20,lo8(127)
 905 0188 53E4      		ldi r21,lo8(67)
 906 018a 0E94 0000 		call __subsf3
 907               	.LVL91:
 908 018e 0E94 0000 		call __fixsfsi
 909               	.LVL92:
 910 0192 162F      		mov r17,r22
 911 0194 E62E      		mov r14,r22
 912 0196 F72E      		mov r15,r23
 913               	.LVL93:
  69:main.cpp      **** 		int y3=map(yans,-0.991273,0.991273,-255,255);
 914               		.loc 1 69 0
 915 0198 21E1      		ldi r18,lo8(17)
 916 019a 34EC      		ldi r19,lo8(-60)
 917 019c 4DE7      		ldi r20,lo8(125)
 918 019e 5FE3      		ldi r21,lo8(63)
 919 01a0 6981      		ldd r22,Y+1
 920 01a2 7A81      		ldd r23,Y+2
 921 01a4 8B81      		ldd r24,Y+3
 922 01a6 9C81      		ldd r25,Y+4
 923 01a8 0E94 0000 		call __addsf3
 924               	.LVL94:
 925 01ac 20E0      		ldi r18,0
 926 01ae 30E0      		ldi r19,0
 927 01b0 4FEF      		ldi r20,lo8(-1)
 928 01b2 53E4      		ldi r21,lo8(67)
 929 01b4 0E94 0000 		call __mulsf3
 930               	.LVL95:
 931 01b8 21E1      		ldi r18,lo8(17)
 932 01ba 34EC      		ldi r19,lo8(-60)
 933 01bc 4DEF      		ldi r20,lo8(-3)
 934 01be 5FE3      		ldi r21,lo8(63)
 935 01c0 0E94 0000 		call __divsf3
 936               	.LVL96:
 937 01c4 20E0      		ldi r18,0
 938 01c6 30E0      		ldi r19,0
 939 01c8 4FE7      		ldi r20,lo8(127)
 940 01ca 53E4      		ldi r21,lo8(67)
 941 01cc 0E94 0000 		call __subsf3
 942               	.LVL97:
 943 01d0 0E94 0000 		call __fixsfsi
 944               	.LVL98:
 945 01d4 CB01      		movw r24,r22
 946               	.LVL99:
  70:main.cpp      **** 
  71:main.cpp      **** 		/*int x2=x-512;
  72:main.cpp      **** 		int y2=512-y;
  73:main.cpp      **** 		if(y2/x2>=12.8&&y2/x2<=-12.8)
  74:main.cpp      **** 			x2=0;
  75:main.cpp      **** 		if(y2/x2<=0.390625&&y2/x2>=-0.390625)
  76:main.cpp      **** 		y2=0;
  77:main.cpp      **** 		int x3 = x2;
  78:main.cpp      **** 		int y3 = y2;
  79:main.cpp      **** 		int x4= (x3*0.707)+(y3*0.707);
  80:main.cpp      **** 		int y4=-(x3*0.707)+(y3*0.707);
  81:main.cpp      **** 
  82:main.cpp      **** 		int x5=map(x4,-723,723,-255,255);
  83:main.cpp      **** 		int y5=map(y4,-723,723,-255,255);
  84:main.cpp      **** 
  85:main.cpp      **** 		if(x5<20&&x5>-20)
  86:main.cpp      **** 		x5=0;
  87:main.cpp      **** 
  88:main.cpp      **** 		if(y5<20&&y5>-20)
  89:main.cpp      **** 		y5=0;*/
  90:main.cpp      **** 
  91:main.cpp      **** 		if(x3>0)
 947               		.loc 1 91 0
 948 01d6 1E14      		cp __zero_reg__,r14
 949 01d8 1F04      		cpc __zero_reg__,r15
 950 01da 04F4      		brge .L7
  92:main.cpp      **** 		{
  93:main.cpp      **** 			OCR0=x3;
 951               		.loc 1 93 0
 952 01dc 1CBF      		out 0x3c,r17
  94:main.cpp      **** 			PORTB|=1<<PB0;
 953               		.loc 1 94 0
 954 01de C09A      		sbi 0x18,0
 955 01e0 00C0      		rjmp .L8
 956               	.L7:
  95:main.cpp      **** 		}
  96:main.cpp      **** 		else
  97:main.cpp      **** 		{
  98:main.cpp      **** 			OCR0=-x3;
 957               		.loc 1 98 0
 958 01e2 1195      		neg r17
 959 01e4 1CBF      		out 0x3c,r17
  99:main.cpp      **** 			PORTB&=~(1<<PB0);
 960               		.loc 1 99 0
 961 01e6 C098      		cbi 0x18,0
 962               	.L8:
 100:main.cpp      **** 		}
 101:main.cpp      **** 		if(y3>0)
 963               		.loc 1 101 0
 964 01e8 1816      		cp __zero_reg__,r24
 965 01ea 1906      		cpc __zero_reg__,r25
 966 01ec 04F4      		brge .L9
 102:main.cpp      **** 		{
 103:main.cpp      **** 		OCR2=y3;
 967               		.loc 1 103 0
 968 01ee 63BD      		out 0x23,r22
 104:main.cpp      **** 		PORTD|=1<<PD2;
 969               		.loc 1 104 0
 970 01f0 929A      		sbi 0x12,2
 971 01f2 00C0      		rjmp .L11
 972               	.L9:
 105:main.cpp      **** 		}
 106:main.cpp      **** 		else
 107:main.cpp      **** 		{
 108:main.cpp      **** 			OCR2=-y3;
 973               		.loc 1 108 0
 974 01f4 6195      		neg r22
 975 01f6 63BD      		out 0x23,r22
 109:main.cpp      **** 			PORTD&=~1<<PD2;
 976               		.loc 1 109 0
 977 01f8 82B3      		in r24,0x12
 978 01fa 887F      		andi r24,lo8(-8)
 979 01fc 82BB      		out 0x12,r24
 980               	.LBE11:
  42:main.cpp      ****     {
 981               		.loc 1 42 0
 982 01fe 00C0      		rjmp .L11
 983               		.cfi_endproc
 984               	.LFE5:
 986               		.text
 987               	.Letext0:
 988               		.file 2 "/usr/lib/avr/include/stdint.h"
 989               		.file 3 "/usr/lib/avr/include/math.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccY3VXh0.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccY3VXh0.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccY3VXh0.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccY3VXh0.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccY3VXh0.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccY3VXh0.s:16     .text:0000000000000000 _Z3mapeeeee
     /tmp/ccY3VXh0.s:176    .text:00000000000000ba _Z22ellipticalSquareToDisceeReS_
     /tmp/ccY3VXh0.s:326    .text:0000000000000170 _Z22ellipticalDiscToSquareeeReS_
     /tmp/ccY3VXh0.s:656    .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
__subsf3
__mulsf3
__divsf3
__addsf3
sqrt
__floatunsisf
__fixsfsi
