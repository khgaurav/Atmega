   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	_Z7Receivev
  12               	_Z7Receivev:
  13               	.LFB2:
  14               		.file 1 "main.cpp"
   1:main.cpp      **** 
   2:main.cpp      **** #include <avr/io.h>
   3:main.cpp      **** #include<avr/interrupt.h>
   4:main.cpp      **** #include<math.h>
   5:main.cpp      **** #define FOSC 1000000// Clock Speed
   6:main.cpp      **** #define BAUD 9600
   7:main.cpp      **** #define ubbr_value FOSC/16/BAUD-1
   8:main.cpp      **** int Receive()
   9:main.cpp      **** {
  15               		.loc 1 9 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               	.L2:
  10:main.cpp      **** 	while (! (UCSRA & (1 << RXC)) );
  22               		.loc 1 10 0
  23 0000 5F9B      		sbis 0xb,7
  24 0002 00C0      		rjmp .L2
  11:main.cpp      **** 	return UDR;
  25               		.loc 1 11 0
  26 0004 8CB1      		in r24,0xc
  12:main.cpp      **** }
  27               		.loc 1 12 0
  28 0006 90E0      		ldi r25,0
  29 0008 0895      		ret
  30               		.cfi_endproc
  31               	.LFE2:
  33               	.global	_Z8Transmith
  35               	_Z8Transmith:
  36               	.LFB3:
  13:main.cpp      **** 
  14:main.cpp      **** void Transmit(unsigned char data)
  15:main.cpp      **** {
  37               		.loc 1 15 0
  38               		.cfi_startproc
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 0 */
  42               	.L__stack_usage = 0
  43               	.LVL0:
  44               	.L6:
  16:main.cpp      **** 	while (! (UCSRA & (1 << UDRE)) );
  45               		.loc 1 16 0
  46 000a 5D9B      		sbis 0xb,5
  47 000c 00C0      		rjmp .L6
  17:main.cpp      **** 	UDR = data;
  48               		.loc 1 17 0
  49 000e 8CB9      		out 0xc,r24
  50 0010 0895      		ret
  51               		.cfi_endproc
  52               	.LFE3:
  54               	.global	__subsf3
  55               	.global	__mulsf3
  56               	.global	__divsf3
  57               	.global	__addsf3
  58               	.global	_Z3mapeeeee
  60               	_Z3mapeeeee:
  61               	.LFB4:
  18:main.cpp      **** 
  19:main.cpp      **** }
  20:main.cpp      **** 
  21:main.cpp      **** long double map(long double x, long double in_min, long double in_max, long double out_min, long do
  22:main.cpp      **** {
  62               		.loc 1 22 0
  63               		.cfi_startproc
  64               	.LVL1:
  65 0012 4F92      		push r4
  66               	.LCFI0:
  67               		.cfi_def_cfa_offset 3
  68               		.cfi_offset 4, -2
  69 0014 5F92      		push r5
  70               	.LCFI1:
  71               		.cfi_def_cfa_offset 4
  72               		.cfi_offset 5, -3
  73 0016 6F92      		push r6
  74               	.LCFI2:
  75               		.cfi_def_cfa_offset 5
  76               		.cfi_offset 6, -4
  77 0018 7F92      		push r7
  78               	.LCFI3:
  79               		.cfi_def_cfa_offset 6
  80               		.cfi_offset 7, -5
  81 001a AF92      		push r10
  82               	.LCFI4:
  83               		.cfi_def_cfa_offset 7
  84               		.cfi_offset 10, -6
  85 001c BF92      		push r11
  86               	.LCFI5:
  87               		.cfi_def_cfa_offset 8
  88               		.cfi_offset 11, -7
  89 001e CF92      		push r12
  90               	.LCFI6:
  91               		.cfi_def_cfa_offset 9
  92               		.cfi_offset 12, -8
  93 0020 DF92      		push r13
  94               	.LCFI7:
  95               		.cfi_def_cfa_offset 10
  96               		.cfi_offset 13, -9
  97 0022 EF92      		push r14
  98               	.LCFI8:
  99               		.cfi_def_cfa_offset 11
 100               		.cfi_offset 14, -10
 101 0024 FF92      		push r15
 102               	.LCFI9:
 103               		.cfi_def_cfa_offset 12
 104               		.cfi_offset 15, -11
 105 0026 0F93      		push r16
 106               	.LCFI10:
 107               		.cfi_def_cfa_offset 13
 108               		.cfi_offset 16, -12
 109 0028 1F93      		push r17
 110               	.LCFI11:
 111               		.cfi_def_cfa_offset 14
 112               		.cfi_offset 17, -13
 113 002a CF93      		push r28
 114               	.LCFI12:
 115               		.cfi_def_cfa_offset 15
 116               		.cfi_offset 28, -14
 117 002c DF93      		push r29
 118               	.LCFI13:
 119               		.cfi_def_cfa_offset 16
 120               		.cfi_offset 29, -15
 121 002e CDB7      		in r28,__SP_L__
 122 0030 DEB7      		in r29,__SP_H__
 123               	.LCFI14:
 124               		.cfi_def_cfa_register 28
 125 0032 2897      		sbiw r28,8
 126               	.LCFI15:
 127               		.cfi_def_cfa_offset 24
 128 0034 0FB6      		in __tmp_reg__,__SREG__
 129 0036 F894      		cli
 130 0038 DEBF      		out __SP_H__,r29
 131 003a 0FBE      		out __SREG__,__tmp_reg__
 132 003c CDBF      		out __SP_L__,r28
 133               	/* prologue: function */
 134               	/* frame size = 8 */
 135               	/* stack size = 22 */
 136               	.L__stack_usage = 22
 137 003e 2901      		movw r4,r18
 138 0040 3A01      		movw r6,r20
 139 0042 ED82      		std Y+5,r14
 140 0044 FE82      		std Y+6,r15
 141 0046 0F83      		std Y+7,r16
 142 0048 1887      		std Y+8,r17
  23:main.cpp      ****   return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 143               		.loc 1 23 0
 144 004a 0E94 0000 		call __subsf3
 145               	.LVL2:
 146 004e 6983      		std Y+1,r22
 147 0050 7A83      		std Y+2,r23
 148 0052 8B83      		std Y+3,r24
 149 0054 9C83      		std Y+4,r25
 150 0056 A601      		movw r20,r12
 151 0058 9501      		movw r18,r10
 152 005a 698D      		ldd r22,Y+25
 153 005c 7A8D      		ldd r23,Y+26
 154 005e 8B8D      		ldd r24,Y+27
 155 0060 9C8D      		ldd r25,Y+28
 156 0062 0E94 0000 		call __subsf3
 157               	.LVL3:
 158 0066 9B01      		movw r18,r22
 159 0068 AC01      		movw r20,r24
 160 006a 6981      		ldd r22,Y+1
 161 006c 7A81      		ldd r23,Y+2
 162 006e 8B81      		ldd r24,Y+3
 163 0070 9C81      		ldd r25,Y+4
 164 0072 0E94 0000 		call __mulsf3
 165               	.LVL4:
 166 0076 6983      		std Y+1,r22
 167 0078 7A83      		std Y+2,r23
 168 007a 8B83      		std Y+3,r24
 169 007c 9C83      		std Y+4,r25
 170 007e A301      		movw r20,r6
 171 0080 9201      		movw r18,r4
 172 0082 C801      		movw r24,r16
 173 0084 B701      		movw r22,r14
 174 0086 0E94 0000 		call __subsf3
 175               	.LVL5:
 176 008a 9B01      		movw r18,r22
 177 008c AC01      		movw r20,r24
 178 008e 6981      		ldd r22,Y+1
 179 0090 7A81      		ldd r23,Y+2
 180 0092 8B81      		ldd r24,Y+3
 181 0094 9C81      		ldd r25,Y+4
 182 0096 0E94 0000 		call __divsf3
 183               	.LVL6:
 184 009a A601      		movw r20,r12
 185 009c 9501      		movw r18,r10
 186 009e 0E94 0000 		call __addsf3
 187               	.LVL7:
 188               	/* epilogue start */
  24:main.cpp      **** }
 189               		.loc 1 24 0
 190 00a2 2896      		adiw r28,8
 191 00a4 0FB6      		in __tmp_reg__,__SREG__
 192 00a6 F894      		cli
 193 00a8 DEBF      		out __SP_H__,r29
 194 00aa 0FBE      		out __SREG__,__tmp_reg__
 195 00ac CDBF      		out __SP_L__,r28
 196 00ae DF91      		pop r29
 197 00b0 CF91      		pop r28
 198 00b2 1F91      		pop r17
 199 00b4 0F91      		pop r16
 200 00b6 FF90      		pop r15
 201 00b8 EF90      		pop r14
 202               	.LVL8:
 203 00ba DF90      		pop r13
 204 00bc CF90      		pop r12
 205 00be BF90      		pop r11
 206 00c0 AF90      		pop r10
 207               	.LVL9:
 208 00c2 7F90      		pop r7
 209 00c4 6F90      		pop r6
 210 00c6 5F90      		pop r5
 211 00c8 4F90      		pop r4
 212               	.LVL10:
 213 00ca 0895      		ret
 214               		.cfi_endproc
 215               	.LFE4:
 217               	.global	_Z22ellipticalSquareToDisceeReS_
 219               	_Z22ellipticalSquareToDisceeReS_:
 220               	.LFB5:
  25:main.cpp      **** void ellipticalSquareToDisc(long double x, long double y, long double& u, long double& v)
  26:main.cpp      **** {
 221               		.loc 1 26 0
 222               		.cfi_startproc
 223               	.LVL11:
 224 00cc 4F92      		push r4
 225               	.LCFI16:
 226               		.cfi_def_cfa_offset 3
 227               		.cfi_offset 4, -2
 228 00ce 5F92      		push r5
 229               	.LCFI17:
 230               		.cfi_def_cfa_offset 4
 231               		.cfi_offset 5, -3
 232 00d0 6F92      		push r6
 233               	.LCFI18:
 234               		.cfi_def_cfa_offset 5
 235               		.cfi_offset 6, -4
 236 00d2 7F92      		push r7
 237               	.LCFI19:
 238               		.cfi_def_cfa_offset 6
 239               		.cfi_offset 7, -5
 240 00d4 8F92      		push r8
 241               	.LCFI20:
 242               		.cfi_def_cfa_offset 7
 243               		.cfi_offset 8, -6
 244 00d6 9F92      		push r9
 245               	.LCFI21:
 246               		.cfi_def_cfa_offset 8
 247               		.cfi_offset 9, -7
 248 00d8 AF92      		push r10
 249               	.LCFI22:
 250               		.cfi_def_cfa_offset 9
 251               		.cfi_offset 10, -8
 252 00da BF92      		push r11
 253               	.LCFI23:
 254               		.cfi_def_cfa_offset 10
 255               		.cfi_offset 11, -9
 256 00dc EF92      		push r14
 257               	.LCFI24:
 258               		.cfi_def_cfa_offset 11
 259               		.cfi_offset 14, -10
 260 00de FF92      		push r15
 261               	.LCFI25:
 262               		.cfi_def_cfa_offset 12
 263               		.cfi_offset 15, -11
 264 00e0 0F93      		push r16
 265               	.LCFI26:
 266               		.cfi_def_cfa_offset 13
 267               		.cfi_offset 16, -12
 268 00e2 1F93      		push r17
 269               	.LCFI27:
 270               		.cfi_def_cfa_offset 14
 271               		.cfi_offset 17, -13
 272               	/* prologue: function */
 273               	/* frame size = 0 */
 274               	/* stack size = 12 */
 275               	.L__stack_usage = 12
 276 00e4 2B01      		movw r4,r22
 277 00e6 3C01      		movw r6,r24
 278 00e8 4901      		movw r8,r18
 279 00ea 5A01      		movw r10,r20
  27:main.cpp      ****     u = x * sqrt(1.0 - y*y/2.0);
 280               		.loc 1 27 0
 281 00ec CA01      		movw r24,r20
 282 00ee B901      		movw r22,r18
 283               	.LVL12:
 284 00f0 0E94 0000 		call __mulsf3
 285               	.LVL13:
 286 00f4 20E0      		ldi r18,0
 287 00f6 30E0      		ldi r19,0
 288 00f8 40E0      		ldi r20,0
 289 00fa 5FE3      		ldi r21,lo8(63)
 290 00fc 0E94 0000 		call __mulsf3
 291               	.LVL14:
 292 0100 9B01      		movw r18,r22
 293 0102 AC01      		movw r20,r24
 294 0104 60E0      		ldi r22,0
 295 0106 70E0      		ldi r23,0
 296 0108 80E8      		ldi r24,lo8(-128)
 297 010a 9FE3      		ldi r25,lo8(63)
 298 010c 0E94 0000 		call __subsf3
 299               	.LVL15:
 300 0110 0E94 0000 		call sqrt
 301               	.LVL16:
 302 0114 A301      		movw r20,r6
 303 0116 9201      		movw r18,r4
 304 0118 0E94 0000 		call __mulsf3
 305               	.LVL17:
 306 011c F801      		movw r30,r16
 307 011e 6083      		st Z,r22
 308 0120 7183      		std Z+1,r23
 309 0122 8283      		std Z+2,r24
 310 0124 9383      		std Z+3,r25
  28:main.cpp      ****     v = y * sqrt(1.0 - x*x/2.0);
 311               		.loc 1 28 0
 312 0126 A301      		movw r20,r6
 313 0128 9201      		movw r18,r4
 314 012a C301      		movw r24,r6
 315 012c B201      		movw r22,r4
 316 012e 0E94 0000 		call __mulsf3
 317               	.LVL18:
 318 0132 20E0      		ldi r18,0
 319 0134 30E0      		ldi r19,0
 320 0136 40E0      		ldi r20,0
 321 0138 5FE3      		ldi r21,lo8(63)
 322 013a 0E94 0000 		call __mulsf3
 323               	.LVL19:
 324 013e 9B01      		movw r18,r22
 325 0140 AC01      		movw r20,r24
 326 0142 60E0      		ldi r22,0
 327 0144 70E0      		ldi r23,0
 328 0146 80E8      		ldi r24,lo8(-128)
 329 0148 9FE3      		ldi r25,lo8(63)
 330 014a 0E94 0000 		call __subsf3
 331               	.LVL20:
 332 014e 0E94 0000 		call sqrt
 333               	.LVL21:
 334 0152 9B01      		movw r18,r22
 335 0154 AC01      		movw r20,r24
 336 0156 C501      		movw r24,r10
 337 0158 B401      		movw r22,r8
 338 015a 0E94 0000 		call __mulsf3
 339               	.LVL22:
 340 015e F701      		movw r30,r14
 341 0160 6083      		st Z,r22
 342 0162 7183      		std Z+1,r23
 343 0164 8283      		std Z+2,r24
 344 0166 9383      		std Z+3,r25
 345               	/* epilogue start */
  29:main.cpp      **** }
 346               		.loc 1 29 0
 347 0168 1F91      		pop r17
 348 016a 0F91      		pop r16
 349               	.LVL23:
 350 016c FF90      		pop r15
 351 016e EF90      		pop r14
 352               	.LVL24:
 353 0170 BF90      		pop r11
 354 0172 AF90      		pop r10
 355 0174 9F90      		pop r9
 356 0176 8F90      		pop r8
 357               	.LVL25:
 358 0178 7F90      		pop r7
 359 017a 6F90      		pop r6
 360 017c 5F90      		pop r5
 361 017e 4F90      		pop r4
 362               	.LVL26:
 363 0180 0895      		ret
 364               		.cfi_endproc
 365               	.LFE5:
 367               	.global	_Z22ellipticalDiscToSquareeeReS_
 369               	_Z22ellipticalDiscToSquareeeReS_:
 370               	.LFB6:
  30:main.cpp      **** 
  31:main.cpp      **** void ellipticalDiscToSquare(long double u, long double v, long double& x, long double& y)
  32:main.cpp      **** {
 371               		.loc 1 32 0
 372               		.cfi_startproc
 373               	.LVL27:
 374 0182 4F92      		push r4
 375               	.LCFI28:
 376               		.cfi_def_cfa_offset 3
 377               		.cfi_offset 4, -2
 378 0184 5F92      		push r5
 379               	.LCFI29:
 380               		.cfi_def_cfa_offset 4
 381               		.cfi_offset 5, -3
 382 0186 6F92      		push r6
 383               	.LCFI30:
 384               		.cfi_def_cfa_offset 5
 385               		.cfi_offset 6, -4
 386 0188 7F92      		push r7
 387               	.LCFI31:
 388               		.cfi_def_cfa_offset 6
 389               		.cfi_offset 7, -5
 390 018a 8F92      		push r8
 391               	.LCFI32:
 392               		.cfi_def_cfa_offset 7
 393               		.cfi_offset 8, -6
 394 018c 9F92      		push r9
 395               	.LCFI33:
 396               		.cfi_def_cfa_offset 8
 397               		.cfi_offset 9, -7
 398 018e AF92      		push r10
 399               	.LCFI34:
 400               		.cfi_def_cfa_offset 9
 401               		.cfi_offset 10, -8
 402 0190 BF92      		push r11
 403               	.LCFI35:
 404               		.cfi_def_cfa_offset 10
 405               		.cfi_offset 11, -9
 406 0192 CF92      		push r12
 407               	.LCFI36:
 408               		.cfi_def_cfa_offset 11
 409               		.cfi_offset 12, -10
 410 0194 DF92      		push r13
 411               	.LCFI37:
 412               		.cfi_def_cfa_offset 12
 413               		.cfi_offset 13, -11
 414 0196 EF92      		push r14
 415               	.LCFI38:
 416               		.cfi_def_cfa_offset 13
 417               		.cfi_offset 14, -12
 418 0198 FF92      		push r15
 419               	.LCFI39:
 420               		.cfi_def_cfa_offset 14
 421               		.cfi_offset 15, -13
 422 019a 0F93      		push r16
 423               	.LCFI40:
 424               		.cfi_def_cfa_offset 15
 425               		.cfi_offset 16, -14
 426 019c 1F93      		push r17
 427               	.LCFI41:
 428               		.cfi_def_cfa_offset 16
 429               		.cfi_offset 17, -15
 430 019e CF93      		push r28
 431               	.LCFI42:
 432               		.cfi_def_cfa_offset 17
 433               		.cfi_offset 28, -16
 434 01a0 DF93      		push r29
 435               	.LCFI43:
 436               		.cfi_def_cfa_offset 18
 437               		.cfi_offset 29, -17
 438 01a2 CDB7      		in r28,__SP_L__
 439 01a4 DEB7      		in r29,__SP_H__
 440               	.LCFI44:
 441               		.cfi_def_cfa_register 28
 442 01a6 2E97      		sbiw r28,14
 443               	.LCFI45:
 444               		.cfi_def_cfa_offset 32
 445 01a8 0FB6      		in __tmp_reg__,__SREG__
 446 01aa F894      		cli
 447 01ac DEBF      		out __SP_H__,r29
 448 01ae 0FBE      		out __SREG__,__tmp_reg__
 449 01b0 CDBF      		out __SP_L__,r28
 450               	/* prologue: function */
 451               	/* frame size = 14 */
 452               	/* stack size = 30 */
 453               	.L__stack_usage = 30
 454 01b2 4B01      		movw r8,r22
 455 01b4 5C01      		movw r10,r24
 456 01b6 2901      		movw r4,r18
 457 01b8 3A01      		movw r6,r20
 458 01ba FE86      		std Y+14,r15
 459 01bc ED86      		std Y+13,r14
  33:main.cpp      ****     long double u2 = u * u;
 460               		.loc 1 33 0
 461 01be 9B01      		movw r18,r22
 462 01c0 AC01      		movw r20,r24
 463               	.LVL28:
 464 01c2 0E94 0000 		call __mulsf3
 465               	.LVL29:
 466 01c6 6B01      		movw r12,r22
 467 01c8 7C01      		movw r14,r24
 468               	.LVL30:
  34:main.cpp      ****     long double v2 = v * v;
 469               		.loc 1 34 0
 470 01ca A301      		movw r20,r6
 471 01cc 9201      		movw r18,r4
 472 01ce C301      		movw r24,r6
 473 01d0 B201      		movw r22,r4
 474 01d2 0E94 0000 		call __mulsf3
 475               	.LVL31:
 476 01d6 6983      		std Y+1,r22
 477 01d8 7A83      		std Y+2,r23
 478 01da 8B83      		std Y+3,r24
 479 01dc 9C83      		std Y+4,r25
 480               	.LVL32:
  35:main.cpp      ****     long double twosqrt2 = 2.0 * sqrt(2.0);
  36:main.cpp      ****     long double subtermx = 2.0 + u2 - v2;
 481               		.loc 1 36 0
 482 01de 20E0      		ldi r18,0
 483 01e0 30E0      		ldi r19,0
 484 01e2 40E0      		ldi r20,0
 485 01e4 50E4      		ldi r21,lo8(64)
 486 01e6 C701      		movw r24,r14
 487 01e8 B601      		movw r22,r12
 488               	.LVL33:
 489 01ea 0E94 0000 		call __addsf3
 490               	.LVL34:
 491 01ee 2981      		ldd r18,Y+1
 492 01f0 3A81      		ldd r19,Y+2
 493 01f2 4B81      		ldd r20,Y+3
 494 01f4 5C81      		ldd r21,Y+4
 495 01f6 0E94 0000 		call __subsf3
 496               	.LVL35:
 497 01fa 6D83      		std Y+5,r22
 498 01fc 7E83      		std Y+6,r23
 499 01fe 8F83      		std Y+7,r24
 500 0200 9887      		std Y+8,r25
 501               	.LVL36:
  37:main.cpp      ****     long double subtermy = 2.0 - u2 + v2;
 502               		.loc 1 37 0
 503 0202 A701      		movw r20,r14
 504 0204 9601      		movw r18,r12
 505 0206 60E0      		ldi r22,0
 506 0208 70E0      		ldi r23,0
 507 020a 80E0      		ldi r24,0
 508 020c 90E4      		ldi r25,lo8(64)
 509               	.LVL37:
 510 020e 0E94 0000 		call __subsf3
 511               	.LVL38:
 512 0212 2981      		ldd r18,Y+1
 513 0214 3A81      		ldd r19,Y+2
 514 0216 4B81      		ldd r20,Y+3
 515 0218 5C81      		ldd r21,Y+4
 516 021a 0E94 0000 		call __addsf3
 517               	.LVL39:
 518 021e 6B01      		movw r12,r22
 519 0220 7C01      		movw r14,r24
 520               	.LVL40:
  38:main.cpp      ****     long double termx1 = subtermx + u * twosqrt2;
 521               		.loc 1 38 0
 522 0222 23EF      		ldi r18,lo8(-13)
 523 0224 34E0      		ldi r19,lo8(4)
 524 0226 45E3      		ldi r20,lo8(53)
 525 0228 50E4      		ldi r21,lo8(64)
 526 022a C501      		movw r24,r10
 527 022c B401      		movw r22,r8
 528 022e 0E94 0000 		call __mulsf3
 529               	.LVL41:
 530 0232 4B01      		movw r8,r22
 531 0234 5C01      		movw r10,r24
 532               	.LVL42:
  39:main.cpp      ****     long double termx2 = subtermx - u * twosqrt2;
  40:main.cpp      ****     long double termy1 = subtermy + v * twosqrt2;
 533               		.loc 1 40 0
 534 0236 23EF      		ldi r18,lo8(-13)
 535 0238 34E0      		ldi r19,lo8(4)
 536 023a 45E3      		ldi r20,lo8(53)
 537 023c 50E4      		ldi r21,lo8(64)
 538 023e C301      		movw r24,r6
 539 0240 B201      		movw r22,r4
 540 0242 0E94 0000 		call __mulsf3
 541               	.LVL43:
 542 0246 6983      		std Y+1,r22
 543 0248 7A83      		std Y+2,r23
 544 024a 8B83      		std Y+3,r24
 545 024c 9C83      		std Y+4,r25
 546               	.LVL44:
  41:main.cpp      ****     long double termy2 = subtermy - v * twosqrt2;
  42:main.cpp      ****     x = 0.5 * sqrt(termx1) - 0.5 * sqrt(termx2);
 547               		.loc 1 42 0
 548 024e A501      		movw r20,r10
 549 0250 9401      		movw r18,r8
 550 0252 6D81      		ldd r22,Y+5
 551 0254 7E81      		ldd r23,Y+6
 552 0256 8F81      		ldd r24,Y+7
 553 0258 9885      		ldd r25,Y+8
 554               	.LVL45:
 555 025a 0E94 0000 		call __addsf3
 556               	.LVL46:
 557 025e 0E94 0000 		call sqrt
 558               	.LVL47:
 559 0262 6987      		std Y+9,r22
 560 0264 7A87      		std Y+10,r23
 561 0266 8B87      		std Y+11,r24
 562 0268 9C87      		std Y+12,r25
 563 026a A501      		movw r20,r10
 564 026c 9401      		movw r18,r8
 565 026e 6D81      		ldd r22,Y+5
 566 0270 7E81      		ldd r23,Y+6
 567 0272 8F81      		ldd r24,Y+7
 568 0274 9885      		ldd r25,Y+8
 569 0276 0E94 0000 		call __subsf3
 570               	.LVL48:
 571 027a 0E94 0000 		call sqrt
 572               	.LVL49:
 573 027e 2B01      		movw r4,r22
 574 0280 3C01      		movw r6,r24
 575               	.LVL50:
 576 0282 20E0      		ldi r18,0
 577 0284 30E0      		ldi r19,0
 578 0286 40E0      		ldi r20,0
 579 0288 5FE3      		ldi r21,lo8(63)
 580 028a 6985      		ldd r22,Y+9
 581 028c 7A85      		ldd r23,Y+10
 582 028e 8B85      		ldd r24,Y+11
 583 0290 9C85      		ldd r25,Y+12
 584 0292 0E94 0000 		call __mulsf3
 585               	.LVL51:
 586 0296 4B01      		movw r8,r22
 587 0298 5C01      		movw r10,r24
 588               	.LVL52:
 589 029a 20E0      		ldi r18,0
 590 029c 30E0      		ldi r19,0
 591 029e 40E0      		ldi r20,0
 592 02a0 5FE3      		ldi r21,lo8(63)
 593 02a2 C301      		movw r24,r6
 594 02a4 B201      		movw r22,r4
 595 02a6 0E94 0000 		call __mulsf3
 596               	.LVL53:
 597 02aa 9B01      		movw r18,r22
 598 02ac AC01      		movw r20,r24
 599 02ae C501      		movw r24,r10
 600 02b0 B401      		movw r22,r8
 601 02b2 0E94 0000 		call __subsf3
 602               	.LVL54:
 603 02b6 F801      		movw r30,r16
 604 02b8 6083      		st Z,r22
 605 02ba 7183      		std Z+1,r23
 606 02bc 8283      		std Z+2,r24
 607 02be 9383      		std Z+3,r25
  43:main.cpp      ****     y = 0.5 * sqrt(termy1) - 0.5 * sqrt(termy2);
 608               		.loc 1 43 0
 609 02c0 2981      		ldd r18,Y+1
 610 02c2 3A81      		ldd r19,Y+2
 611 02c4 4B81      		ldd r20,Y+3
 612 02c6 5C81      		ldd r21,Y+4
 613 02c8 C701      		movw r24,r14
 614 02ca B601      		movw r22,r12
 615 02cc 0E94 0000 		call __addsf3
 616               	.LVL55:
 617 02d0 0E94 0000 		call sqrt
 618               	.LVL56:
 619 02d4 4B01      		movw r8,r22
 620 02d6 5C01      		movw r10,r24
 621 02d8 2981      		ldd r18,Y+1
 622 02da 3A81      		ldd r19,Y+2
 623 02dc 4B81      		ldd r20,Y+3
 624 02de 5C81      		ldd r21,Y+4
 625 02e0 C701      		movw r24,r14
 626 02e2 B601      		movw r22,r12
 627 02e4 0E94 0000 		call __subsf3
 628               	.LVL57:
 629 02e8 0E94 0000 		call sqrt
 630               	.LVL58:
 631 02ec 2B01      		movw r4,r22
 632 02ee 3C01      		movw r6,r24
 633 02f0 20E0      		ldi r18,0
 634 02f2 30E0      		ldi r19,0
 635 02f4 40E0      		ldi r20,0
 636 02f6 5FE3      		ldi r21,lo8(63)
 637 02f8 C501      		movw r24,r10
 638 02fa B401      		movw r22,r8
 639 02fc 0E94 0000 		call __mulsf3
 640               	.LVL59:
 641 0300 6B01      		movw r12,r22
 642 0302 7C01      		movw r14,r24
 643               	.LVL60:
 644 0304 20E0      		ldi r18,0
 645 0306 30E0      		ldi r19,0
 646 0308 40E0      		ldi r20,0
 647 030a 5FE3      		ldi r21,lo8(63)
 648 030c C301      		movw r24,r6
 649 030e B201      		movw r22,r4
 650 0310 0E94 0000 		call __mulsf3
 651               	.LVL61:
 652 0314 9B01      		movw r18,r22
 653 0316 AC01      		movw r20,r24
 654 0318 C701      		movw r24,r14
 655 031a B601      		movw r22,r12
 656 031c 0E94 0000 		call __subsf3
 657               	.LVL62:
 658 0320 ED85      		ldd r30,Y+13
 659 0322 FE85      		ldd r31,Y+14
 660 0324 6083      		st Z,r22
 661 0326 7183      		std Z+1,r23
 662 0328 8283      		std Z+2,r24
 663 032a 9383      		std Z+3,r25
 664               	/* epilogue start */
  44:main.cpp      **** 
  45:main.cpp      **** }
 665               		.loc 1 45 0
 666 032c 2E96      		adiw r28,14
 667 032e 0FB6      		in __tmp_reg__,__SREG__
 668 0330 F894      		cli
 669 0332 DEBF      		out __SP_H__,r29
 670 0334 0FBE      		out __SREG__,__tmp_reg__
 671 0336 CDBF      		out __SP_L__,r28
 672 0338 DF91      		pop r29
 673 033a CF91      		pop r28
 674 033c 1F91      		pop r17
 675 033e 0F91      		pop r16
 676               	.LVL63:
 677 0340 FF90      		pop r15
 678 0342 EF90      		pop r14
 679               	.LVL64:
 680 0344 DF90      		pop r13
 681 0346 CF90      		pop r12
 682 0348 BF90      		pop r11
 683 034a AF90      		pop r10
 684 034c 9F90      		pop r9
 685 034e 8F90      		pop r8
 686 0350 7F90      		pop r7
 687 0352 6F90      		pop r6
 688 0354 5F90      		pop r5
 689 0356 4F90      		pop r4
 690 0358 0895      		ret
 691               		.cfi_endproc
 692               	.LFE6:
 694               	.global	__floatsisf
 695               	.global	__gtsf2
 696               	.global	__fixsfsi
 697               		.section	.text.startup,"ax",@progbits
 698               	.global	main
 700               	main:
 701               	.LFB7:
  46:main.cpp      **** int main (void)
  47:main.cpp      **** {
 702               		.loc 1 47 0
 703               		.cfi_startproc
 704 0000 CF93      		push r28
 705               	.LCFI46:
 706               		.cfi_def_cfa_offset 3
 707               		.cfi_offset 28, -2
 708 0002 DF93      		push r29
 709               	.LCFI47:
 710               		.cfi_def_cfa_offset 4
 711               		.cfi_offset 29, -3
 712 0004 CDB7      		in r28,__SP_L__
 713 0006 DEB7      		in r29,__SP_H__
 714               	.LCFI48:
 715               		.cfi_def_cfa_register 28
 716 0008 2A97      		sbiw r28,10
 717               	.LCFI49:
 718               		.cfi_def_cfa_offset 14
 719 000a 0FB6      		in __tmp_reg__,__SREG__
 720 000c F894      		cli
 721 000e DEBF      		out __SP_H__,r29
 722 0010 0FBE      		out __SREG__,__tmp_reg__
 723 0012 CDBF      		out __SP_L__,r28
 724               	/* prologue: function */
 725               	/* frame size = 10 */
 726               	/* stack size = 12 */
 727               	.L__stack_usage = 12
  48:main.cpp      **** 	TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 728               		.loc 1 48 0
 729 0014 83B7      		in r24,0x33
 730 0016 8966      		ori r24,lo8(105)
 731 0018 83BF      		out 0x33,r24
  49:main.cpp      **** DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 732               		.loc 1 49 0
 733 001a 87B3      		in r24,0x17
 734 001c 8B60      		ori r24,lo8(11)
 735 001e 87BB      		out 0x17,r24
  50:main.cpp      **** TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 736               		.loc 1 50 0
 737 0020 85B5      		in r24,0x25
 738 0022 8966      		ori r24,lo8(105)
 739 0024 85BD      		out 0x25,r24
  51:main.cpp      **** DDRD |= 1<< PB7 | 1<< PB2;
 740               		.loc 1 51 0
 741 0026 81B3      		in r24,0x11
 742 0028 8468      		ori r24,lo8(-124)
 743 002a 81BB      		out 0x11,r24
  52:main.cpp      **** PORTB &= ~(1<< PINB0);
 744               		.loc 1 52 0
 745 002c C098      		cbi 0x18,0
  53:main.cpp      **** PORTD &= ~(1<< PIND2);
 746               		.loc 1 53 0
 747 002e 9298      		cbi 0x12,2
  54:main.cpp      ****  UCSRA = (1 << U2X);
 748               		.loc 1 54 0
 749 0030 82E0      		ldi r24,lo8(2)
 750 0032 8BB9      		out 0xb,r24
  55:main.cpp      **** 	UBRRH = (unsigned char) (ubbr_value >> 8);
 751               		.loc 1 55 0
 752 0034 10BC      		out 0x20,__zero_reg__
  56:main.cpp      **** 	UBRRL = (unsigned char) ubbr_value;
 753               		.loc 1 56 0
 754 0036 8FEF      		ldi r24,lo8(-1)
 755 0038 89B9      		out 0x9,r24
  57:main.cpp      **** 	UCSRB = (1 << RXEN);
 756               		.loc 1 57 0
 757 003a 80E1      		ldi r24,lo8(16)
 758 003c 8AB9      		out 0xa,r24
  58:main.cpp      **** 	UCSRC = (1 << URSEL) | (3 << UCSZ0);
 759               		.loc 1 58 0
 760 003e 86E8      		ldi r24,lo8(-122)
 761 0040 80BD      		out 0x20,r24
 762               	.L13:
 763               	.LBB11:
  59:main.cpp      **** 	while (1)
  60:main.cpp      ****     {
  61:main.cpp      **** 			if(Receive()!=0x11)
 764               		.loc 1 61 0
 765 0042 0E94 0000 		call _Z7Receivev
 766               	.LVL65:
 767 0046 4197      		sbiw r24,17
 768 0048 01F4      		brne .L13
  62:main.cpp      **** 			continue;
  63:main.cpp      **** 			int c1= Receive();
 769               		.loc 1 63 0
 770 004a 0E94 0000 		call _Z7Receivev
 771               	.LVL66:
 772 004e 3C01      		movw r6,r24
 773               	.LVL67:
  64:main.cpp      **** 	    int x2 = (Receive())<<8 | c1;
 774               		.loc 1 64 0
 775 0050 0E94 0000 		call _Z7Receivev
 776               	.LVL68:
 777 0054 382E      		mov r3,r24
 778 0056 212C      		mov r2,__zero_reg__
 779 0058 6228      		or r6,r2
 780 005a 7328      		or r7,r3
 781               	.LVL69:
  65:main.cpp      **** 	    int c2=Receive();
 782               		.loc 1 65 0
 783 005c 0E94 0000 		call _Z7Receivev
 784               	.LVL70:
 785 0060 5C01      		movw r10,r24
 786               	.LVL71:
  66:main.cpp      **** 	    int y2=(Receive())<<8 | c2;
 787               		.loc 1 66 0
 788 0062 0E94 0000 		call _Z7Receivev
 789               	.LVL72:
  67:main.cpp      **** 		long double x1 = x2 - 512;
  68:main.cpp      **** 		long double y1 = 512 - y2;
  69:main.cpp      **** 		x1=map(x1,-512,512,-1,1);
  70:main.cpp      **** 		y1=map(y1,-512,512,-1,1);
  71:main.cpp      **** 		long double xans,yans;
  72:main.cpp      **** 		ellipticalSquareToDisc(x1, y1, xans, yans);
 790               		.loc 1 72 0
 791 0066 8A87      		std Y+10,r24
 792 0068 1986      		std Y+9,__zero_reg__
 793 006a 2985      		ldd r18,Y+9
 794 006c 3A85      		ldd r19,Y+10
 795 006e A22A      		or r10,r18
 796 0070 B32A      		or r11,r19
 797               	.LVL73:
 798 0072 60E0      		ldi r22,0
 799 0074 72E0      		ldi r23,lo8(2)
 800 0076 6A19      		sub r22,r10
 801 0078 7B09      		sbc r23,r11
 802 007a 072E      		mov __tmp_reg__,r23
 803 007c 000C      		lsl r0
 804 007e 880B      		sbc r24,r24
 805 0080 990B      		sbc r25,r25
 806 0082 0E94 0000 		call __floatsisf
 807               	.LVL74:
 808 0086 20E0      		ldi r18,0
 809 0088 30E0      		ldi r19,0
 810 008a 40E0      		ldi r20,0
 811 008c 54E4      		ldi r21,lo8(68)
 812 008e 0E94 0000 		call __addsf3
 813               	.LVL75:
 814 0092 9B01      		movw r18,r22
 815 0094 AC01      		movw r20,r24
 816 0096 0E94 0000 		call __addsf3
 817               	.LVL76:
 818 009a 20E0      		ldi r18,0
 819 009c 30E0      		ldi r19,0
 820 009e 40E8      		ldi r20,lo8(-128)
 821 00a0 5AE3      		ldi r21,lo8(58)
 822 00a2 0E94 0000 		call __mulsf3
 823               	.LVL77:
 824 00a6 20E0      		ldi r18,0
 825 00a8 30E0      		ldi r19,0
 826 00aa 40E8      		ldi r20,lo8(-128)
 827 00ac 5FE3      		ldi r21,lo8(63)
 828 00ae 0E94 0000 		call __subsf3
 829               	.LVL78:
 830 00b2 4B01      		movw r8,r22
 831 00b4 5C01      		movw r10,r24
 832 00b6 B301      		movw r22,r6
 833 00b8 7250      		subi r23,2
 834 00ba 072E      		mov __tmp_reg__,r23
 835 00bc 000C      		lsl r0
 836 00be 880B      		sbc r24,r24
 837 00c0 990B      		sbc r25,r25
 838 00c2 0E94 0000 		call __floatsisf
 839               	.LVL79:
 840 00c6 20E0      		ldi r18,0
 841 00c8 30E0      		ldi r19,0
 842 00ca 40E0      		ldi r20,0
 843 00cc 54E4      		ldi r21,lo8(68)
 844 00ce 0E94 0000 		call __addsf3
 845               	.LVL80:
 846 00d2 9B01      		movw r18,r22
 847 00d4 AC01      		movw r20,r24
 848 00d6 0E94 0000 		call __addsf3
 849               	.LVL81:
 850 00da 20E0      		ldi r18,0
 851 00dc 30E0      		ldi r19,0
 852 00de 40E8      		ldi r20,lo8(-128)
 853 00e0 5AE3      		ldi r21,lo8(58)
 854 00e2 0E94 0000 		call __mulsf3
 855               	.LVL82:
 856 00e6 20E0      		ldi r18,0
 857 00e8 30E0      		ldi r19,0
 858 00ea 40E8      		ldi r20,lo8(-128)
 859 00ec 5FE3      		ldi r21,lo8(63)
 860 00ee 0E94 0000 		call __subsf3
 861               	.LVL83:
 862 00f2 9E01      		movw r18,r28
 863 00f4 2F5F      		subi r18,-1
 864 00f6 3F4F      		sbci r19,-1
 865 00f8 7901      		movw r14,r18
 866 00fa 8E01      		movw r16,r28
 867 00fc 0B5F      		subi r16,-5
 868 00fe 1F4F      		sbci r17,-1
 869 0100 A501      		movw r20,r10
 870 0102 9401      		movw r18,r8
 871 0104 0E94 0000 		call _Z22ellipticalSquareToDisceeReS_
 872               	.LVL84:
  73:main.cpp      **** 
  74:main.cpp      **** 
  75:main.cpp      **** 
  76:main.cpp      **** 		long double x = (xans * 0.707) + (yans * 0.707);
 873               		.loc 1 76 0
 874 0108 CD80      		ldd r12,Y+5
 875 010a DE80      		ldd r13,Y+6
 876 010c EF80      		ldd r14,Y+7
 877 010e F884      		ldd r15,Y+8
 878 0110 24EF      		ldi r18,lo8(-12)
 879 0112 3DEF      		ldi r19,lo8(-3)
 880 0114 44E3      		ldi r20,lo8(52)
 881 0116 5FE3      		ldi r21,lo8(63)
 882 0118 6981      		ldd r22,Y+1
 883 011a 7A81      		ldd r23,Y+2
 884 011c 8B81      		ldd r24,Y+3
 885 011e 9C81      		ldd r25,Y+4
 886 0120 0E94 0000 		call __mulsf3
 887               	.LVL85:
 888 0124 4B01      		movw r8,r22
 889 0126 5C01      		movw r10,r24
 890               	.LVL86:
  77:main.cpp      **** 		long double y = (-xans * 0.707) + (yans * 0.707);
  78:main.cpp      **** 		ellipticalDiscToSquare(x,y,xans,yans);
 891               		.loc 1 78 0
 892 0128 C701      		movw r24,r14
 893 012a B601      		movw r22,r12
 894 012c 9058      		subi r25,0x80
 895 012e 24EF      		ldi r18,lo8(-12)
 896 0130 3DEF      		ldi r19,lo8(-3)
 897 0132 44E3      		ldi r20,lo8(52)
 898 0134 5FE3      		ldi r21,lo8(63)
 899 0136 0E94 0000 		call __mulsf3
 900               	.LVL87:
 901 013a A501      		movw r20,r10
 902 013c 9401      		movw r18,r8
 903 013e 0E94 0000 		call __addsf3
 904               	.LVL88:
 905 0142 2B01      		movw r4,r22
 906 0144 3C01      		movw r6,r24
 907 0146 24EF      		ldi r18,lo8(-12)
 908 0148 3DEF      		ldi r19,lo8(-3)
 909 014a 44E3      		ldi r20,lo8(52)
 910 014c 5FE3      		ldi r21,lo8(63)
 911 014e C701      		movw r24,r14
 912 0150 B601      		movw r22,r12
 913 0152 0E94 0000 		call __mulsf3
 914               	.LVL89:
 915 0156 A501      		movw r20,r10
 916 0158 9401      		movw r18,r8
 917 015a 0E94 0000 		call __addsf3
 918               	.LVL90:
 919 015e 9E01      		movw r18,r28
 920 0160 2F5F      		subi r18,-1
 921 0162 3F4F      		sbci r19,-1
 922 0164 7901      		movw r14,r18
 923 0166 A301      		movw r20,r6
 924 0168 9201      		movw r18,r4
 925 016a 0E94 0000 		call _Z22ellipticalDiscToSquareeeReS_
 926               	.LVL91:
 927               	.LBB12:
 928               	.LBB13:
  23:main.cpp      **** }
 929               		.loc 1 23 0
 930 016e 21E1      		ldi r18,lo8(17)
 931 0170 34EC      		ldi r19,lo8(-60)
 932 0172 4DE7      		ldi r20,lo8(125)
 933 0174 5FE3      		ldi r21,lo8(63)
 934 0176 6D81      		ldd r22,Y+5
 935 0178 7E81      		ldd r23,Y+6
 936 017a 8F81      		ldd r24,Y+7
 937 017c 9885      		ldd r25,Y+8
 938 017e 0E94 0000 		call __addsf3
 939               	.LVL92:
 940 0182 20E0      		ldi r18,0
 941 0184 30E0      		ldi r19,0
 942 0186 4FEF      		ldi r20,lo8(-1)
 943 0188 53E4      		ldi r21,lo8(67)
 944 018a 0E94 0000 		call __mulsf3
 945               	.LVL93:
 946 018e 21E1      		ldi r18,lo8(17)
 947 0190 34EC      		ldi r19,lo8(-60)
 948 0192 4DEF      		ldi r20,lo8(-3)
 949 0194 5FE3      		ldi r21,lo8(63)
 950 0196 0E94 0000 		call __divsf3
 951               	.LVL94:
 952 019a 20E0      		ldi r18,0
 953 019c 30E0      		ldi r19,0
 954 019e 4FE7      		ldi r20,lo8(127)
 955 01a0 53E4      		ldi r21,lo8(67)
 956 01a2 0E94 0000 		call __subsf3
 957               	.LVL95:
 958 01a6 2B01      		movw r4,r22
 959 01a8 3C01      		movw r6,r24
 960               	.LVL96:
 961               	.LBE13:
 962               	.LBE12:
  79:main.cpp      **** 		long double x3=map(xans,-0.991273,0.991273,-255,255);
  80:main.cpp      **** 		long double y3=map(yans,-0.991273,0.991273,-255,255)+100;
 963               		.loc 1 80 0
 964 01aa 21E1      		ldi r18,lo8(17)
 965 01ac 34EC      		ldi r19,lo8(-60)
 966 01ae 4DE7      		ldi r20,lo8(125)
 967 01b0 5FE3      		ldi r21,lo8(63)
 968 01b2 6981      		ldd r22,Y+1
 969 01b4 7A81      		ldd r23,Y+2
 970 01b6 8B81      		ldd r24,Y+3
 971 01b8 9C81      		ldd r25,Y+4
 972 01ba 0E94 0000 		call __addsf3
 973               	.LVL97:
 974 01be 20E0      		ldi r18,0
 975 01c0 30E0      		ldi r19,0
 976 01c2 4FEF      		ldi r20,lo8(-1)
 977 01c4 53E4      		ldi r21,lo8(67)
 978 01c6 0E94 0000 		call __mulsf3
 979               	.LVL98:
 980 01ca 21E1      		ldi r18,lo8(17)
 981 01cc 34EC      		ldi r19,lo8(-60)
 982 01ce 4DEF      		ldi r20,lo8(-3)
 983 01d0 5FE3      		ldi r21,lo8(63)
 984 01d2 0E94 0000 		call __divsf3
 985               	.LVL99:
 986 01d6 20E0      		ldi r18,0
 987 01d8 30E0      		ldi r19,0
 988 01da 4FE7      		ldi r20,lo8(127)
 989 01dc 53E4      		ldi r21,lo8(67)
 990 01de 0E94 0000 		call __subsf3
 991               	.LVL100:
 992 01e2 20E0      		ldi r18,0
 993 01e4 30E0      		ldi r19,0
 994 01e6 48EC      		ldi r20,lo8(-56)
 995 01e8 52E4      		ldi r21,lo8(66)
 996 01ea 0E94 0000 		call __addsf3
 997               	.LVL101:
 998 01ee 4B01      		movw r8,r22
 999 01f0 5C01      		movw r10,r24
 1000               	.LVL102:
  81:main.cpp      **** 		/*int x2=x-512;
  82:main.cpp      **** 		int y2=512-y;
  83:main.cpp      **** 		if(y2/x2>=12.8&&y2/x2<=-12.8)
  84:main.cpp      **** 			x2=0;
  85:main.cpp      **** 		if(y2/x2<=0.390625&&y2/x2>=-0.390625)
  86:main.cpp      **** 		y2=0;
  87:main.cpp      **** 		int x3 = x2;
  88:main.cpp      **** 		int y3 = y2;
  89:main.cpp      **** 		int x4= (x3*0.707)+(y3*0.707);
  90:main.cpp      **** 		int y4=-(x3*0.707)+(y3*0.707);
  91:main.cpp      **** 
  92:main.cpp      **** 		int x5=map(x4,-723,723,-255,255);
  93:main.cpp      **** 		int y5=map(y4,-723,723,-255,255);
  94:main.cpp      **** 
  95:main.cpp      **** 		if(x5<20&&x5>-20)
  96:main.cpp      **** 		x5=0;
  97:main.cpp      **** 
  98:main.cpp      **** 		if(y5<20&&y5>-20)
  99:main.cpp      **** 		y5=0;*/
 100:main.cpp      **** 
 101:main.cpp      **** 		if(x3>0)
 1001               		.loc 1 101 0
 1002 01f2 20E0      		ldi r18,0
 1003 01f4 30E0      		ldi r19,0
 1004 01f6 A901      		movw r20,r18
 1005 01f8 C301      		movw r24,r6
 1006 01fa B201      		movw r22,r4
 1007 01fc 0E94 0000 		call __gtsf2
 1008               	.LVL103:
 1009 0200 1816      		cp __zero_reg__,r24
 1010 0202 04F4      		brge .L24
 102:main.cpp      **** 		{
 103:main.cpp      **** 			OCR0=(int)x3;
 1011               		.loc 1 103 0
 1012 0204 C301      		movw r24,r6
 1013 0206 B201      		movw r22,r4
 1014 0208 0E94 0000 		call __fixsfsi
 1015               	.LVL104:
 1016 020c 6CBF      		out 0x3c,r22
 104:main.cpp      **** 			PORTB|=1<<PB0;
 1017               		.loc 1 104 0
 1018 020e C09A      		sbi 0x18,0
 1019 0210 00C0      		rjmp .L17
 1020               	.L24:
 105:main.cpp      **** 		}
 106:main.cpp      **** 		else
 107:main.cpp      **** 		{
 108:main.cpp      **** 			OCR0=-(int)x3;
 1021               		.loc 1 108 0
 1022 0212 C301      		movw r24,r6
 1023 0214 B201      		movw r22,r4
 1024 0216 0E94 0000 		call __fixsfsi
 1025               	.LVL105:
 1026 021a 6195      		neg r22
 1027 021c 6CBF      		out 0x3c,r22
 109:main.cpp      **** 			PORTB&=~(1<<PB0);
 1028               		.loc 1 109 0
 1029 021e C098      		cbi 0x18,0
 1030               	.L17:
 110:main.cpp      **** 		}
 111:main.cpp      **** 		if(y3>0)
 1031               		.loc 1 111 0
 1032 0220 20E0      		ldi r18,0
 1033 0222 30E0      		ldi r19,0
 1034 0224 A901      		movw r20,r18
 1035 0226 C501      		movw r24,r10
 1036 0228 B401      		movw r22,r8
 1037 022a 0E94 0000 		call __gtsf2
 1038               	.LVL106:
 1039 022e 1816      		cp __zero_reg__,r24
 1040 0230 04F4      		brge .L25
 112:main.cpp      **** 		{
 113:main.cpp      **** 		OCR2=(int)y3;
 1041               		.loc 1 113 0
 1042 0232 C501      		movw r24,r10
 1043 0234 B401      		movw r22,r8
 1044 0236 0E94 0000 		call __fixsfsi
 1045               	.LVL107:
 1046 023a 63BD      		out 0x23,r22
 114:main.cpp      **** 		PORTD|=1<<PD2;
 1047               		.loc 1 114 0
 1048 023c 929A      		sbi 0x12,2
 1049 023e 00C0      		rjmp .L13
 1050               	.L25:
 115:main.cpp      **** 		}
 116:main.cpp      **** 		else
 117:main.cpp      **** 		{
 118:main.cpp      **** 			OCR2=-(int)y3;
 1051               		.loc 1 118 0
 1052 0240 C501      		movw r24,r10
 1053 0242 B401      		movw r22,r8
 1054 0244 0E94 0000 		call __fixsfsi
 1055               	.LVL108:
 1056 0248 6195      		neg r22
 1057 024a 63BD      		out 0x23,r22
 119:main.cpp      **** 			PORTD&=~1<<PD2;
 1058               		.loc 1 119 0
 1059 024c 82B3      		in r24,0x12
 1060 024e 887F      		andi r24,lo8(-8)
 1061 0250 82BB      		out 0x12,r24
 1062 0252 00C0      		rjmp .L13
 1063               	.LBE11:
 1064               		.cfi_endproc
 1065               	.LFE7:
 1067               		.text
 1068               	.Letext0:
 1069               		.file 2 "/usr/lib/avr/include/math.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccH9VYBr.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccH9VYBr.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccH9VYBr.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccH9VYBr.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccH9VYBr.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccH9VYBr.s:12     .text:0000000000000000 _Z7Receivev
     /tmp/ccH9VYBr.s:35     .text:000000000000000a _Z8Transmith
     /tmp/ccH9VYBr.s:60     .text:0000000000000012 _Z3mapeeeee
     /tmp/ccH9VYBr.s:219    .text:00000000000000cc _Z22ellipticalSquareToDisceeReS_
     /tmp/ccH9VYBr.s:369    .text:0000000000000182 _Z22ellipticalDiscToSquareeeReS_
     /tmp/ccH9VYBr.s:700    .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
__subsf3
__mulsf3
__divsf3
__addsf3
sqrt
__floatsisf
__gtsf2
__fixsfsi
