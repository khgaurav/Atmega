   1               		.file	"main.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	_Z7Receivev
  12               	_Z7Receivev:
  13               	.LFB2:
  14               		.file 1 "main.cpp"
   1:main.cpp      **** 
   2:main.cpp      **** #include <avr/io.h>
   3:main.cpp      **** #include<avr/interrupt.h>
   4:main.cpp      **** #include<math.h>
   5:main.cpp      **** #define FOSC 1000000// Clock Speed
   6:main.cpp      **** #define BAUD 9600
   7:main.cpp      **** #define ubbr_value FOSC/16/BAUD-1
   8:main.cpp      **** int Receive()
   9:main.cpp      **** {
  15               		.loc 1 9 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               	.L2:
  10:main.cpp      **** 	while (! (UCSRA & (1 << RXC)) );
  22               		.loc 1 10 0
  23 0000 5F9B      		sbis 0xb,7
  24 0002 00C0      		rjmp .L2
  11:main.cpp      **** 	return UDR;
  25               		.loc 1 11 0
  26 0004 8CB1      		in r24,0xc
  12:main.cpp      **** }
  27               		.loc 1 12 0
  28 0006 90E0      		ldi r25,0
  29 0008 0895      		ret
  30               		.cfi_endproc
  31               	.LFE2:
  33               	.global	_Z8Transmith
  35               	_Z8Transmith:
  36               	.LFB3:
  13:main.cpp      **** 
  14:main.cpp      **** void Transmit(unsigned char data)
  15:main.cpp      **** {
  37               		.loc 1 15 0
  38               		.cfi_startproc
  39               	/* prologue: function */
  40               	/* frame size = 0 */
  41               	/* stack size = 0 */
  42               	.L__stack_usage = 0
  43               	.LVL0:
  44               	.L6:
  16:main.cpp      **** 	while (! (UCSRA & (1 << UDRE)) );
  45               		.loc 1 16 0
  46 000a 5D9B      		sbis 0xb,5
  47 000c 00C0      		rjmp .L6
  17:main.cpp      **** 	UDR = data;
  48               		.loc 1 17 0
  49 000e 8CB9      		out 0xc,r24
  50 0010 0895      		ret
  51               		.cfi_endproc
  52               	.LFE3:
  54               	.global	__subsf3
  55               	.global	__mulsf3
  56               	.global	__divsf3
  57               	.global	__addsf3
  58               	.global	_Z3mapeeeee
  60               	_Z3mapeeeee:
  61               	.LFB4:
  18:main.cpp      **** 
  19:main.cpp      **** }
  20:main.cpp      **** 
  21:main.cpp      **** long double map(long double x, long double in_min, long double in_max, long double out_min, long do
  22:main.cpp      **** {
  62               		.loc 1 22 0
  63               		.cfi_startproc
  64               	.LVL1:
  65 0012 4F92      		push r4
  66               	.LCFI0:
  67               		.cfi_def_cfa_offset 3
  68               		.cfi_offset 4, -2
  69 0014 5F92      		push r5
  70               	.LCFI1:
  71               		.cfi_def_cfa_offset 4
  72               		.cfi_offset 5, -3
  73 0016 6F92      		push r6
  74               	.LCFI2:
  75               		.cfi_def_cfa_offset 5
  76               		.cfi_offset 6, -4
  77 0018 7F92      		push r7
  78               	.LCFI3:
  79               		.cfi_def_cfa_offset 6
  80               		.cfi_offset 7, -5
  81 001a AF92      		push r10
  82               	.LCFI4:
  83               		.cfi_def_cfa_offset 7
  84               		.cfi_offset 10, -6
  85 001c BF92      		push r11
  86               	.LCFI5:
  87               		.cfi_def_cfa_offset 8
  88               		.cfi_offset 11, -7
  89 001e CF92      		push r12
  90               	.LCFI6:
  91               		.cfi_def_cfa_offset 9
  92               		.cfi_offset 12, -8
  93 0020 DF92      		push r13
  94               	.LCFI7:
  95               		.cfi_def_cfa_offset 10
  96               		.cfi_offset 13, -9
  97 0022 EF92      		push r14
  98               	.LCFI8:
  99               		.cfi_def_cfa_offset 11
 100               		.cfi_offset 14, -10
 101 0024 FF92      		push r15
 102               	.LCFI9:
 103               		.cfi_def_cfa_offset 12
 104               		.cfi_offset 15, -11
 105 0026 0F93      		push r16
 106               	.LCFI10:
 107               		.cfi_def_cfa_offset 13
 108               		.cfi_offset 16, -12
 109 0028 1F93      		push r17
 110               	.LCFI11:
 111               		.cfi_def_cfa_offset 14
 112               		.cfi_offset 17, -13
 113 002a CF93      		push r28
 114               	.LCFI12:
 115               		.cfi_def_cfa_offset 15
 116               		.cfi_offset 28, -14
 117 002c DF93      		push r29
 118               	.LCFI13:
 119               		.cfi_def_cfa_offset 16
 120               		.cfi_offset 29, -15
 121 002e CDB7      		in r28,__SP_L__
 122 0030 DEB7      		in r29,__SP_H__
 123               	.LCFI14:
 124               		.cfi_def_cfa_register 28
 125 0032 2897      		sbiw r28,8
 126               	.LCFI15:
 127               		.cfi_def_cfa_offset 24
 128 0034 0FB6      		in __tmp_reg__,__SREG__
 129 0036 F894      		cli
 130 0038 DEBF      		out __SP_H__,r29
 131 003a 0FBE      		out __SREG__,__tmp_reg__
 132 003c CDBF      		out __SP_L__,r28
 133               	/* prologue: function */
 134               	/* frame size = 8 */
 135               	/* stack size = 22 */
 136               	.L__stack_usage = 22
 137 003e 2901      		movw r4,r18
 138 0040 3A01      		movw r6,r20
 139 0042 ED82      		std Y+5,r14
 140 0044 FE82      		std Y+6,r15
 141 0046 0F83      		std Y+7,r16
 142 0048 1887      		std Y+8,r17
  23:main.cpp      **** 	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 143               		.loc 1 23 0
 144 004a 0E94 0000 		call __subsf3
 145               	.LVL2:
 146 004e 6983      		std Y+1,r22
 147 0050 7A83      		std Y+2,r23
 148 0052 8B83      		std Y+3,r24
 149 0054 9C83      		std Y+4,r25
 150 0056 A601      		movw r20,r12
 151 0058 9501      		movw r18,r10
 152 005a 698D      		ldd r22,Y+25
 153 005c 7A8D      		ldd r23,Y+26
 154 005e 8B8D      		ldd r24,Y+27
 155 0060 9C8D      		ldd r25,Y+28
 156 0062 0E94 0000 		call __subsf3
 157               	.LVL3:
 158 0066 9B01      		movw r18,r22
 159 0068 AC01      		movw r20,r24
 160 006a 6981      		ldd r22,Y+1
 161 006c 7A81      		ldd r23,Y+2
 162 006e 8B81      		ldd r24,Y+3
 163 0070 9C81      		ldd r25,Y+4
 164 0072 0E94 0000 		call __mulsf3
 165               	.LVL4:
 166 0076 6983      		std Y+1,r22
 167 0078 7A83      		std Y+2,r23
 168 007a 8B83      		std Y+3,r24
 169 007c 9C83      		std Y+4,r25
 170 007e A301      		movw r20,r6
 171 0080 9201      		movw r18,r4
 172 0082 C801      		movw r24,r16
 173 0084 B701      		movw r22,r14
 174 0086 0E94 0000 		call __subsf3
 175               	.LVL5:
 176 008a 9B01      		movw r18,r22
 177 008c AC01      		movw r20,r24
 178 008e 6981      		ldd r22,Y+1
 179 0090 7A81      		ldd r23,Y+2
 180 0092 8B81      		ldd r24,Y+3
 181 0094 9C81      		ldd r25,Y+4
 182 0096 0E94 0000 		call __divsf3
 183               	.LVL6:
 184 009a A601      		movw r20,r12
 185 009c 9501      		movw r18,r10
 186 009e 0E94 0000 		call __addsf3
 187               	.LVL7:
 188               	/* epilogue start */
  24:main.cpp      **** }
 189               		.loc 1 24 0
 190 00a2 2896      		adiw r28,8
 191 00a4 0FB6      		in __tmp_reg__,__SREG__
 192 00a6 F894      		cli
 193 00a8 DEBF      		out __SP_H__,r29
 194 00aa 0FBE      		out __SREG__,__tmp_reg__
 195 00ac CDBF      		out __SP_L__,r28
 196 00ae DF91      		pop r29
 197 00b0 CF91      		pop r28
 198 00b2 1F91      		pop r17
 199 00b4 0F91      		pop r16
 200 00b6 FF90      		pop r15
 201 00b8 EF90      		pop r14
 202               	.LVL8:
 203 00ba DF90      		pop r13
 204 00bc CF90      		pop r12
 205 00be BF90      		pop r11
 206 00c0 AF90      		pop r10
 207               	.LVL9:
 208 00c2 7F90      		pop r7
 209 00c4 6F90      		pop r6
 210 00c6 5F90      		pop r5
 211 00c8 4F90      		pop r4
 212               	.LVL10:
 213 00ca 0895      		ret
 214               		.cfi_endproc
 215               	.LFE4:
 217               	.global	_Z22ellipticalSquareToDisceeReS_
 219               	_Z22ellipticalSquareToDisceeReS_:
 220               	.LFB5:
  25:main.cpp      **** void ellipticalSquareToDisc(long double x, long double y, long double& u, long double& v)
  26:main.cpp      **** {
 221               		.loc 1 26 0
 222               		.cfi_startproc
 223               	.LVL11:
 224 00cc 4F92      		push r4
 225               	.LCFI16:
 226               		.cfi_def_cfa_offset 3
 227               		.cfi_offset 4, -2
 228 00ce 5F92      		push r5
 229               	.LCFI17:
 230               		.cfi_def_cfa_offset 4
 231               		.cfi_offset 5, -3
 232 00d0 6F92      		push r6
 233               	.LCFI18:
 234               		.cfi_def_cfa_offset 5
 235               		.cfi_offset 6, -4
 236 00d2 7F92      		push r7
 237               	.LCFI19:
 238               		.cfi_def_cfa_offset 6
 239               		.cfi_offset 7, -5
 240 00d4 8F92      		push r8
 241               	.LCFI20:
 242               		.cfi_def_cfa_offset 7
 243               		.cfi_offset 8, -6
 244 00d6 9F92      		push r9
 245               	.LCFI21:
 246               		.cfi_def_cfa_offset 8
 247               		.cfi_offset 9, -7
 248 00d8 AF92      		push r10
 249               	.LCFI22:
 250               		.cfi_def_cfa_offset 9
 251               		.cfi_offset 10, -8
 252 00da BF92      		push r11
 253               	.LCFI23:
 254               		.cfi_def_cfa_offset 10
 255               		.cfi_offset 11, -9
 256 00dc EF92      		push r14
 257               	.LCFI24:
 258               		.cfi_def_cfa_offset 11
 259               		.cfi_offset 14, -10
 260 00de FF92      		push r15
 261               	.LCFI25:
 262               		.cfi_def_cfa_offset 12
 263               		.cfi_offset 15, -11
 264 00e0 0F93      		push r16
 265               	.LCFI26:
 266               		.cfi_def_cfa_offset 13
 267               		.cfi_offset 16, -12
 268 00e2 1F93      		push r17
 269               	.LCFI27:
 270               		.cfi_def_cfa_offset 14
 271               		.cfi_offset 17, -13
 272               	/* prologue: function */
 273               	/* frame size = 0 */
 274               	/* stack size = 12 */
 275               	.L__stack_usage = 12
 276 00e4 2B01      		movw r4,r22
 277 00e6 3C01      		movw r6,r24
 278 00e8 4901      		movw r8,r18
 279 00ea 5A01      		movw r10,r20
  27:main.cpp      **** 	u = x * sqrt(1.0 - y*y/2.0);
 280               		.loc 1 27 0
 281 00ec CA01      		movw r24,r20
 282 00ee B901      		movw r22,r18
 283               	.LVL12:
 284 00f0 0E94 0000 		call __mulsf3
 285               	.LVL13:
 286 00f4 20E0      		ldi r18,0
 287 00f6 30E0      		ldi r19,0
 288 00f8 40E0      		ldi r20,0
 289 00fa 5FE3      		ldi r21,lo8(63)
 290 00fc 0E94 0000 		call __mulsf3
 291               	.LVL14:
 292 0100 9B01      		movw r18,r22
 293 0102 AC01      		movw r20,r24
 294 0104 60E0      		ldi r22,0
 295 0106 70E0      		ldi r23,0
 296 0108 80E8      		ldi r24,lo8(-128)
 297 010a 9FE3      		ldi r25,lo8(63)
 298 010c 0E94 0000 		call __subsf3
 299               	.LVL15:
 300 0110 0E94 0000 		call sqrt
 301               	.LVL16:
 302 0114 A301      		movw r20,r6
 303 0116 9201      		movw r18,r4
 304 0118 0E94 0000 		call __mulsf3
 305               	.LVL17:
 306 011c F801      		movw r30,r16
 307 011e 6083      		st Z,r22
 308 0120 7183      		std Z+1,r23
 309 0122 8283      		std Z+2,r24
 310 0124 9383      		std Z+3,r25
  28:main.cpp      **** 	v = y * sqrt(1.0 - x*x/2.0);
 311               		.loc 1 28 0
 312 0126 A301      		movw r20,r6
 313 0128 9201      		movw r18,r4
 314 012a C301      		movw r24,r6
 315 012c B201      		movw r22,r4
 316 012e 0E94 0000 		call __mulsf3
 317               	.LVL18:
 318 0132 20E0      		ldi r18,0
 319 0134 30E0      		ldi r19,0
 320 0136 40E0      		ldi r20,0
 321 0138 5FE3      		ldi r21,lo8(63)
 322 013a 0E94 0000 		call __mulsf3
 323               	.LVL19:
 324 013e 9B01      		movw r18,r22
 325 0140 AC01      		movw r20,r24
 326 0142 60E0      		ldi r22,0
 327 0144 70E0      		ldi r23,0
 328 0146 80E8      		ldi r24,lo8(-128)
 329 0148 9FE3      		ldi r25,lo8(63)
 330 014a 0E94 0000 		call __subsf3
 331               	.LVL20:
 332 014e 0E94 0000 		call sqrt
 333               	.LVL21:
 334 0152 9B01      		movw r18,r22
 335 0154 AC01      		movw r20,r24
 336 0156 C501      		movw r24,r10
 337 0158 B401      		movw r22,r8
 338 015a 0E94 0000 		call __mulsf3
 339               	.LVL22:
 340 015e F701      		movw r30,r14
 341 0160 6083      		st Z,r22
 342 0162 7183      		std Z+1,r23
 343 0164 8283      		std Z+2,r24
 344 0166 9383      		std Z+3,r25
 345               	/* epilogue start */
  29:main.cpp      **** }
 346               		.loc 1 29 0
 347 0168 1F91      		pop r17
 348 016a 0F91      		pop r16
 349               	.LVL23:
 350 016c FF90      		pop r15
 351 016e EF90      		pop r14
 352               	.LVL24:
 353 0170 BF90      		pop r11
 354 0172 AF90      		pop r10
 355 0174 9F90      		pop r9
 356 0176 8F90      		pop r8
 357               	.LVL25:
 358 0178 7F90      		pop r7
 359 017a 6F90      		pop r6
 360 017c 5F90      		pop r5
 361 017e 4F90      		pop r4
 362               	.LVL26:
 363 0180 0895      		ret
 364               		.cfi_endproc
 365               	.LFE5:
 367               	.global	_Z22ellipticalDiscToSquareeeReS_
 369               	_Z22ellipticalDiscToSquareeeReS_:
 370               	.LFB6:
  30:main.cpp      **** 
  31:main.cpp      **** void ellipticalDiscToSquare(long double u, long double v, long double& x, long double& y)
  32:main.cpp      **** {
 371               		.loc 1 32 0
 372               		.cfi_startproc
 373               	.LVL27:
 374 0182 4F92      		push r4
 375               	.LCFI28:
 376               		.cfi_def_cfa_offset 3
 377               		.cfi_offset 4, -2
 378 0184 5F92      		push r5
 379               	.LCFI29:
 380               		.cfi_def_cfa_offset 4
 381               		.cfi_offset 5, -3
 382 0186 6F92      		push r6
 383               	.LCFI30:
 384               		.cfi_def_cfa_offset 5
 385               		.cfi_offset 6, -4
 386 0188 7F92      		push r7
 387               	.LCFI31:
 388               		.cfi_def_cfa_offset 6
 389               		.cfi_offset 7, -5
 390 018a 8F92      		push r8
 391               	.LCFI32:
 392               		.cfi_def_cfa_offset 7
 393               		.cfi_offset 8, -6
 394 018c 9F92      		push r9
 395               	.LCFI33:
 396               		.cfi_def_cfa_offset 8
 397               		.cfi_offset 9, -7
 398 018e AF92      		push r10
 399               	.LCFI34:
 400               		.cfi_def_cfa_offset 9
 401               		.cfi_offset 10, -8
 402 0190 BF92      		push r11
 403               	.LCFI35:
 404               		.cfi_def_cfa_offset 10
 405               		.cfi_offset 11, -9
 406 0192 CF92      		push r12
 407               	.LCFI36:
 408               		.cfi_def_cfa_offset 11
 409               		.cfi_offset 12, -10
 410 0194 DF92      		push r13
 411               	.LCFI37:
 412               		.cfi_def_cfa_offset 12
 413               		.cfi_offset 13, -11
 414 0196 EF92      		push r14
 415               	.LCFI38:
 416               		.cfi_def_cfa_offset 13
 417               		.cfi_offset 14, -12
 418 0198 FF92      		push r15
 419               	.LCFI39:
 420               		.cfi_def_cfa_offset 14
 421               		.cfi_offset 15, -13
 422 019a 0F93      		push r16
 423               	.LCFI40:
 424               		.cfi_def_cfa_offset 15
 425               		.cfi_offset 16, -14
 426 019c 1F93      		push r17
 427               	.LCFI41:
 428               		.cfi_def_cfa_offset 16
 429               		.cfi_offset 17, -15
 430 019e CF93      		push r28
 431               	.LCFI42:
 432               		.cfi_def_cfa_offset 17
 433               		.cfi_offset 28, -16
 434 01a0 DF93      		push r29
 435               	.LCFI43:
 436               		.cfi_def_cfa_offset 18
 437               		.cfi_offset 29, -17
 438 01a2 CDB7      		in r28,__SP_L__
 439 01a4 DEB7      		in r29,__SP_H__
 440               	.LCFI44:
 441               		.cfi_def_cfa_register 28
 442 01a6 2E97      		sbiw r28,14
 443               	.LCFI45:
 444               		.cfi_def_cfa_offset 32
 445 01a8 0FB6      		in __tmp_reg__,__SREG__
 446 01aa F894      		cli
 447 01ac DEBF      		out __SP_H__,r29
 448 01ae 0FBE      		out __SREG__,__tmp_reg__
 449 01b0 CDBF      		out __SP_L__,r28
 450               	/* prologue: function */
 451               	/* frame size = 14 */
 452               	/* stack size = 30 */
 453               	.L__stack_usage = 30
 454 01b2 4B01      		movw r8,r22
 455 01b4 5C01      		movw r10,r24
 456 01b6 2901      		movw r4,r18
 457 01b8 3A01      		movw r6,r20
 458 01ba FE86      		std Y+14,r15
 459 01bc ED86      		std Y+13,r14
  33:main.cpp      **** 	long double u2 = u * u;
 460               		.loc 1 33 0
 461 01be 9B01      		movw r18,r22
 462 01c0 AC01      		movw r20,r24
 463               	.LVL28:
 464 01c2 0E94 0000 		call __mulsf3
 465               	.LVL29:
 466 01c6 6B01      		movw r12,r22
 467 01c8 7C01      		movw r14,r24
 468               	.LVL30:
  34:main.cpp      **** 	long double v2 = v * v;
 469               		.loc 1 34 0
 470 01ca A301      		movw r20,r6
 471 01cc 9201      		movw r18,r4
 472 01ce C301      		movw r24,r6
 473 01d0 B201      		movw r22,r4
 474 01d2 0E94 0000 		call __mulsf3
 475               	.LVL31:
 476 01d6 6983      		std Y+1,r22
 477 01d8 7A83      		std Y+2,r23
 478 01da 8B83      		std Y+3,r24
 479 01dc 9C83      		std Y+4,r25
 480               	.LVL32:
  35:main.cpp      **** 	long double twosqrt2 = 2.0 * sqrt(2.0);
  36:main.cpp      **** 	long double subtermx = 2.0 + u2 - v2;
 481               		.loc 1 36 0
 482 01de 20E0      		ldi r18,0
 483 01e0 30E0      		ldi r19,0
 484 01e2 40E0      		ldi r20,0
 485 01e4 50E4      		ldi r21,lo8(64)
 486 01e6 C701      		movw r24,r14
 487 01e8 B601      		movw r22,r12
 488               	.LVL33:
 489 01ea 0E94 0000 		call __addsf3
 490               	.LVL34:
 491 01ee 2981      		ldd r18,Y+1
 492 01f0 3A81      		ldd r19,Y+2
 493 01f2 4B81      		ldd r20,Y+3
 494 01f4 5C81      		ldd r21,Y+4
 495 01f6 0E94 0000 		call __subsf3
 496               	.LVL35:
 497 01fa 6D83      		std Y+5,r22
 498 01fc 7E83      		std Y+6,r23
 499 01fe 8F83      		std Y+7,r24
 500 0200 9887      		std Y+8,r25
 501               	.LVL36:
  37:main.cpp      **** 	long double subtermy = 2.0 - u2 + v2;
 502               		.loc 1 37 0
 503 0202 A701      		movw r20,r14
 504 0204 9601      		movw r18,r12
 505 0206 60E0      		ldi r22,0
 506 0208 70E0      		ldi r23,0
 507 020a 80E0      		ldi r24,0
 508 020c 90E4      		ldi r25,lo8(64)
 509               	.LVL37:
 510 020e 0E94 0000 		call __subsf3
 511               	.LVL38:
 512 0212 2981      		ldd r18,Y+1
 513 0214 3A81      		ldd r19,Y+2
 514 0216 4B81      		ldd r20,Y+3
 515 0218 5C81      		ldd r21,Y+4
 516 021a 0E94 0000 		call __addsf3
 517               	.LVL39:
 518 021e 6B01      		movw r12,r22
 519 0220 7C01      		movw r14,r24
 520               	.LVL40:
  38:main.cpp      **** 	long double termx1 = subtermx + u * twosqrt2;
 521               		.loc 1 38 0
 522 0222 23EF      		ldi r18,lo8(-13)
 523 0224 34E0      		ldi r19,lo8(4)
 524 0226 45E3      		ldi r20,lo8(53)
 525 0228 50E4      		ldi r21,lo8(64)
 526 022a C501      		movw r24,r10
 527 022c B401      		movw r22,r8
 528 022e 0E94 0000 		call __mulsf3
 529               	.LVL41:
 530 0232 4B01      		movw r8,r22
 531 0234 5C01      		movw r10,r24
 532               	.LVL42:
  39:main.cpp      **** 	long double termx2 = subtermx - u * twosqrt2;
  40:main.cpp      **** 	long double termy1 = subtermy + v * twosqrt2;
 533               		.loc 1 40 0
 534 0236 23EF      		ldi r18,lo8(-13)
 535 0238 34E0      		ldi r19,lo8(4)
 536 023a 45E3      		ldi r20,lo8(53)
 537 023c 50E4      		ldi r21,lo8(64)
 538 023e C301      		movw r24,r6
 539 0240 B201      		movw r22,r4
 540 0242 0E94 0000 		call __mulsf3
 541               	.LVL43:
 542 0246 6983      		std Y+1,r22
 543 0248 7A83      		std Y+2,r23
 544 024a 8B83      		std Y+3,r24
 545 024c 9C83      		std Y+4,r25
 546               	.LVL44:
  41:main.cpp      **** 	long double termy2 = subtermy - v * twosqrt2;
  42:main.cpp      **** 	x = 0.5 * sqrt(termx1) - 0.5 * sqrt(termx2);
 547               		.loc 1 42 0
 548 024e A501      		movw r20,r10
 549 0250 9401      		movw r18,r8
 550 0252 6D81      		ldd r22,Y+5
 551 0254 7E81      		ldd r23,Y+6
 552 0256 8F81      		ldd r24,Y+7
 553 0258 9885      		ldd r25,Y+8
 554               	.LVL45:
 555 025a 0E94 0000 		call __addsf3
 556               	.LVL46:
 557 025e 0E94 0000 		call sqrt
 558               	.LVL47:
 559 0262 6987      		std Y+9,r22
 560 0264 7A87      		std Y+10,r23
 561 0266 8B87      		std Y+11,r24
 562 0268 9C87      		std Y+12,r25
 563 026a A501      		movw r20,r10
 564 026c 9401      		movw r18,r8
 565 026e 6D81      		ldd r22,Y+5
 566 0270 7E81      		ldd r23,Y+6
 567 0272 8F81      		ldd r24,Y+7
 568 0274 9885      		ldd r25,Y+8
 569 0276 0E94 0000 		call __subsf3
 570               	.LVL48:
 571 027a 0E94 0000 		call sqrt
 572               	.LVL49:
 573 027e 2B01      		movw r4,r22
 574 0280 3C01      		movw r6,r24
 575               	.LVL50:
 576 0282 20E0      		ldi r18,0
 577 0284 30E0      		ldi r19,0
 578 0286 40E0      		ldi r20,0
 579 0288 5FE3      		ldi r21,lo8(63)
 580 028a 6985      		ldd r22,Y+9
 581 028c 7A85      		ldd r23,Y+10
 582 028e 8B85      		ldd r24,Y+11
 583 0290 9C85      		ldd r25,Y+12
 584 0292 0E94 0000 		call __mulsf3
 585               	.LVL51:
 586 0296 4B01      		movw r8,r22
 587 0298 5C01      		movw r10,r24
 588               	.LVL52:
 589 029a 20E0      		ldi r18,0
 590 029c 30E0      		ldi r19,0
 591 029e 40E0      		ldi r20,0
 592 02a0 5FE3      		ldi r21,lo8(63)
 593 02a2 C301      		movw r24,r6
 594 02a4 B201      		movw r22,r4
 595 02a6 0E94 0000 		call __mulsf3
 596               	.LVL53:
 597 02aa 9B01      		movw r18,r22
 598 02ac AC01      		movw r20,r24
 599 02ae C501      		movw r24,r10
 600 02b0 B401      		movw r22,r8
 601 02b2 0E94 0000 		call __subsf3
 602               	.LVL54:
 603 02b6 F801      		movw r30,r16
 604 02b8 6083      		st Z,r22
 605 02ba 7183      		std Z+1,r23
 606 02bc 8283      		std Z+2,r24
 607 02be 9383      		std Z+3,r25
  43:main.cpp      **** 	y = 0.5 * sqrt(termy1) - 0.5 * sqrt(termy2);
 608               		.loc 1 43 0
 609 02c0 2981      		ldd r18,Y+1
 610 02c2 3A81      		ldd r19,Y+2
 611 02c4 4B81      		ldd r20,Y+3
 612 02c6 5C81      		ldd r21,Y+4
 613 02c8 C701      		movw r24,r14
 614 02ca B601      		movw r22,r12
 615 02cc 0E94 0000 		call __addsf3
 616               	.LVL55:
 617 02d0 0E94 0000 		call sqrt
 618               	.LVL56:
 619 02d4 4B01      		movw r8,r22
 620 02d6 5C01      		movw r10,r24
 621 02d8 2981      		ldd r18,Y+1
 622 02da 3A81      		ldd r19,Y+2
 623 02dc 4B81      		ldd r20,Y+3
 624 02de 5C81      		ldd r21,Y+4
 625 02e0 C701      		movw r24,r14
 626 02e2 B601      		movw r22,r12
 627 02e4 0E94 0000 		call __subsf3
 628               	.LVL57:
 629 02e8 0E94 0000 		call sqrt
 630               	.LVL58:
 631 02ec 2B01      		movw r4,r22
 632 02ee 3C01      		movw r6,r24
 633 02f0 20E0      		ldi r18,0
 634 02f2 30E0      		ldi r19,0
 635 02f4 40E0      		ldi r20,0
 636 02f6 5FE3      		ldi r21,lo8(63)
 637 02f8 C501      		movw r24,r10
 638 02fa B401      		movw r22,r8
 639 02fc 0E94 0000 		call __mulsf3
 640               	.LVL59:
 641 0300 6B01      		movw r12,r22
 642 0302 7C01      		movw r14,r24
 643               	.LVL60:
 644 0304 20E0      		ldi r18,0
 645 0306 30E0      		ldi r19,0
 646 0308 40E0      		ldi r20,0
 647 030a 5FE3      		ldi r21,lo8(63)
 648 030c C301      		movw r24,r6
 649 030e B201      		movw r22,r4
 650 0310 0E94 0000 		call __mulsf3
 651               	.LVL61:
 652 0314 9B01      		movw r18,r22
 653 0316 AC01      		movw r20,r24
 654 0318 C701      		movw r24,r14
 655 031a B601      		movw r22,r12
 656 031c 0E94 0000 		call __subsf3
 657               	.LVL62:
 658 0320 ED85      		ldd r30,Y+13
 659 0322 FE85      		ldd r31,Y+14
 660 0324 6083      		st Z,r22
 661 0326 7183      		std Z+1,r23
 662 0328 8283      		std Z+2,r24
 663 032a 9383      		std Z+3,r25
 664               	/* epilogue start */
  44:main.cpp      **** 
  45:main.cpp      **** }
 665               		.loc 1 45 0
 666 032c 2E96      		adiw r28,14
 667 032e 0FB6      		in __tmp_reg__,__SREG__
 668 0330 F894      		cli
 669 0332 DEBF      		out __SP_H__,r29
 670 0334 0FBE      		out __SREG__,__tmp_reg__
 671 0336 CDBF      		out __SP_L__,r28
 672 0338 DF91      		pop r29
 673 033a CF91      		pop r28
 674 033c 1F91      		pop r17
 675 033e 0F91      		pop r16
 676               	.LVL63:
 677 0340 FF90      		pop r15
 678 0342 EF90      		pop r14
 679               	.LVL64:
 680 0344 DF90      		pop r13
 681 0346 CF90      		pop r12
 682 0348 BF90      		pop r11
 683 034a AF90      		pop r10
 684 034c 9F90      		pop r9
 685 034e 8F90      		pop r8
 686 0350 7F90      		pop r7
 687 0352 6F90      		pop r6
 688 0354 5F90      		pop r5
 689 0356 4F90      		pop r4
 690 0358 0895      		ret
 691               		.cfi_endproc
 692               	.LFE6:
 694               	.global	__floatsisf
 695               	.global	__eqsf2
 696               	.global	__gesf2
 697               	.global	__lesf2
 698               	.global	__ltsf2
 699               	.global	__gtsf2
 700               	.global	__fixsfsi
 701               		.section	.text.startup,"ax",@progbits
 702               	.global	main
 704               	main:
 705               	.LFB7:
  46:main.cpp      **** int main (void)
  47:main.cpp      **** {
 706               		.loc 1 47 0
 707               		.cfi_startproc
 708 0000 CF93      		push r28
 709               	.LCFI46:
 710               		.cfi_def_cfa_offset 3
 711               		.cfi_offset 28, -2
 712 0002 DF93      		push r29
 713               	.LCFI47:
 714               		.cfi_def_cfa_offset 4
 715               		.cfi_offset 29, -3
 716 0004 CDB7      		in r28,__SP_L__
 717 0006 DEB7      		in r29,__SP_H__
 718               	.LCFI48:
 719               		.cfi_def_cfa_register 28
 720 0008 6097      		sbiw r28,16
 721               	.LCFI49:
 722               		.cfi_def_cfa_offset 20
 723 000a 0FB6      		in __tmp_reg__,__SREG__
 724 000c F894      		cli
 725 000e DEBF      		out __SP_H__,r29
 726 0010 0FBE      		out __SREG__,__tmp_reg__
 727 0012 CDBF      		out __SP_L__,r28
 728               	/* prologue: function */
 729               	/* frame size = 16 */
 730               	/* stack size = 18 */
 731               	.L__stack_usage = 18
  48:main.cpp      **** 	TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 732               		.loc 1 48 0
 733 0014 83B7      		in r24,0x33
 734 0016 8966      		ori r24,lo8(105)
 735 0018 83BF      		out 0x33,r24
  49:main.cpp      **** 	DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 736               		.loc 1 49 0
 737 001a 87B3      		in r24,0x17
 738 001c 8B60      		ori r24,lo8(11)
 739 001e 87BB      		out 0x17,r24
  50:main.cpp      **** 	TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 740               		.loc 1 50 0
 741 0020 85B5      		in r24,0x25
 742 0022 8966      		ori r24,lo8(105)
 743 0024 85BD      		out 0x25,r24
  51:main.cpp      **** 	DDRD |= 1<< PB7 | 1<< PD4;
 744               		.loc 1 51 0
 745 0026 81B3      		in r24,0x11
 746 0028 8069      		ori r24,lo8(-112)
 747 002a 81BB      		out 0x11,r24
  52:main.cpp      **** 	DDRA|= (1<<PA0);
 748               		.loc 1 52 0
 749 002c D09A      		sbi 0x1a,0
  53:main.cpp      **** 	PORTB &= ~(1<< PINB0);
 750               		.loc 1 53 0
 751 002e C098      		cbi 0x18,0
  54:main.cpp      **** 	PORTA &= ~(1<< PINA0);
 752               		.loc 1 54 0
 753 0030 D898      		cbi 0x1b,0
  55:main.cpp      **** 	UCSRA = (1 << U2X);
 754               		.loc 1 55 0
 755 0032 82E0      		ldi r24,lo8(2)
 756 0034 8BB9      		out 0xb,r24
  56:main.cpp      **** 	UBRRH = (unsigned char) (ubbr_value >> 8);
 757               		.loc 1 56 0
 758 0036 10BC      		out 0x20,__zero_reg__
  57:main.cpp      **** 	UBRRL = (unsigned char) ubbr_value;
 759               		.loc 1 57 0
 760 0038 8FEF      		ldi r24,lo8(-1)
 761 003a 89B9      		out 0x9,r24
  58:main.cpp      **** 	UCSRB = (1 << RXEN);
 762               		.loc 1 58 0
 763 003c 80E1      		ldi r24,lo8(16)
 764 003e 8AB9      		out 0xa,r24
  59:main.cpp      **** 	UCSRC = (1 << URSEL) | (3 << UCSZ0);
 765               		.loc 1 59 0
 766 0040 86E8      		ldi r24,lo8(-122)
 767 0042 80BD      		out 0x20,r24
 768               	.LVL65:
  60:main.cpp      **** 	int xo=0,yo=0,cnt=0;
 769               		.loc 1 60 0
 770 0044 C12C      		mov r12,__zero_reg__
 771 0046 D12C      		mov r13,__zero_reg__
 772 0048 E12C      		mov r14,__zero_reg__
 773 004a F12C      		mov r15,__zero_reg__
 774               	.LVL66:
 775               	.L13:
 776               	.LBB15:
 777               	.LBB16:
  61:main.cpp      **** 
  62:main.cpp      **** 	while (1)
  63:main.cpp      **** 	{
  64:main.cpp      **** 
  65:main.cpp      **** 		double x2,y2;
  66:main.cpp      **** 		if(Receive()==0x11)
 778               		.loc 1 66 0
 779 004c 0E94 0000 		call _Z7Receivev
 780               	.LVL67:
 781 0050 4197      		sbiw r24,17
 782 0052 01F0      		breq .+2
 783 0054 00C0      		rjmp .L63
 784               	.LBB17:
  67:main.cpp      **** 		{
  68:main.cpp      **** 			int x1= Receive();
 785               		.loc 1 68 0
 786 0056 0E94 0000 		call _Z7Receivev
 787               	.LVL68:
 788 005a 1C01      		movw r2,r24
 789               	.LVL69:
  69:main.cpp      **** 			x2 = (Receive())<<8 | x1;
 790               		.loc 1 69 0
 791 005c 0E94 0000 		call _Z7Receivev
 792               	.LVL70:
 793 0060 182F      		mov r17,r24
 794               	.LVL71:
 795               	.LBE17:
 796               	.LBE16:
 797               	.LBB19:
  70:main.cpp      **** 
  71:main.cpp      **** 		}
  72:main.cpp      **** 		else
  73:main.cpp      **** 		{
  74:main.cpp      **** 			OCR0=0;
  75:main.cpp      **** 			OCR2=0;
  76:main.cpp      **** 			PORTA&=~1<<PA0;
  77:main.cpp      **** 			PORTB&=~(1<<PB0);
  78:main.cpp      **** 			continue;
  79:main.cpp      **** 		}
  80:main.cpp      **** 		if(Receive()==0x21)
 798               		.loc 1 80 0
 799 0062 0E94 0000 		call _Z7Receivev
 800               	.LVL72:
 801 0066 8197      		sbiw r24,33
 802 0068 01F0      		breq .+2
 803 006a 00C0      		rjmp .L63
 804               	.LBE19:
 805               	.LBB21:
 806               	.LBB18:
  69:main.cpp      **** 			x2 = (Receive())<<8 | x1;
 807               		.loc 1 69 0
 808 006c 1E87      		std Y+14,r17
 809 006e 1D86      		std Y+13,__zero_reg__
 810 0070 2D85      		ldd r18,Y+13
 811 0072 3E85      		ldd r19,Y+14
 812 0074 222A      		or r2,r18
 813 0076 332A      		or r3,r19
 814               	.LVL73:
 815 0078 B101      		movw r22,r2
 816 007a 032C      		mov __tmp_reg__,r3
 817 007c 000C      		lsl r0
 818 007e 880B      		sbc r24,r24
 819 0080 990B      		sbc r25,r25
 820 0082 0E94 0000 		call __floatsisf
 821               	.LVL74:
 822 0086 2B01      		movw r4,r22
 823 0088 3C01      		movw r6,r24
 824               	.LBE18:
 825               	.LBE21:
 826               	.LBB22:
 827               	.LBB20:
  81:main.cpp      **** 		{
  82:main.cpp      **** 			int y1=Receive();
 828               		.loc 1 82 0
 829 008a 0E94 0000 		call _Z7Receivev
 830               	.LVL75:
 831 008e 8C01      		movw r16,r24
 832               	.LVL76:
  83:main.cpp      **** 			y2=(Receive())<<8 | y1;
 833               		.loc 1 83 0
 834 0090 0E94 0000 		call _Z7Receivev
 835               	.LVL77:
 836 0094 888B      		std Y+16,r24
 837 0096 1F86      		std Y+15,__zero_reg__
 838 0098 6F85      		ldd r22,Y+15
 839 009a 7889      		ldd r23,Y+16
 840 009c 602B      		or r22,r16
 841 009e 712B      		or r23,r17
 842 00a0 072E      		mov __tmp_reg__,r23
 843 00a2 000C      		lsl r0
 844 00a4 880B      		sbc r24,r24
 845 00a6 990B      		sbc r25,r25
 846 00a8 0E94 0000 		call __floatsisf
 847               	.LVL78:
 848 00ac 4B01      		movw r8,r22
 849 00ae 5C01      		movw r10,r24
 850               	.LVL79:
 851               	.LBE20:
 852               	.LBE22:
  84:main.cpp      **** 		}
  85:main.cpp      **** 		else
  86:main.cpp      **** 		{
  87:main.cpp      **** 			OCR0=0;
  88:main.cpp      **** 			OCR2=0;
  89:main.cpp      **** 			PORTA&=~1<<PA0;
  90:main.cpp      **** 			PORTB&=~(1<<PB0);
  91:main.cpp      **** 			continue;
  92:main.cpp      **** 		}
  93:main.cpp      **** 		if(x2==xo&&y2==xo)
 853               		.loc 1 93 0
 854 00b0 B701      		movw r22,r14
 855 00b2 0F2C      		mov __tmp_reg__,r15
 856 00b4 000C      		lsl r0
 857 00b6 880B      		sbc r24,r24
 858 00b8 990B      		sbc r25,r25
 859 00ba 0E94 0000 		call __floatsisf
 860               	.LVL80:
 861 00be 6987      		std Y+9,r22
 862 00c0 7A87      		std Y+10,r23
 863 00c2 8B87      		std Y+11,r24
 864 00c4 9C87      		std Y+12,r25
 865 00c6 9B01      		movw r18,r22
 866 00c8 AC01      		movw r20,r24
 867 00ca C301      		movw r24,r6
 868 00cc B201      		movw r22,r4
 869 00ce 0E94 0000 		call __eqsf2
 870               	.LVL81:
 871 00d2 8111      		cpse r24,__zero_reg__
 872 00d4 00C0      		rjmp .L61
 873               		.loc 1 93 0 is_stmt 0 discriminator 1
 874 00d6 2985      		ldd r18,Y+9
 875 00d8 3A85      		ldd r19,Y+10
 876 00da 4B85      		ldd r20,Y+11
 877 00dc 5C85      		ldd r21,Y+12
 878 00de C501      		movw r24,r10
 879 00e0 B401      		movw r22,r8
 880 00e2 0E94 0000 		call __eqsf2
 881               	.LVL82:
 882 00e6 8111      		cpse r24,__zero_reg__
 883 00e8 00C0      		rjmp .L61
  94:main.cpp      **** 		{
  95:main.cpp      **** 			cnt++;
 884               		.loc 1 95 0 is_stmt 1
 885 00ea 3FEF      		ldi r19,-1
 886 00ec C31A      		sub r12,r19
 887 00ee D30A      		sbc r13,r19
 888               	.LVL83:
  96:main.cpp      **** 		}
  97:main.cpp      **** 		else
  98:main.cpp      **** 		{
  99:main.cpp      **** 			xo=x2;
 100:main.cpp      **** 			yo=y2;
 101:main.cpp      **** 			cnt=0;
 102:main.cpp      **** 		}
 103:main.cpp      **** 		if(cnt>=5)
 889               		.loc 1 103 0
 890 00f0 85E0      		ldi r24,5
 891 00f2 C816      		cp r12,r24
 892 00f4 D104      		cpc r13,__zero_reg__
 893 00f6 04F0      		brlt .L46
 894               	.LVL84:
 895               	.L63:
 104:main.cpp      **** 		{
 105:main.cpp      **** 			OCR0=0;
 896               		.loc 1 105 0
 897 00f8 1CBE      		out 0x3c,__zero_reg__
 106:main.cpp      **** 			OCR2=0;
 898               		.loc 1 106 0
 899 00fa 13BC      		out 0x23,__zero_reg__
 107:main.cpp      **** 			PORTA&=~1<<PA0;
 900               		.loc 1 107 0
 901 00fc D898      		cbi 0x1b,0
 108:main.cpp      **** 			PORTB&=~(1<<PB0);
 902               		.loc 1 108 0
 903 00fe C098      		cbi 0x18,0
 109:main.cpp      **** 			continue;
 904               		.loc 1 109 0
 905 0100 00C0      		rjmp .L13
 906               	.LVL85:
 907               	.L61:
 908 0102 C12C      		mov r12,__zero_reg__
 909 0104 D12C      		mov r13,__zero_reg__
 910               	.LVL86:
 911 0106 00C0      		rjmp .L19
 912               	.LVL87:
 913               	.L46:
 914 0108 1701      		movw r2,r14
 915               	.LVL88:
 916               	.L19:
 110:main.cpp      **** 		}
 111:main.cpp      **** 		long double x1 = x2 - 512;
 917               		.loc 1 111 0
 918 010a 20E0      		ldi r18,0
 919 010c 30E0      		ldi r19,0
 920 010e 40E0      		ldi r20,0
 921 0110 54E4      		ldi r21,lo8(68)
 922 0112 C301      		movw r24,r6
 923 0114 B201      		movw r22,r4
 924 0116 0E94 0000 		call __subsf3
 925               	.LVL89:
 926 011a 2B01      		movw r4,r22
 927 011c 3C01      		movw r6,r24
 928               	.LVL90:
 112:main.cpp      **** 		long double y1 = 512 - y2;
 929               		.loc 1 112 0
 930 011e A501      		movw r20,r10
 931 0120 9401      		movw r18,r8
 932 0122 60E0      		ldi r22,0
 933 0124 70E0      		ldi r23,0
 934 0126 80E0      		ldi r24,0
 935 0128 94E4      		ldi r25,lo8(68)
 936 012a 0E94 0000 		call __subsf3
 937               	.LVL91:
 938 012e 4B01      		movw r8,r22
 939 0130 5C01      		movw r10,r24
 940               	.LVL92:
 113:main.cpp      **** 		/*if(x1>-20&&x1<20&&y1>490)
 114:main.cpp      **** 		{
 115:main.cpp      **** 			x1=512;
 116:main.cpp      **** 			y1=0;
 117:main.cpp      **** 		}
 118:main.cpp      **** 		if(x1>-20&&x1<20&&y1<-490)
 119:main.cpp      **** 		{
 120:main.cpp      **** 			x1=-512;
 121:main.cpp      **** 			y1=0;
 122:main.cpp      **** 		}
 123:main.cpp      **** 		if(y1>-20&&y1<20&&x1>490)
 124:main.cpp      **** 		{
 125:main.cpp      **** 			x1=512;
 126:main.cpp      **** 			y1=0;
 127:main.cpp      **** 		}
 128:main.cpp      **** 		if(y1>-20&&y1<20&&x1<-490)
 129:main.cpp      **** 		{
 130:main.cpp      **** 			x1=-512;
 131:main.cpp      **** 			y1=0;
 132:main.cpp      **** 		}*/
 133:main.cpp      **** 		if(y1/x1>=12.8&&y1/x1<=-12.8)
 941               		.loc 1 133 0
 942 0132 A301      		movw r20,r6
 943 0134 9201      		movw r18,r4
 944 0136 0E94 0000 		call __divsf3
 945               	.LVL93:
 946 013a 6987      		std Y+9,r22
 947 013c 7A87      		std Y+10,r23
 948 013e 8B87      		std Y+11,r24
 949 0140 9C87      		std Y+12,r25
 950 0142 2DEC      		ldi r18,lo8(-51)
 951 0144 3CEC      		ldi r19,lo8(-52)
 952 0146 4CE4      		ldi r20,lo8(76)
 953 0148 51E4      		ldi r21,lo8(65)
 954 014a 0E94 0000 		call __gesf2
 955               	.LVL94:
 956 014e 87FD      		sbrc r24,7
 957 0150 00C0      		rjmp .L21
 958               		.loc 1 133 0 is_stmt 0 discriminator 1
 959 0152 2DEC      		ldi r18,lo8(-51)
 960 0154 3CEC      		ldi r19,lo8(-52)
 961 0156 4CE4      		ldi r20,lo8(76)
 962 0158 51EC      		ldi r21,lo8(-63)
 963 015a 6985      		ldd r22,Y+9
 964 015c 7A85      		ldd r23,Y+10
 965 015e 8B85      		ldd r24,Y+11
 966 0160 9C85      		ldd r25,Y+12
 967 0162 0E94 0000 		call __lesf2
 968               	.LVL95:
 969 0166 1816      		cp __zero_reg__,r24
 970 0168 04F0      		brlt .L21
 134:main.cpp      **** 		x1=0;
 971               		.loc 1 134 0 is_stmt 1
 972 016a 412C      		mov r4,__zero_reg__
 973 016c 512C      		mov r5,__zero_reg__
 974 016e 3201      		movw r6,r4
 975               	.LVL96:
 976               	.L21:
 135:main.cpp      **** 		if(y1/x1<=0.390625&&y1/x1>=-0.390625)
 977               		.loc 1 135 0
 978 0170 A301      		movw r20,r6
 979 0172 9201      		movw r18,r4
 980 0174 C501      		movw r24,r10
 981 0176 B401      		movw r22,r8
 982 0178 0E94 0000 		call __divsf3
 983               	.LVL97:
 984 017c 6987      		std Y+9,r22
 985 017e 7A87      		std Y+10,r23
 986 0180 8B87      		std Y+11,r24
 987 0182 9C87      		std Y+12,r25
 988 0184 20E0      		ldi r18,0
 989 0186 30E0      		ldi r19,0
 990 0188 48EC      		ldi r20,lo8(-56)
 991 018a 5EE3      		ldi r21,lo8(62)
 992 018c 0E94 0000 		call __lesf2
 993               	.LVL98:
 994 0190 1816      		cp __zero_reg__,r24
 995 0192 04F0      		brlt .L24
 996               		.loc 1 135 0 is_stmt 0 discriminator 1
 997 0194 20E0      		ldi r18,0
 998 0196 30E0      		ldi r19,0
 999 0198 48EC      		ldi r20,lo8(-56)
 1000 019a 5EEB      		ldi r21,lo8(-66)
 1001 019c 6985      		ldd r22,Y+9
 1002 019e 7A85      		ldd r23,Y+10
 1003 01a0 8B85      		ldd r24,Y+11
 1004 01a2 9C85      		ldd r25,Y+12
 1005 01a4 0E94 0000 		call __gesf2
 1006               	.LVL99:
 1007 01a8 87FD      		sbrc r24,7
 1008 01aa 00C0      		rjmp .L24
 136:main.cpp      **** 		y1=0;
 1009               		.loc 1 136 0 is_stmt 1
 1010 01ac 812C      		mov r8,__zero_reg__
 1011 01ae 912C      		mov r9,__zero_reg__
 1012 01b0 5401      		movw r10,r8
 1013               	.LVL100:
 1014               	.L24:
 137:main.cpp      **** 		x1=map(x1,-512,512,-1,1);
 138:main.cpp      **** 		y1=map(y1,-512,512,-1,1);
 139:main.cpp      **** 		long double xans,yans;
 140:main.cpp      **** 		ellipticalSquareToDisc(x1, y1, xans, yans);
 1015               		.loc 1 140 0
 1016 01b2 20E0      		ldi r18,0
 1017 01b4 30E0      		ldi r19,0
 1018 01b6 40E0      		ldi r20,0
 1019 01b8 54E4      		ldi r21,lo8(68)
 1020 01ba C501      		movw r24,r10
 1021 01bc B401      		movw r22,r8
 1022 01be 0E94 0000 		call __addsf3
 1023               	.LVL101:
 1024 01c2 9B01      		movw r18,r22
 1025 01c4 AC01      		movw r20,r24
 1026 01c6 0E94 0000 		call __addsf3
 1027               	.LVL102:
 1028 01ca 20E0      		ldi r18,0
 1029 01cc 30E0      		ldi r19,0
 1030 01ce 40E8      		ldi r20,lo8(-128)
 1031 01d0 5AE3      		ldi r21,lo8(58)
 1032 01d2 0E94 0000 		call __mulsf3
 1033               	.LVL103:
 1034 01d6 20E0      		ldi r18,0
 1035 01d8 30E0      		ldi r19,0
 1036 01da 40E8      		ldi r20,lo8(-128)
 1037 01dc 5FE3      		ldi r21,lo8(63)
 1038 01de 0E94 0000 		call __subsf3
 1039               	.LVL104:
 1040 01e2 4B01      		movw r8,r22
 1041 01e4 5C01      		movw r10,r24
 1042 01e6 20E0      		ldi r18,0
 1043 01e8 30E0      		ldi r19,0
 1044 01ea 40E0      		ldi r20,0
 1045 01ec 54E4      		ldi r21,lo8(68)
 1046 01ee C301      		movw r24,r6
 1047 01f0 B201      		movw r22,r4
 1048 01f2 0E94 0000 		call __addsf3
 1049               	.LVL105:
 1050 01f6 9B01      		movw r18,r22
 1051 01f8 AC01      		movw r20,r24
 1052 01fa 0E94 0000 		call __addsf3
 1053               	.LVL106:
 1054 01fe 20E0      		ldi r18,0
 1055 0200 30E0      		ldi r19,0
 1056 0202 40E8      		ldi r20,lo8(-128)
 1057 0204 5AE3      		ldi r21,lo8(58)
 1058 0206 0E94 0000 		call __mulsf3
 1059               	.LVL107:
 1060 020a 20E0      		ldi r18,0
 1061 020c 30E0      		ldi r19,0
 1062 020e 40E8      		ldi r20,lo8(-128)
 1063 0210 5FE3      		ldi r21,lo8(63)
 1064 0212 0E94 0000 		call __subsf3
 1065               	.LVL108:
 1066 0216 9E01      		movw r18,r28
 1067 0218 2F5F      		subi r18,-1
 1068 021a 3F4F      		sbci r19,-1
 1069 021c 7901      		movw r14,r18
 1070 021e 8E01      		movw r16,r28
 1071               	.LVL109:
 1072 0220 0B5F      		subi r16,-5
 1073 0222 1F4F      		sbci r17,-1
 1074 0224 A501      		movw r20,r10
 1075 0226 9401      		movw r18,r8
 1076 0228 0E94 0000 		call _Z22ellipticalSquareToDisceeReS_
 1077               	.LVL110:
 141:main.cpp      **** 		long double x = (xans * 0.707) + (yans * 0.707);
 1078               		.loc 1 141 0
 1079 022c 4D80      		ldd r4,Y+5
 1080 022e 5E80      		ldd r5,Y+6
 1081 0230 6F80      		ldd r6,Y+7
 1082 0232 7884      		ldd r7,Y+8
 1083 0234 24EF      		ldi r18,lo8(-12)
 1084 0236 3DEF      		ldi r19,lo8(-3)
 1085 0238 44E3      		ldi r20,lo8(52)
 1086 023a 5FE3      		ldi r21,lo8(63)
 1087 023c 6981      		ldd r22,Y+1
 1088 023e 7A81      		ldd r23,Y+2
 1089 0240 8B81      		ldd r24,Y+3
 1090 0242 9C81      		ldd r25,Y+4
 1091 0244 0E94 0000 		call __mulsf3
 1092               	.LVL111:
 1093 0248 4B01      		movw r8,r22
 1094 024a 5C01      		movw r10,r24
 1095               	.LVL112:
 142:main.cpp      **** 		long double y = (-xans * 0.707) + (yans * 0.707);
 143:main.cpp      **** 		ellipticalDiscToSquare(x,y,xans,yans);
 1096               		.loc 1 143 0
 1097 024c C301      		movw r24,r6
 1098 024e B201      		movw r22,r4
 1099 0250 9058      		subi r25,0x80
 1100 0252 24EF      		ldi r18,lo8(-12)
 1101 0254 3DEF      		ldi r19,lo8(-3)
 1102 0256 44E3      		ldi r20,lo8(52)
 1103 0258 5FE3      		ldi r21,lo8(63)
 1104 025a 0E94 0000 		call __mulsf3
 1105               	.LVL113:
 1106 025e A501      		movw r20,r10
 1107 0260 9401      		movw r18,r8
 1108 0262 0E94 0000 		call __addsf3
 1109               	.LVL114:
 1110 0266 6987      		std Y+9,r22
 1111 0268 7A87      		std Y+10,r23
 1112 026a 8B87      		std Y+11,r24
 1113 026c 9C87      		std Y+12,r25
 1114 026e 24EF      		ldi r18,lo8(-12)
 1115 0270 3DEF      		ldi r19,lo8(-3)
 1116 0272 44E3      		ldi r20,lo8(52)
 1117 0274 5FE3      		ldi r21,lo8(63)
 1118 0276 C301      		movw r24,r6
 1119 0278 B201      		movw r22,r4
 1120 027a 0E94 0000 		call __mulsf3
 1121               	.LVL115:
 1122 027e A501      		movw r20,r10
 1123 0280 9401      		movw r18,r8
 1124 0282 0E94 0000 		call __addsf3
 1125               	.LVL116:
 1126 0286 2985      		ldd r18,Y+9
 1127 0288 3A85      		ldd r19,Y+10
 1128 028a 4B85      		ldd r20,Y+11
 1129 028c 5C85      		ldd r21,Y+12
 1130 028e 0E94 0000 		call _Z22ellipticalDiscToSquareeeReS_
 1131               	.LVL117:
 1132               	.LBB23:
 1133               	.LBB24:
  23:main.cpp      **** }
 1134               		.loc 1 23 0
 1135 0292 21E1      		ldi r18,lo8(17)
 1136 0294 34EC      		ldi r19,lo8(-60)
 1137 0296 4DE7      		ldi r20,lo8(125)
 1138 0298 5FE3      		ldi r21,lo8(63)
 1139 029a 6D81      		ldd r22,Y+5
 1140 029c 7E81      		ldd r23,Y+6
 1141 029e 8F81      		ldd r24,Y+7
 1142 02a0 9885      		ldd r25,Y+8
 1143 02a2 0E94 0000 		call __addsf3
 1144               	.LVL118:
 1145 02a6 20E0      		ldi r18,0
 1146 02a8 30E0      		ldi r19,0
 1147 02aa 4FEF      		ldi r20,lo8(-1)
 1148 02ac 53E4      		ldi r21,lo8(67)
 1149 02ae 0E94 0000 		call __mulsf3
 1150               	.LVL119:
 1151 02b2 21E1      		ldi r18,lo8(17)
 1152 02b4 34EC      		ldi r19,lo8(-60)
 1153 02b6 4DEF      		ldi r20,lo8(-3)
 1154 02b8 5FE3      		ldi r21,lo8(63)
 1155 02ba 0E94 0000 		call __divsf3
 1156               	.LVL120:
 1157 02be 20E0      		ldi r18,0
 1158 02c0 30E0      		ldi r19,0
 1159 02c2 4FE7      		ldi r20,lo8(127)
 1160 02c4 53E4      		ldi r21,lo8(67)
 1161 02c6 0E94 0000 		call __subsf3
 1162               	.LVL121:
 1163 02ca 2B01      		movw r4,r22
 1164 02cc 3C01      		movw r6,r24
 1165               	.LVL122:
 1166               	.LBE24:
 1167               	.LBE23:
 144:main.cpp      **** 		long double x3=map(xans,-0.991273,0.991273,-255,255);
 145:main.cpp      **** 		long double y3=map(yans,-0.991273,0.991273,-255,255)+50;
 1168               		.loc 1 145 0
 1169 02ce 21E1      		ldi r18,lo8(17)
 1170 02d0 34EC      		ldi r19,lo8(-60)
 1171 02d2 4DE7      		ldi r20,lo8(125)
 1172 02d4 5FE3      		ldi r21,lo8(63)
 1173 02d6 6981      		ldd r22,Y+1
 1174 02d8 7A81      		ldd r23,Y+2
 1175 02da 8B81      		ldd r24,Y+3
 1176 02dc 9C81      		ldd r25,Y+4
 1177 02de 0E94 0000 		call __addsf3
 1178               	.LVL123:
 1179 02e2 20E0      		ldi r18,0
 1180 02e4 30E0      		ldi r19,0
 1181 02e6 4FEF      		ldi r20,lo8(-1)
 1182 02e8 53E4      		ldi r21,lo8(67)
 1183 02ea 0E94 0000 		call __mulsf3
 1184               	.LVL124:
 1185 02ee 21E1      		ldi r18,lo8(17)
 1186 02f0 34EC      		ldi r19,lo8(-60)
 1187 02f2 4DEF      		ldi r20,lo8(-3)
 1188 02f4 5FE3      		ldi r21,lo8(63)
 1189 02f6 0E94 0000 		call __divsf3
 1190               	.LVL125:
 1191 02fa 20E0      		ldi r18,0
 1192 02fc 30E0      		ldi r19,0
 1193 02fe 4FE7      		ldi r20,lo8(127)
 1194 0300 53E4      		ldi r21,lo8(67)
 1195 0302 0E94 0000 		call __subsf3
 1196               	.LVL126:
 1197 0306 20E0      		ldi r18,0
 1198 0308 30E0      		ldi r19,0
 1199 030a 48E4      		ldi r20,lo8(72)
 1200 030c 52E4      		ldi r21,lo8(66)
 1201 030e 0E94 0000 		call __addsf3
 1202               	.LVL127:
 1203 0312 4B01      		movw r8,r22
 1204 0314 5C01      		movw r10,r24
 1205               	.LVL128:
 146:main.cpp      **** 		if(x3>=220)
 1206               		.loc 1 146 0
 1207 0316 20E0      		ldi r18,0
 1208 0318 30E0      		ldi r19,0
 1209 031a 4CE5      		ldi r20,lo8(92)
 1210 031c 53E4      		ldi r21,lo8(67)
 1211 031e C301      		movw r24,r6
 1212 0320 B201      		movw r22,r4
 1213 0322 0E94 0000 		call __gesf2
 1214               	.LVL129:
 147:main.cpp      **** 		x3=255;
 148:main.cpp      **** 		if(y3>=220)
 1215               		.loc 1 148 0
 1216 0326 20E0      		ldi r18,0
 1217 0328 30E0      		ldi r19,0
 1218 032a 4CE5      		ldi r20,lo8(92)
 1219 032c 53E4      		ldi r21,lo8(67)
 146:main.cpp      **** 		if(x3>=220)
 1220               		.loc 1 146 0
 1221 032e 87FF      		sbrs r24,7
 1222 0330 00C0      		rjmp .L27
 1223               	.LVL130:
 1224               		.loc 1 148 0
 1225 0332 C501      		movw r24,r10
 1226 0334 B401      		movw r22,r8
 1227 0336 0E94 0000 		call __gesf2
 1228               	.LVL131:
 1229 033a 87FF      		sbrs r24,7
 1230 033c 00C0      		rjmp .L28
 1231               	.LVL132:
 1232               	.L43:
 149:main.cpp      **** 		y3=255;
 150:main.cpp      **** 		if(x3<20&&x3>-20)
 1233               		.loc 1 150 0
 1234 033e 20E0      		ldi r18,0
 1235 0340 30E0      		ldi r19,0
 1236 0342 40EA      		ldi r20,lo8(-96)
 1237 0344 51E4      		ldi r21,lo8(65)
 1238 0346 C301      		movw r24,r6
 1239 0348 B201      		movw r22,r4
 1240 034a 0E94 0000 		call __ltsf2
 1241               	.LVL133:
 1242 034e 87FF      		sbrs r24,7
 1243 0350 00C0      		rjmp .L29
 1244               		.loc 1 150 0 is_stmt 0 discriminator 1
 1245 0352 20E0      		ldi r18,0
 1246 0354 30E0      		ldi r19,0
 1247 0356 40EA      		ldi r20,lo8(-96)
 1248 0358 51EC      		ldi r21,lo8(-63)
 1249 035a C301      		movw r24,r6
 1250 035c B201      		movw r22,r4
 1251 035e 0E94 0000 		call __gtsf2
 1252               	.LVL134:
 1253 0362 1816      		cp __zero_reg__,r24
 1254 0364 04F0      		brlt .L31
 1255               	.LVL135:
 1256               	.L29:
 151:main.cpp      **** 		x3=0;
 152:main.cpp      **** 
 153:main.cpp      **** 		if(y3<20&&y3>-20)
 1257               		.loc 1 153 0 is_stmt 1
 1258 0366 20E0      		ldi r18,0
 1259 0368 30E0      		ldi r19,0
 1260 036a 40EA      		ldi r20,lo8(-96)
 1261 036c 51E4      		ldi r21,lo8(65)
 1262 036e C501      		movw r24,r10
 1263 0370 B401      		movw r22,r8
 1264 0372 0E94 0000 		call __ltsf2
 1265               	.LVL136:
 1266 0376 87FF      		sbrs r24,7
 1267 0378 00C0      		rjmp .L32
 1268               		.loc 1 153 0 is_stmt 0 discriminator 1
 1269 037a 20E0      		ldi r18,0
 1270 037c 30E0      		ldi r19,0
 1271 037e 40EA      		ldi r20,lo8(-96)
 1272 0380 51EC      		ldi r21,lo8(-63)
 1273 0382 C501      		movw r24,r10
 1274 0384 B401      		movw r22,r8
 1275 0386 0E94 0000 		call __gtsf2
 1276               	.LVL137:
 1277 038a 1816      		cp __zero_reg__,r24
 1278 038c 04F4      		brge .L32
 154:main.cpp      **** 		y3=0;
 1279               		.loc 1 154 0 is_stmt 1
 1280 038e 812C      		mov r8,__zero_reg__
 1281 0390 912C      		mov r9,__zero_reg__
 1282 0392 5401      		movw r10,r8
 1283 0394 00C0      		rjmp .L32
 1284               	.LVL138:
 1285               	.L27:
 148:main.cpp      **** 		y3=255;
 1286               		.loc 1 148 0
 1287 0396 C501      		movw r24,r10
 1288 0398 B401      		movw r22,r8
 1289 039a 0E94 0000 		call __gesf2
 1290               	.LVL139:
 147:main.cpp      **** 		if(y3>=220)
 1291               		.loc 1 147 0
 1292 039e 412C      		mov r4,__zero_reg__
 1293 03a0 512C      		mov r5,__zero_reg__
 1294 03a2 2FE7      		ldi r18,lo8(127)
 1295 03a4 622E      		mov r6,r18
 1296 03a6 23E4      		ldi r18,lo8(67)
 1297 03a8 722E      		mov r7,r18
 148:main.cpp      **** 		y3=255;
 1298               		.loc 1 148 0
 1299 03aa 87FD      		sbrc r24,7
 1300 03ac 00C0      		rjmp .L43
 149:main.cpp      **** 		if(x3<20&&x3>-20)
 1301               		.loc 1 149 0
 1302 03ae 5301      		movw r10,r6
 1303 03b0 4201      		movw r8,r4
 1304               	.LVL140:
 1305               	.L32:
 155:main.cpp      **** 		if(x3>0)
 1306               		.loc 1 155 0
 1307 03b2 20E0      		ldi r18,0
 1308 03b4 30E0      		ldi r19,0
 1309 03b6 A901      		movw r20,r18
 1310 03b8 C301      		movw r24,r6
 1311 03ba B201      		movw r22,r4
 1312 03bc 0E94 0000 		call __gtsf2
 1313               	.LVL141:
 1314 03c0 1816      		cp __zero_reg__,r24
 1315 03c2 04F4      		brge .L34
 156:main.cpp      **** 		{
 157:main.cpp      **** 			OCR0=(int)x3;
 1316               		.loc 1 157 0
 1317 03c4 C301      		movw r24,r6
 1318 03c6 B201      		movw r22,r4
 1319 03c8 0E94 0000 		call __fixsfsi
 1320               	.LVL142:
 1321 03cc 6CBF      		out 0x3c,r22
 158:main.cpp      **** 			PORTB|=1<<PB0;
 1322               		.loc 1 158 0
 1323 03ce C09A      		sbi 0x18,0
 1324 03d0 00C0      		rjmp .L36
 1325               	.L31:
 1326               	.LVL143:
 153:main.cpp      **** 		y3=0;
 1327               		.loc 1 153 0
 1328 03d2 20E0      		ldi r18,0
 1329 03d4 30E0      		ldi r19,0
 1330 03d6 40EA      		ldi r20,lo8(-96)
 1331 03d8 51E4      		ldi r21,lo8(65)
 1332 03da C501      		movw r24,r10
 1333 03dc B401      		movw r22,r8
 1334 03de 0E94 0000 		call __ltsf2
 1335               	.LVL144:
 1336 03e2 87FF      		sbrs r24,7
 1337 03e4 00C0      		rjmp .L64
 1338 03e6 20E0      		ldi r18,0
 1339 03e8 30E0      		ldi r19,0
 1340 03ea 40EA      		ldi r20,lo8(-96)
 1341 03ec 51EC      		ldi r21,lo8(-63)
 1342 03ee C501      		movw r24,r10
 1343 03f0 B401      		movw r22,r8
 1344 03f2 0E94 0000 		call __gtsf2
 1345               	.LVL145:
 1346 03f6 1816      		cp __zero_reg__,r24
 1347 03f8 04F0      		brlt .+2
 1348 03fa 00C0      		rjmp .L65
 154:main.cpp      **** 		if(x3>0)
 1349               		.loc 1 154 0
 1350 03fc 812C      		mov r8,__zero_reg__
 1351 03fe 912C      		mov r9,__zero_reg__
 1352 0400 5401      		movw r10,r8
 1353               	.LVL146:
 151:main.cpp      **** 
 1354               		.loc 1 151 0
 1355 0402 2401      		movw r4,r8
 1356 0404 3501      		movw r6,r10
 1357               	.LVL147:
 1358               	.L34:
 159:main.cpp      **** 		}
 160:main.cpp      **** 		else
 161:main.cpp      **** 		{
 162:main.cpp      **** 			OCR0=-(int)x3;
 1359               		.loc 1 162 0
 1360 0406 C301      		movw r24,r6
 1361 0408 B201      		movw r22,r4
 1362 040a 0E94 0000 		call __fixsfsi
 1363               	.LVL148:
 1364 040e 6195      		neg r22
 1365 0410 6CBF      		out 0x3c,r22
 163:main.cpp      **** 			PORTB&=~(1<<PB0);
 1366               		.loc 1 163 0
 1367 0412 C098      		cbi 0x18,0
 1368               	.L36:
 164:main.cpp      **** 		}
 165:main.cpp      **** 		if(y3>0)
 1369               		.loc 1 165 0
 1370 0414 20E0      		ldi r18,0
 1371 0416 30E0      		ldi r19,0
 1372 0418 A901      		movw r20,r18
 1373 041a C501      		movw r24,r10
 1374 041c B401      		movw r22,r8
 1375 041e 0E94 0000 		call __gtsf2
 1376               	.LVL149:
 1377 0422 1816      		cp __zero_reg__,r24
 1378 0424 04F4      		brge .L62
 166:main.cpp      **** 		{
 167:main.cpp      **** 			OCR2=(int)y3;
 1379               		.loc 1 167 0
 1380 0426 C501      		movw r24,r10
 1381 0428 B401      		movw r22,r8
 1382 042a 0E94 0000 		call __fixsfsi
 1383               	.LVL150:
 1384 042e 63BD      		out 0x23,r22
 168:main.cpp      **** 			PORTA|=1<<PA0;
 1385               		.loc 1 168 0
 1386 0430 D89A      		sbi 0x1b,0
 1387 0432 00C0      		rjmp .L39
 1388               	.L62:
 169:main.cpp      **** 		}
 170:main.cpp      **** 		else
 171:main.cpp      **** 		{
 172:main.cpp      **** 			OCR2=-(int)y3;
 1389               		.loc 1 172 0
 1390 0434 C501      		movw r24,r10
 1391 0436 B401      		movw r22,r8
 1392 0438 0E94 0000 		call __fixsfsi
 1393               	.LVL151:
 1394 043c 6195      		neg r22
 1395 043e 63BD      		out 0x23,r22
 173:main.cpp      **** 			PORTA&=~1<<PA0;
 1396               		.loc 1 173 0
 1397 0440 D898      		cbi 0x1b,0
 1398               	.L39:
 1399 0442 7101      		movw r14,r2
 1400 0444 00C0      		rjmp .L13
 1401               	.LVL152:
 1402               	.L28:
 150:main.cpp      **** 		x3=0;
 1403               		.loc 1 150 0
 1404 0446 20E0      		ldi r18,0
 1405 0448 30E0      		ldi r19,0
 1406 044a 40EA      		ldi r20,lo8(-96)
 1407 044c 51E4      		ldi r21,lo8(65)
 1408 044e C301      		movw r24,r6
 1409 0450 B201      		movw r22,r4
 1410 0452 0E94 0000 		call __ltsf2
 1411               	.LVL153:
 1412 0456 87FD      		sbrc r24,7
 1413 0458 00C0      		rjmp .L41
 149:main.cpp      **** 		if(x3<20&&x3>-20)
 1414               		.loc 1 149 0
 1415 045a 812C      		mov r8,__zero_reg__
 1416 045c 912C      		mov r9,__zero_reg__
 1417 045e 3FE7      		ldi r19,lo8(127)
 1418 0460 A32E      		mov r10,r19
 1419 0462 33E4      		ldi r19,lo8(67)
 1420 0464 B32E      		mov r11,r19
 1421 0466 00C0      		rjmp .L32
 1422               	.L41:
 150:main.cpp      **** 		x3=0;
 1423               		.loc 1 150 0
 1424 0468 20E0      		ldi r18,0
 1425 046a 30E0      		ldi r19,0
 1426 046c 40EA      		ldi r20,lo8(-96)
 1427 046e 51EC      		ldi r21,lo8(-63)
 1428 0470 C301      		movw r24,r6
 1429 0472 B201      		movw r22,r4
 1430 0474 0E94 0000 		call __gtsf2
 1431               	.LVL154:
 149:main.cpp      **** 		if(x3<20&&x3>-20)
 1432               		.loc 1 149 0
 1433 0478 812C      		mov r8,__zero_reg__
 1434 047a 912C      		mov r9,__zero_reg__
 1435 047c 9FE7      		ldi r25,lo8(127)
 1436 047e A92E      		mov r10,r25
 1437 0480 93E4      		ldi r25,lo8(67)
 1438 0482 B92E      		mov r11,r25
 150:main.cpp      **** 		x3=0;
 1439               		.loc 1 150 0
 1440 0484 1816      		cp __zero_reg__,r24
 1441 0486 04F0      		brlt .+2
 1442 0488 00C0      		rjmp .L29
 1443               	.LVL155:
 1444               	.L64:
 151:main.cpp      **** 
 1445               		.loc 1 151 0
 1446 048a 412C      		mov r4,__zero_reg__
 1447 048c 512C      		mov r5,__zero_reg__
 1448 048e 3201      		movw r6,r4
 1449 0490 00C0      		rjmp .L34
 1450               	.LVL156:
 1451               	.L65:
 1452 0492 412C      		mov r4,__zero_reg__
 1453 0494 512C      		mov r5,__zero_reg__
 1454 0496 3201      		movw r6,r4
 1455 0498 00C0      		rjmp .L32
 1456               	.LBE15:
 1457               		.cfi_endproc
 1458               	.LFE7:
 1460               		.text
 1461               	.Letext0:
 1462               		.file 2 "/usr/lib/avr/include/math.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc2G9Ny3.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc2G9Ny3.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc2G9Ny3.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc2G9Ny3.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc2G9Ny3.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc2G9Ny3.s:12     .text:0000000000000000 _Z7Receivev
     /tmp/cc2G9Ny3.s:35     .text:000000000000000a _Z8Transmith
     /tmp/cc2G9Ny3.s:60     .text:0000000000000012 _Z3mapeeeee
     /tmp/cc2G9Ny3.s:219    .text:00000000000000cc _Z22ellipticalSquareToDisceeReS_
     /tmp/cc2G9Ny3.s:369    .text:0000000000000182 _Z22ellipticalDiscToSquareeeReS_
     /tmp/cc2G9Ny3.s:704    .text.startup:0000000000000000 main

UNDEFINED SYMBOLS
__subsf3
__mulsf3
__divsf3
__addsf3
sqrt
__floatsisf
__eqsf2
__gesf2
__lesf2
__ltsf2
__gtsf2
__fixsfsi
