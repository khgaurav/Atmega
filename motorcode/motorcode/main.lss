
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c08  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000c08  00000c7c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  00000c7c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c90  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000ccc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009dd  00000000  00000000  00000cf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006e1  00000000  00000000  000016d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001df  00000000  00000000  00001db2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001fc  00000000  00000000  00001f94  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000476  00000000  00000000  00002190  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000827  00000000  00000000  00002606  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00002e2d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 24 02 	call	0x448	; 0x448 <main>
  64:	0c 94 02 06 	jmp	0xc04	; 0xc04 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <_Z7Receivev>:
#define FOSC 1000000// Clock Speed
#define BAUD 9600
#define ubbr_value FOSC/16/BAUD-1
int Receive()
{
	while (! (UCSRA & (1 << RXC)) );
  6c:	5f 9b       	sbis	0x0b, 7	; 11
  6e:	fe cf       	rjmp	.-4      	; 0x6c <_Z7Receivev>
	return UDR;
  70:	8c b1       	in	r24, 0x0c	; 12
}
  72:	90 e0       	ldi	r25, 0x00	; 0
  74:	08 95       	ret

00000076 <_Z8Transmith>:

void Transmit(unsigned char data)
{
	while (! (UCSRA & (1 << UDRE)) );
  76:	5d 9b       	sbis	0x0b, 5	; 11
  78:	fe cf       	rjmp	.-4      	; 0x76 <_Z8Transmith>
	UDR = data;
  7a:	8c b9       	out	0x0c, r24	; 12
  7c:	08 95       	ret

0000007e <_Z3maplllll>:

}
long map(long x, long in_min, long in_max, long out_min, long out_max)
{
  7e:	4f 92       	push	r4
  80:	5f 92       	push	r5
  82:	6f 92       	push	r6
  84:	7f 92       	push	r7
  86:	af 92       	push	r10
  88:	bf 92       	push	r11
  8a:	cf 92       	push	r12
  8c:	df 92       	push	r13
  8e:	ef 92       	push	r14
  90:	ff 92       	push	r15
  92:	0f 93       	push	r16
  94:	1f 93       	push	r17
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	29 01       	movw	r4, r18
  a0:	3a 01       	movw	r6, r20
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  a2:	9b 01       	movw	r18, r22
  a4:	ac 01       	movw	r20, r24
  a6:	24 19       	sub	r18, r4
  a8:	35 09       	sbc	r19, r5
  aa:	46 09       	sbc	r20, r6
  ac:	57 09       	sbc	r21, r7
  ae:	89 89       	ldd	r24, Y+17	; 0x11
  b0:	9a 89       	ldd	r25, Y+18	; 0x12
  b2:	ab 89       	ldd	r26, Y+19	; 0x13
  b4:	bc 89       	ldd	r27, Y+20	; 0x14
  b6:	bc 01       	movw	r22, r24
  b8:	cd 01       	movw	r24, r26
  ba:	6a 19       	sub	r22, r10
  bc:	7b 09       	sbc	r23, r11
  be:	8c 09       	sbc	r24, r12
  c0:	9d 09       	sbc	r25, r13
  c2:	0e 94 97 05 	call	0xb2e	; 0xb2e <__mulsi3>
  c6:	a8 01       	movw	r20, r16
  c8:	97 01       	movw	r18, r14
  ca:	24 19       	sub	r18, r4
  cc:	35 09       	sbc	r19, r5
  ce:	46 09       	sbc	r20, r6
  d0:	57 09       	sbc	r21, r7
  d2:	0e 94 a7 05 	call	0xb4e	; 0xb4e <__divmodsi4>
  d6:	ca 01       	movw	r24, r20
  d8:	b9 01       	movw	r22, r18
  da:	6a 0d       	add	r22, r10
  dc:	7b 1d       	adc	r23, r11
  de:	8c 1d       	adc	r24, r12
  e0:	9d 1d       	adc	r25, r13
}
  e2:	df 91       	pop	r29
  e4:	cf 91       	pop	r28
  e6:	1f 91       	pop	r17
  e8:	0f 91       	pop	r16
  ea:	ff 90       	pop	r15
  ec:	ef 90       	pop	r14
  ee:	df 90       	pop	r13
  f0:	cf 90       	pop	r12
  f2:	bf 90       	pop	r11
  f4:	af 90       	pop	r10
  f6:	7f 90       	pop	r7
  f8:	6f 90       	pop	r6
  fa:	5f 90       	pop	r5
  fc:	4f 90       	pop	r4
  fe:	08 95       	ret

00000100 <_Z3mapddddd>:
double map(double x, double in_min, double in_max, double out_min, double out_max)
{
 100:	4f 92       	push	r4
 102:	5f 92       	push	r5
 104:	6f 92       	push	r6
 106:	7f 92       	push	r7
 108:	af 92       	push	r10
 10a:	bf 92       	push	r11
 10c:	cf 92       	push	r12
 10e:	df 92       	push	r13
 110:	ef 92       	push	r14
 112:	ff 92       	push	r15
 114:	0f 93       	push	r16
 116:	1f 93       	push	r17
 118:	cf 93       	push	r28
 11a:	df 93       	push	r29
 11c:	cd b7       	in	r28, 0x3d	; 61
 11e:	de b7       	in	r29, 0x3e	; 62
 120:	28 97       	sbiw	r28, 0x08	; 8
 122:	0f b6       	in	r0, 0x3f	; 63
 124:	f8 94       	cli
 126:	de bf       	out	0x3e, r29	; 62
 128:	0f be       	out	0x3f, r0	; 63
 12a:	cd bf       	out	0x3d, r28	; 61
 12c:	29 01       	movw	r4, r18
 12e:	3a 01       	movw	r6, r20
 130:	ed 82       	std	Y+5, r14	; 0x05
 132:	fe 82       	std	Y+6, r15	; 0x06
 134:	0f 83       	std	Y+7, r16	; 0x07
 136:	18 87       	std	Y+8, r17	; 0x08
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 138:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 13c:	69 83       	std	Y+1, r22	; 0x01
 13e:	7a 83       	std	Y+2, r23	; 0x02
 140:	8b 83       	std	Y+3, r24	; 0x03
 142:	9c 83       	std	Y+4, r25	; 0x04
 144:	a6 01       	movw	r20, r12
 146:	95 01       	movw	r18, r10
 148:	69 8d       	ldd	r22, Y+25	; 0x19
 14a:	7a 8d       	ldd	r23, Y+26	; 0x1a
 14c:	8b 8d       	ldd	r24, Y+27	; 0x1b
 14e:	9c 8d       	ldd	r25, Y+28	; 0x1c
 150:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 154:	9b 01       	movw	r18, r22
 156:	ac 01       	movw	r20, r24
 158:	69 81       	ldd	r22, Y+1	; 0x01
 15a:	7a 81       	ldd	r23, Y+2	; 0x02
 15c:	8b 81       	ldd	r24, Y+3	; 0x03
 15e:	9c 81       	ldd	r25, Y+4	; 0x04
 160:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 164:	69 83       	std	Y+1, r22	; 0x01
 166:	7a 83       	std	Y+2, r23	; 0x02
 168:	8b 83       	std	Y+3, r24	; 0x03
 16a:	9c 83       	std	Y+4, r25	; 0x04
 16c:	a3 01       	movw	r20, r6
 16e:	92 01       	movw	r18, r4
 170:	c8 01       	movw	r24, r16
 172:	b7 01       	movw	r22, r14
 174:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 178:	9b 01       	movw	r18, r22
 17a:	ac 01       	movw	r20, r24
 17c:	69 81       	ldd	r22, Y+1	; 0x01
 17e:	7a 81       	ldd	r23, Y+2	; 0x02
 180:	8b 81       	ldd	r24, Y+3	; 0x03
 182:	9c 81       	ldd	r25, Y+4	; 0x04
 184:	0e 94 99 03 	call	0x732	; 0x732 <__divsf3>
 188:	a6 01       	movw	r20, r12
 18a:	95 01       	movw	r18, r10
 18c:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
}
 190:	28 96       	adiw	r28, 0x08	; 8
 192:	0f b6       	in	r0, 0x3f	; 63
 194:	f8 94       	cli
 196:	de bf       	out	0x3e, r29	; 62
 198:	0f be       	out	0x3f, r0	; 63
 19a:	cd bf       	out	0x3d, r28	; 61
 19c:	df 91       	pop	r29
 19e:	cf 91       	pop	r28
 1a0:	1f 91       	pop	r17
 1a2:	0f 91       	pop	r16
 1a4:	ff 90       	pop	r15
 1a6:	ef 90       	pop	r14
 1a8:	df 90       	pop	r13
 1aa:	cf 90       	pop	r12
 1ac:	bf 90       	pop	r11
 1ae:	af 90       	pop	r10
 1b0:	7f 90       	pop	r7
 1b2:	6f 90       	pop	r6
 1b4:	5f 90       	pop	r5
 1b6:	4f 90       	pop	r4
 1b8:	08 95       	ret

000001ba <_Z22ellipticalSquareToDiscddRdS_>:
void ellipticalSquareToDisc(double x, double y, double& u, double& v)
{
 1ba:	4f 92       	push	r4
 1bc:	5f 92       	push	r5
 1be:	6f 92       	push	r6
 1c0:	7f 92       	push	r7
 1c2:	8f 92       	push	r8
 1c4:	9f 92       	push	r9
 1c6:	af 92       	push	r10
 1c8:	bf 92       	push	r11
 1ca:	ef 92       	push	r14
 1cc:	ff 92       	push	r15
 1ce:	0f 93       	push	r16
 1d0:	1f 93       	push	r17
 1d2:	2b 01       	movw	r4, r22
 1d4:	3c 01       	movw	r6, r24
 1d6:	49 01       	movw	r8, r18
 1d8:	5a 01       	movw	r10, r20
    u = x * sqrt(1.0 - y*y/2.0);
 1da:	ca 01       	movw	r24, r20
 1dc:	b9 01       	movw	r22, r18
 1de:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 1e2:	20 e0       	ldi	r18, 0x00	; 0
 1e4:	30 e0       	ldi	r19, 0x00	; 0
 1e6:	40 e0       	ldi	r20, 0x00	; 0
 1e8:	5f e3       	ldi	r21, 0x3F	; 63
 1ea:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 1ee:	9b 01       	movw	r18, r22
 1f0:	ac 01       	movw	r20, r24
 1f2:	60 e0       	ldi	r22, 0x00	; 0
 1f4:	70 e0       	ldi	r23, 0x00	; 0
 1f6:	80 e8       	ldi	r24, 0x80	; 128
 1f8:	9f e3       	ldi	r25, 0x3F	; 63
 1fa:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 1fe:	0e 94 42 05 	call	0xa84	; 0xa84 <sqrt>
 202:	a3 01       	movw	r20, r6
 204:	92 01       	movw	r18, r4
 206:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 20a:	f8 01       	movw	r30, r16
 20c:	60 83       	st	Z, r22
 20e:	71 83       	std	Z+1, r23	; 0x01
 210:	82 83       	std	Z+2, r24	; 0x02
 212:	93 83       	std	Z+3, r25	; 0x03
    v = y * sqrt(1.0 - x*x/2.0);
 214:	a3 01       	movw	r20, r6
 216:	92 01       	movw	r18, r4
 218:	c3 01       	movw	r24, r6
 21a:	b2 01       	movw	r22, r4
 21c:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 220:	20 e0       	ldi	r18, 0x00	; 0
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	40 e0       	ldi	r20, 0x00	; 0
 226:	5f e3       	ldi	r21, 0x3F	; 63
 228:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 22c:	9b 01       	movw	r18, r22
 22e:	ac 01       	movw	r20, r24
 230:	60 e0       	ldi	r22, 0x00	; 0
 232:	70 e0       	ldi	r23, 0x00	; 0
 234:	80 e8       	ldi	r24, 0x80	; 128
 236:	9f e3       	ldi	r25, 0x3F	; 63
 238:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 23c:	0e 94 42 05 	call	0xa84	; 0xa84 <sqrt>
 240:	9b 01       	movw	r18, r22
 242:	ac 01       	movw	r20, r24
 244:	c5 01       	movw	r24, r10
 246:	b4 01       	movw	r22, r8
 248:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 24c:	f7 01       	movw	r30, r14
 24e:	60 83       	st	Z, r22
 250:	71 83       	std	Z+1, r23	; 0x01
 252:	82 83       	std	Z+2, r24	; 0x02
 254:	93 83       	std	Z+3, r25	; 0x03
}
 256:	1f 91       	pop	r17
 258:	0f 91       	pop	r16
 25a:	ff 90       	pop	r15
 25c:	ef 90       	pop	r14
 25e:	bf 90       	pop	r11
 260:	af 90       	pop	r10
 262:	9f 90       	pop	r9
 264:	8f 90       	pop	r8
 266:	7f 90       	pop	r7
 268:	6f 90       	pop	r6
 26a:	5f 90       	pop	r5
 26c:	4f 90       	pop	r4
 26e:	08 95       	ret

00000270 <_Z22ellipticalDiscToSquareddRdS_>:

void ellipticalDiscToSquare(double u, double v, double& x, double& y)
{
 270:	4f 92       	push	r4
 272:	5f 92       	push	r5
 274:	6f 92       	push	r6
 276:	7f 92       	push	r7
 278:	8f 92       	push	r8
 27a:	9f 92       	push	r9
 27c:	af 92       	push	r10
 27e:	bf 92       	push	r11
 280:	cf 92       	push	r12
 282:	df 92       	push	r13
 284:	ef 92       	push	r14
 286:	ff 92       	push	r15
 288:	0f 93       	push	r16
 28a:	1f 93       	push	r17
 28c:	cf 93       	push	r28
 28e:	df 93       	push	r29
 290:	cd b7       	in	r28, 0x3d	; 61
 292:	de b7       	in	r29, 0x3e	; 62
 294:	2e 97       	sbiw	r28, 0x0e	; 14
 296:	0f b6       	in	r0, 0x3f	; 63
 298:	f8 94       	cli
 29a:	de bf       	out	0x3e, r29	; 62
 29c:	0f be       	out	0x3f, r0	; 63
 29e:	cd bf       	out	0x3d, r28	; 61
 2a0:	4b 01       	movw	r8, r22
 2a2:	5c 01       	movw	r10, r24
 2a4:	29 01       	movw	r4, r18
 2a6:	3a 01       	movw	r6, r20
 2a8:	fe 86       	std	Y+14, r15	; 0x0e
 2aa:	ed 86       	std	Y+13, r14	; 0x0d
    double u2 = u * u;
 2ac:	9b 01       	movw	r18, r22
 2ae:	ac 01       	movw	r20, r24
 2b0:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 2b4:	6b 01       	movw	r12, r22
 2b6:	7c 01       	movw	r14, r24
    double v2 = v * v;
 2b8:	a3 01       	movw	r20, r6
 2ba:	92 01       	movw	r18, r4
 2bc:	c3 01       	movw	r24, r6
 2be:	b2 01       	movw	r22, r4
 2c0:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 2c4:	69 83       	std	Y+1, r22	; 0x01
 2c6:	7a 83       	std	Y+2, r23	; 0x02
 2c8:	8b 83       	std	Y+3, r24	; 0x03
 2ca:	9c 83       	std	Y+4, r25	; 0x04
    double twosqrt2 = 2.0 * sqrt(2.0);
    double subtermx = 2.0 + u2 - v2;
 2cc:	20 e0       	ldi	r18, 0x00	; 0
 2ce:	30 e0       	ldi	r19, 0x00	; 0
 2d0:	40 e0       	ldi	r20, 0x00	; 0
 2d2:	50 e4       	ldi	r21, 0x40	; 64
 2d4:	c7 01       	movw	r24, r14
 2d6:	b6 01       	movw	r22, r12
 2d8:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 2dc:	29 81       	ldd	r18, Y+1	; 0x01
 2de:	3a 81       	ldd	r19, Y+2	; 0x02
 2e0:	4b 81       	ldd	r20, Y+3	; 0x03
 2e2:	5c 81       	ldd	r21, Y+4	; 0x04
 2e4:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 2e8:	6d 83       	std	Y+5, r22	; 0x05
 2ea:	7e 83       	std	Y+6, r23	; 0x06
 2ec:	8f 83       	std	Y+7, r24	; 0x07
 2ee:	98 87       	std	Y+8, r25	; 0x08
    double subtermy = 2.0 - u2 + v2;
 2f0:	a7 01       	movw	r20, r14
 2f2:	96 01       	movw	r18, r12
 2f4:	60 e0       	ldi	r22, 0x00	; 0
 2f6:	70 e0       	ldi	r23, 0x00	; 0
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	90 e4       	ldi	r25, 0x40	; 64
 2fc:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 300:	29 81       	ldd	r18, Y+1	; 0x01
 302:	3a 81       	ldd	r19, Y+2	; 0x02
 304:	4b 81       	ldd	r20, Y+3	; 0x03
 306:	5c 81       	ldd	r21, Y+4	; 0x04
 308:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 30c:	6b 01       	movw	r12, r22
 30e:	7c 01       	movw	r14, r24
    double termx1 = subtermx + u * twosqrt2;
 310:	23 ef       	ldi	r18, 0xF3	; 243
 312:	34 e0       	ldi	r19, 0x04	; 4
 314:	45 e3       	ldi	r20, 0x35	; 53
 316:	50 e4       	ldi	r21, 0x40	; 64
 318:	c5 01       	movw	r24, r10
 31a:	b4 01       	movw	r22, r8
 31c:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 320:	4b 01       	movw	r8, r22
 322:	5c 01       	movw	r10, r24
    double termx2 = subtermx - u * twosqrt2;
    double termy1 = subtermy + v * twosqrt2;
 324:	23 ef       	ldi	r18, 0xF3	; 243
 326:	34 e0       	ldi	r19, 0x04	; 4
 328:	45 e3       	ldi	r20, 0x35	; 53
 32a:	50 e4       	ldi	r21, 0x40	; 64
 32c:	c3 01       	movw	r24, r6
 32e:	b2 01       	movw	r22, r4
 330:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 334:	69 83       	std	Y+1, r22	; 0x01
 336:	7a 83       	std	Y+2, r23	; 0x02
 338:	8b 83       	std	Y+3, r24	; 0x03
 33a:	9c 83       	std	Y+4, r25	; 0x04
    double termy2 = subtermy - v * twosqrt2;
    x = 0.5 * sqrt(termx1) - 0.5 * sqrt(termx2);
 33c:	a5 01       	movw	r20, r10
 33e:	94 01       	movw	r18, r8
 340:	6d 81       	ldd	r22, Y+5	; 0x05
 342:	7e 81       	ldd	r23, Y+6	; 0x06
 344:	8f 81       	ldd	r24, Y+7	; 0x07
 346:	98 85       	ldd	r25, Y+8	; 0x08
 348:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 34c:	0e 94 42 05 	call	0xa84	; 0xa84 <sqrt>
 350:	69 87       	std	Y+9, r22	; 0x09
 352:	7a 87       	std	Y+10, r23	; 0x0a
 354:	8b 87       	std	Y+11, r24	; 0x0b
 356:	9c 87       	std	Y+12, r25	; 0x0c
 358:	a5 01       	movw	r20, r10
 35a:	94 01       	movw	r18, r8
 35c:	6d 81       	ldd	r22, Y+5	; 0x05
 35e:	7e 81       	ldd	r23, Y+6	; 0x06
 360:	8f 81       	ldd	r24, Y+7	; 0x07
 362:	98 85       	ldd	r25, Y+8	; 0x08
 364:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 368:	0e 94 42 05 	call	0xa84	; 0xa84 <sqrt>
 36c:	2b 01       	movw	r4, r22
 36e:	3c 01       	movw	r6, r24
 370:	20 e0       	ldi	r18, 0x00	; 0
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	40 e0       	ldi	r20, 0x00	; 0
 376:	5f e3       	ldi	r21, 0x3F	; 63
 378:	69 85       	ldd	r22, Y+9	; 0x09
 37a:	7a 85       	ldd	r23, Y+10	; 0x0a
 37c:	8b 85       	ldd	r24, Y+11	; 0x0b
 37e:	9c 85       	ldd	r25, Y+12	; 0x0c
 380:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 384:	4b 01       	movw	r8, r22
 386:	5c 01       	movw	r10, r24
 388:	20 e0       	ldi	r18, 0x00	; 0
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	40 e0       	ldi	r20, 0x00	; 0
 38e:	5f e3       	ldi	r21, 0x3F	; 63
 390:	c3 01       	movw	r24, r6
 392:	b2 01       	movw	r22, r4
 394:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 398:	9b 01       	movw	r18, r22
 39a:	ac 01       	movw	r20, r24
 39c:	c5 01       	movw	r24, r10
 39e:	b4 01       	movw	r22, r8
 3a0:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 3a4:	f8 01       	movw	r30, r16
 3a6:	60 83       	st	Z, r22
 3a8:	71 83       	std	Z+1, r23	; 0x01
 3aa:	82 83       	std	Z+2, r24	; 0x02
 3ac:	93 83       	std	Z+3, r25	; 0x03
    y = 0.5 * sqrt(termy1) - 0.5 * sqrt(termy2);
 3ae:	29 81       	ldd	r18, Y+1	; 0x01
 3b0:	3a 81       	ldd	r19, Y+2	; 0x02
 3b2:	4b 81       	ldd	r20, Y+3	; 0x03
 3b4:	5c 81       	ldd	r21, Y+4	; 0x04
 3b6:	c7 01       	movw	r24, r14
 3b8:	b6 01       	movw	r22, r12
 3ba:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 3be:	0e 94 42 05 	call	0xa84	; 0xa84 <sqrt>
 3c2:	4b 01       	movw	r8, r22
 3c4:	5c 01       	movw	r10, r24
 3c6:	29 81       	ldd	r18, Y+1	; 0x01
 3c8:	3a 81       	ldd	r19, Y+2	; 0x02
 3ca:	4b 81       	ldd	r20, Y+3	; 0x03
 3cc:	5c 81       	ldd	r21, Y+4	; 0x04
 3ce:	c7 01       	movw	r24, r14
 3d0:	b6 01       	movw	r22, r12
 3d2:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 3d6:	0e 94 42 05 	call	0xa84	; 0xa84 <sqrt>
 3da:	2b 01       	movw	r4, r22
 3dc:	3c 01       	movw	r6, r24
 3de:	20 e0       	ldi	r18, 0x00	; 0
 3e0:	30 e0       	ldi	r19, 0x00	; 0
 3e2:	40 e0       	ldi	r20, 0x00	; 0
 3e4:	5f e3       	ldi	r21, 0x3F	; 63
 3e6:	c5 01       	movw	r24, r10
 3e8:	b4 01       	movw	r22, r8
 3ea:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 3ee:	6b 01       	movw	r12, r22
 3f0:	7c 01       	movw	r14, r24
 3f2:	20 e0       	ldi	r18, 0x00	; 0
 3f4:	30 e0       	ldi	r19, 0x00	; 0
 3f6:	40 e0       	ldi	r20, 0x00	; 0
 3f8:	5f e3       	ldi	r21, 0x3F	; 63
 3fa:	c3 01       	movw	r24, r6
 3fc:	b2 01       	movw	r22, r4
 3fe:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 402:	9b 01       	movw	r18, r22
 404:	ac 01       	movw	r20, r24
 406:	c7 01       	movw	r24, r14
 408:	b6 01       	movw	r22, r12
 40a:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 40e:	ed 85       	ldd	r30, Y+13	; 0x0d
 410:	fe 85       	ldd	r31, Y+14	; 0x0e
 412:	60 83       	st	Z, r22
 414:	71 83       	std	Z+1, r23	; 0x01
 416:	82 83       	std	Z+2, r24	; 0x02
 418:	93 83       	std	Z+3, r25	; 0x03

}
 41a:	2e 96       	adiw	r28, 0x0e	; 14
 41c:	0f b6       	in	r0, 0x3f	; 63
 41e:	f8 94       	cli
 420:	de bf       	out	0x3e, r29	; 62
 422:	0f be       	out	0x3f, r0	; 63
 424:	cd bf       	out	0x3d, r28	; 61
 426:	df 91       	pop	r29
 428:	cf 91       	pop	r28
 42a:	1f 91       	pop	r17
 42c:	0f 91       	pop	r16
 42e:	ff 90       	pop	r15
 430:	ef 90       	pop	r14
 432:	df 90       	pop	r13
 434:	cf 90       	pop	r12
 436:	bf 90       	pop	r11
 438:	af 90       	pop	r10
 43a:	9f 90       	pop	r9
 43c:	8f 90       	pop	r8
 43e:	7f 90       	pop	r7
 440:	6f 90       	pop	r6
 442:	5f 90       	pop	r5
 444:	4f 90       	pop	r4
 446:	08 95       	ret

00000448 <main>:
int main (void)
{
 448:	cf 93       	push	r28
 44a:	df 93       	push	r29
 44c:	cd b7       	in	r28, 0x3d	; 61
 44e:	de b7       	in	r29, 0x3e	; 62
 450:	2a 97       	sbiw	r28, 0x0a	; 10
 452:	0f b6       	in	r0, 0x3f	; 63
 454:	f8 94       	cli
 456:	de bf       	out	0x3e, r29	; 62
 458:	0f be       	out	0x3f, r0	; 63
 45a:	cd bf       	out	0x3d, r28	; 61
	TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 45c:	83 b7       	in	r24, 0x33	; 51
 45e:	89 66       	ori	r24, 0x69	; 105
 460:	83 bf       	out	0x33, r24	; 51
DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 462:	87 b3       	in	r24, 0x17	; 23
 464:	8b 60       	ori	r24, 0x0B	; 11
 466:	87 bb       	out	0x17, r24	; 23
TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 468:	85 b5       	in	r24, 0x25	; 37
 46a:	89 66       	ori	r24, 0x69	; 105
 46c:	85 bd       	out	0x25, r24	; 37
DDRD |= 1<< PB7 | 1<< PB2;
 46e:	81 b3       	in	r24, 0x11	; 17
 470:	84 68       	ori	r24, 0x84	; 132
 472:	81 bb       	out	0x11, r24	; 17
PORTB &= ~(1<< PINB0);
 474:	c0 98       	cbi	0x18, 0	; 24
PORTD &= ~(1<< PIND2);
 476:	92 98       	cbi	0x12, 2	; 18
 UCSRA = (1 << U2X);
 478:	82 e0       	ldi	r24, 0x02	; 2
 47a:	8b b9       	out	0x0b, r24	; 11
	UBRRH = (unsigned char) (ubbr_value >> 8);
 47c:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) ubbr_value;
 47e:	8f ef       	ldi	r24, 0xFF	; 255
 480:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << RXEN);
 482:	80 e1       	ldi	r24, 0x10	; 16
 484:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL) | (3 << UCSZ0);
 486:	86 e8       	ldi	r24, 0x86	; 134
 488:	80 bd       	out	0x20, r24	; 32
	while (1)
    {
			if(Receive()!=0x11)
 48a:	0e 94 36 00 	call	0x6c	; 0x6c <_Z7Receivev>
 48e:	41 97       	sbiw	r24, 0x11	; 17
 490:	e1 f7       	brne	.-8      	; 0x48a <__stack+0x2b>
			continue;
			int c1= Receive();
 492:	0e 94 36 00 	call	0x6c	; 0x6c <_Z7Receivev>
 496:	3c 01       	movw	r6, r24
	    uint16_t x2 = (Receive())<<8 | c1;
 498:	0e 94 36 00 	call	0x6c	; 0x6c <_Z7Receivev>
 49c:	58 2e       	mov	r5, r24
	    int c2=Receive();
 49e:	0e 94 36 00 	call	0x6c	; 0x6c <_Z7Receivev>
 4a2:	5c 01       	movw	r10, r24
	    uint16_t y2=(Receive())<<8 | c2;
 4a4:	0e 94 36 00 	call	0x6c	; 0x6c <_Z7Receivev>
		double x1 = x2 - 512;
		double y1 = 512 - y2;
		x1=map(x1,-512,512,-1,1);
		y1=map(y1,-512,512,-1,1);
		double xans,yans;
		ellipticalSquareToDisc(x1, y1, xans, yans);
 4a8:	38 2e       	mov	r3, r24
 4aa:	21 2c       	mov	r2, r1
 4ac:	a2 28       	or	r10, r2
 4ae:	b3 28       	or	r11, r3
 4b0:	60 e0       	ldi	r22, 0x00	; 0
 4b2:	72 e0       	ldi	r23, 0x02	; 2
 4b4:	6a 19       	sub	r22, r10
 4b6:	7b 09       	sbc	r23, r11
 4b8:	80 e0       	ldi	r24, 0x00	; 0
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	0e 94 41 04 	call	0x882	; 0x882 <__floatunsisf>
 4c0:	20 e0       	ldi	r18, 0x00	; 0
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	40 e0       	ldi	r20, 0x00	; 0
 4c6:	54 e4       	ldi	r21, 0x44	; 68
 4c8:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 4cc:	9b 01       	movw	r18, r22
 4ce:	ac 01       	movw	r20, r24
 4d0:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 4d4:	20 e0       	ldi	r18, 0x00	; 0
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	40 e8       	ldi	r20, 0x80	; 128
 4da:	5a e3       	ldi	r21, 0x3A	; 58
 4dc:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 4e0:	20 e0       	ldi	r18, 0x00	; 0
 4e2:	30 e0       	ldi	r19, 0x00	; 0
 4e4:	40 e8       	ldi	r20, 0x80	; 128
 4e6:	5f e3       	ldi	r21, 0x3F	; 63
 4e8:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 4ec:	4b 01       	movw	r8, r22
 4ee:	5c 01       	movw	r10, r24
 4f0:	5a 86       	std	Y+10, r5	; 0x0a
 4f2:	19 86       	std	Y+9, r1	; 0x09
 4f4:	69 85       	ldd	r22, Y+9	; 0x09
 4f6:	7a 85       	ldd	r23, Y+10	; 0x0a
 4f8:	66 29       	or	r22, r6
 4fa:	77 29       	or	r23, r7
 4fc:	72 50       	subi	r23, 0x02	; 2
 4fe:	80 e0       	ldi	r24, 0x00	; 0
 500:	90 e0       	ldi	r25, 0x00	; 0
 502:	0e 94 41 04 	call	0x882	; 0x882 <__floatunsisf>
 506:	20 e0       	ldi	r18, 0x00	; 0
 508:	30 e0       	ldi	r19, 0x00	; 0
 50a:	40 e0       	ldi	r20, 0x00	; 0
 50c:	54 e4       	ldi	r21, 0x44	; 68
 50e:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 512:	9b 01       	movw	r18, r22
 514:	ac 01       	movw	r20, r24
 516:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 51a:	20 e0       	ldi	r18, 0x00	; 0
 51c:	30 e0       	ldi	r19, 0x00	; 0
 51e:	40 e8       	ldi	r20, 0x80	; 128
 520:	5a e3       	ldi	r21, 0x3A	; 58
 522:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 526:	20 e0       	ldi	r18, 0x00	; 0
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	40 e8       	ldi	r20, 0x80	; 128
 52c:	5f e3       	ldi	r21, 0x3F	; 63
 52e:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 532:	9e 01       	movw	r18, r28
 534:	2f 5f       	subi	r18, 0xFF	; 255
 536:	3f 4f       	sbci	r19, 0xFF	; 255
 538:	79 01       	movw	r14, r18
 53a:	8e 01       	movw	r16, r28
 53c:	0b 5f       	subi	r16, 0xFB	; 251
 53e:	1f 4f       	sbci	r17, 0xFF	; 255
 540:	a5 01       	movw	r20, r10
 542:	94 01       	movw	r18, r8
 544:	0e 94 dd 00 	call	0x1ba	; 0x1ba <_Z22ellipticalSquareToDiscddRdS_>



		double x = (xans * 0.707) + (yans * 0.707);
 548:	cd 80       	ldd	r12, Y+5	; 0x05
 54a:	de 80       	ldd	r13, Y+6	; 0x06
 54c:	ef 80       	ldd	r14, Y+7	; 0x07
 54e:	f8 84       	ldd	r15, Y+8	; 0x08
 550:	24 ef       	ldi	r18, 0xF4	; 244
 552:	3d ef       	ldi	r19, 0xFD	; 253
 554:	44 e3       	ldi	r20, 0x34	; 52
 556:	5f e3       	ldi	r21, 0x3F	; 63
 558:	69 81       	ldd	r22, Y+1	; 0x01
 55a:	7a 81       	ldd	r23, Y+2	; 0x02
 55c:	8b 81       	ldd	r24, Y+3	; 0x03
 55e:	9c 81       	ldd	r25, Y+4	; 0x04
 560:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 564:	4b 01       	movw	r8, r22
 566:	5c 01       	movw	r10, r24
		double y = (-xans * 0.707) + (yans * 0.707);
		ellipticalDiscToSquare(x,y,xans,yans);
 568:	c7 01       	movw	r24, r14
 56a:	b6 01       	movw	r22, r12
 56c:	90 58       	subi	r25, 0x80	; 128
 56e:	24 ef       	ldi	r18, 0xF4	; 244
 570:	3d ef       	ldi	r19, 0xFD	; 253
 572:	44 e3       	ldi	r20, 0x34	; 52
 574:	5f e3       	ldi	r21, 0x3F	; 63
 576:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 57a:	a5 01       	movw	r20, r10
 57c:	94 01       	movw	r18, r8
 57e:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 582:	2b 01       	movw	r4, r22
 584:	3c 01       	movw	r6, r24
 586:	24 ef       	ldi	r18, 0xF4	; 244
 588:	3d ef       	ldi	r19, 0xFD	; 253
 58a:	44 e3       	ldi	r20, 0x34	; 52
 58c:	5f e3       	ldi	r21, 0x3F	; 63
 58e:	c7 01       	movw	r24, r14
 590:	b6 01       	movw	r22, r12
 592:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 596:	a5 01       	movw	r20, r10
 598:	94 01       	movw	r18, r8
 59a:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 59e:	9e 01       	movw	r18, r28
 5a0:	2f 5f       	subi	r18, 0xFF	; 255
 5a2:	3f 4f       	sbci	r19, 0xFF	; 255
 5a4:	79 01       	movw	r14, r18
 5a6:	a3 01       	movw	r20, r6
 5a8:	92 01       	movw	r18, r4
 5aa:	0e 94 38 01 	call	0x270	; 0x270 <_Z22ellipticalDiscToSquareddRdS_>
		int x3=(int)map(xans,-0.991273,0.991273,-255,255);
 5ae:	21 e1       	ldi	r18, 0x11	; 17
 5b0:	34 ec       	ldi	r19, 0xC4	; 196
 5b2:	4d e7       	ldi	r20, 0x7D	; 125
 5b4:	5f e3       	ldi	r21, 0x3F	; 63
 5b6:	6d 81       	ldd	r22, Y+5	; 0x05
 5b8:	7e 81       	ldd	r23, Y+6	; 0x06
 5ba:	8f 81       	ldd	r24, Y+7	; 0x07
 5bc:	98 85       	ldd	r25, Y+8	; 0x08
 5be:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 5c2:	20 e0       	ldi	r18, 0x00	; 0
 5c4:	30 e0       	ldi	r19, 0x00	; 0
 5c6:	4f ef       	ldi	r20, 0xFF	; 255
 5c8:	53 e4       	ldi	r21, 0x43	; 67
 5ca:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 5ce:	21 e1       	ldi	r18, 0x11	; 17
 5d0:	34 ec       	ldi	r19, 0xC4	; 196
 5d2:	4d ef       	ldi	r20, 0xFD	; 253
 5d4:	5f e3       	ldi	r21, 0x3F	; 63
 5d6:	0e 94 99 03 	call	0x732	; 0x732 <__divsf3>
 5da:	20 e0       	ldi	r18, 0x00	; 0
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	4f e7       	ldi	r20, 0x7F	; 127
 5e0:	53 e4       	ldi	r21, 0x43	; 67
 5e2:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 5e6:	0e 94 0b 04 	call	0x816	; 0x816 <__fixsfsi>
 5ea:	96 2e       	mov	r9, r22
 5ec:	a6 2e       	mov	r10, r22
 5ee:	b7 2e       	mov	r11, r23
		int y3=(int)map(yans,-0.991273,0.991273,-255,255);
 5f0:	21 e1       	ldi	r18, 0x11	; 17
 5f2:	34 ec       	ldi	r19, 0xC4	; 196
 5f4:	4d e7       	ldi	r20, 0x7D	; 125
 5f6:	5f e3       	ldi	r21, 0x3F	; 63
 5f8:	69 81       	ldd	r22, Y+1	; 0x01
 5fa:	7a 81       	ldd	r23, Y+2	; 0x02
 5fc:	8b 81       	ldd	r24, Y+3	; 0x03
 5fe:	9c 81       	ldd	r25, Y+4	; 0x04
 600:	0e 94 2d 03 	call	0x65a	; 0x65a <__addsf3>
 604:	20 e0       	ldi	r18, 0x00	; 0
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	4f ef       	ldi	r20, 0xFF	; 255
 60a:	53 e4       	ldi	r21, 0x43	; 67
 60c:	0e 94 cf 04 	call	0x99e	; 0x99e <__mulsf3>
 610:	21 e1       	ldi	r18, 0x11	; 17
 612:	34 ec       	ldi	r19, 0xC4	; 196
 614:	4d ef       	ldi	r20, 0xFD	; 253
 616:	5f e3       	ldi	r21, 0x3F	; 63
 618:	0e 94 99 03 	call	0x732	; 0x732 <__divsf3>
 61c:	20 e0       	ldi	r18, 0x00	; 0
 61e:	30 e0       	ldi	r19, 0x00	; 0
 620:	4f e7       	ldi	r20, 0x7F	; 127
 622:	53 e4       	ldi	r21, 0x43	; 67
 624:	0e 94 2c 03 	call	0x658	; 0x658 <__subsf3>
 628:	0e 94 0b 04 	call	0x816	; 0x816 <__fixsfsi>
 62c:	cb 01       	movw	r24, r22
		x5=0;

		if(y5<20&&y5>-20)
		y5=0;*/

		if(x3>0)
 62e:	1a 14       	cp	r1, r10
 630:	1b 04       	cpc	r1, r11
 632:	1c f4       	brge	.+6      	; 0x63a <__stack+0x1db>
		{
			OCR0=x3;
 634:	9c be       	out	0x3c, r9	; 60
			PORTB|=1<<PB0;
 636:	c0 9a       	sbi	0x18, 0	; 24
 638:	03 c0       	rjmp	.+6      	; 0x640 <__stack+0x1e1>
		}
		else
		{
			OCR0=-x3;
 63a:	91 94       	neg	r9
 63c:	9c be       	out	0x3c, r9	; 60
			PORTB&=~(1<<PB0);
 63e:	c0 98       	cbi	0x18, 0	; 24
		}
		if(y3>0)
 640:	18 16       	cp	r1, r24
 642:	19 06       	cpc	r1, r25
 644:	1c f4       	brge	.+6      	; 0x64c <__stack+0x1ed>
		{
		OCR2=y3;
 646:	63 bd       	out	0x23, r22	; 35
		PORTD|=1<<PD2;
 648:	92 9a       	sbi	0x12, 2	; 18
 64a:	1f cf       	rjmp	.-450    	; 0x48a <__stack+0x2b>
		}
		else
		{
			OCR2=-y3;
 64c:	61 95       	neg	r22
 64e:	63 bd       	out	0x23, r22	; 35
			PORTD&=~1<<PD2;
 650:	82 b3       	in	r24, 0x12	; 18
 652:	88 7f       	andi	r24, 0xF8	; 248
 654:	82 bb       	out	0x12, r24	; 18
 656:	19 cf       	rjmp	.-462    	; 0x48a <__stack+0x2b>

00000658 <__subsf3>:
 658:	50 58       	subi	r21, 0x80	; 128

0000065a <__addsf3>:
 65a:	bb 27       	eor	r27, r27
 65c:	aa 27       	eor	r26, r26
 65e:	0e 94 44 03 	call	0x688	; 0x688 <__addsf3x>
 662:	0c 94 95 04 	jmp	0x92a	; 0x92a <__fp_round>
 666:	0e 94 87 04 	call	0x90e	; 0x90e <__fp_pscA>
 66a:	38 f0       	brcs	.+14     	; 0x67a <__addsf3+0x20>
 66c:	0e 94 8e 04 	call	0x91c	; 0x91c <__fp_pscB>
 670:	20 f0       	brcs	.+8      	; 0x67a <__addsf3+0x20>
 672:	39 f4       	brne	.+14     	; 0x682 <__addsf3+0x28>
 674:	9f 3f       	cpi	r25, 0xFF	; 255
 676:	19 f4       	brne	.+6      	; 0x67e <__addsf3+0x24>
 678:	26 f4       	brtc	.+8      	; 0x682 <__addsf3+0x28>
 67a:	0c 94 84 04 	jmp	0x908	; 0x908 <__fp_nan>
 67e:	0e f4       	brtc	.+2      	; 0x682 <__addsf3+0x28>
 680:	e0 95       	com	r30
 682:	e7 fb       	bst	r30, 7
 684:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_inf>

00000688 <__addsf3x>:
 688:	e9 2f       	mov	r30, r25
 68a:	0e 94 a6 04 	call	0x94c	; 0x94c <__fp_split3>
 68e:	58 f3       	brcs	.-42     	; 0x666 <__addsf3+0xc>
 690:	ba 17       	cp	r27, r26
 692:	62 07       	cpc	r22, r18
 694:	73 07       	cpc	r23, r19
 696:	84 07       	cpc	r24, r20
 698:	95 07       	cpc	r25, r21
 69a:	20 f0       	brcs	.+8      	; 0x6a4 <__addsf3x+0x1c>
 69c:	79 f4       	brne	.+30     	; 0x6bc <__addsf3x+0x34>
 69e:	a6 f5       	brtc	.+104    	; 0x708 <__addsf3x+0x80>
 6a0:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_zero>
 6a4:	0e f4       	brtc	.+2      	; 0x6a8 <__addsf3x+0x20>
 6a6:	e0 95       	com	r30
 6a8:	0b 2e       	mov	r0, r27
 6aa:	ba 2f       	mov	r27, r26
 6ac:	a0 2d       	mov	r26, r0
 6ae:	0b 01       	movw	r0, r22
 6b0:	b9 01       	movw	r22, r18
 6b2:	90 01       	movw	r18, r0
 6b4:	0c 01       	movw	r0, r24
 6b6:	ca 01       	movw	r24, r20
 6b8:	a0 01       	movw	r20, r0
 6ba:	11 24       	eor	r1, r1
 6bc:	ff 27       	eor	r31, r31
 6be:	59 1b       	sub	r21, r25
 6c0:	99 f0       	breq	.+38     	; 0x6e8 <__addsf3x+0x60>
 6c2:	59 3f       	cpi	r21, 0xF9	; 249
 6c4:	50 f4       	brcc	.+20     	; 0x6da <__addsf3x+0x52>
 6c6:	50 3e       	cpi	r21, 0xE0	; 224
 6c8:	68 f1       	brcs	.+90     	; 0x724 <__addsf3x+0x9c>
 6ca:	1a 16       	cp	r1, r26
 6cc:	f0 40       	sbci	r31, 0x00	; 0
 6ce:	a2 2f       	mov	r26, r18
 6d0:	23 2f       	mov	r18, r19
 6d2:	34 2f       	mov	r19, r20
 6d4:	44 27       	eor	r20, r20
 6d6:	58 5f       	subi	r21, 0xF8	; 248
 6d8:	f3 cf       	rjmp	.-26     	; 0x6c0 <__addsf3x+0x38>
 6da:	46 95       	lsr	r20
 6dc:	37 95       	ror	r19
 6de:	27 95       	ror	r18
 6e0:	a7 95       	ror	r26
 6e2:	f0 40       	sbci	r31, 0x00	; 0
 6e4:	53 95       	inc	r21
 6e6:	c9 f7       	brne	.-14     	; 0x6da <__addsf3x+0x52>
 6e8:	7e f4       	brtc	.+30     	; 0x708 <__addsf3x+0x80>
 6ea:	1f 16       	cp	r1, r31
 6ec:	ba 0b       	sbc	r27, r26
 6ee:	62 0b       	sbc	r22, r18
 6f0:	73 0b       	sbc	r23, r19
 6f2:	84 0b       	sbc	r24, r20
 6f4:	ba f0       	brmi	.+46     	; 0x724 <__addsf3x+0x9c>
 6f6:	91 50       	subi	r25, 0x01	; 1
 6f8:	a1 f0       	breq	.+40     	; 0x722 <__addsf3x+0x9a>
 6fa:	ff 0f       	add	r31, r31
 6fc:	bb 1f       	adc	r27, r27
 6fe:	66 1f       	adc	r22, r22
 700:	77 1f       	adc	r23, r23
 702:	88 1f       	adc	r24, r24
 704:	c2 f7       	brpl	.-16     	; 0x6f6 <__addsf3x+0x6e>
 706:	0e c0       	rjmp	.+28     	; 0x724 <__addsf3x+0x9c>
 708:	ba 0f       	add	r27, r26
 70a:	62 1f       	adc	r22, r18
 70c:	73 1f       	adc	r23, r19
 70e:	84 1f       	adc	r24, r20
 710:	48 f4       	brcc	.+18     	; 0x724 <__addsf3x+0x9c>
 712:	87 95       	ror	r24
 714:	77 95       	ror	r23
 716:	67 95       	ror	r22
 718:	b7 95       	ror	r27
 71a:	f7 95       	ror	r31
 71c:	9e 3f       	cpi	r25, 0xFE	; 254
 71e:	08 f0       	brcs	.+2      	; 0x722 <__addsf3x+0x9a>
 720:	b0 cf       	rjmp	.-160    	; 0x682 <__addsf3+0x28>
 722:	93 95       	inc	r25
 724:	88 0f       	add	r24, r24
 726:	08 f0       	brcs	.+2      	; 0x72a <__addsf3x+0xa2>
 728:	99 27       	eor	r25, r25
 72a:	ee 0f       	add	r30, r30
 72c:	97 95       	ror	r25
 72e:	87 95       	ror	r24
 730:	08 95       	ret

00000732 <__divsf3>:
 732:	0e 94 ad 03 	call	0x75a	; 0x75a <__divsf3x>
 736:	0c 94 95 04 	jmp	0x92a	; 0x92a <__fp_round>
 73a:	0e 94 8e 04 	call	0x91c	; 0x91c <__fp_pscB>
 73e:	58 f0       	brcs	.+22     	; 0x756 <__divsf3+0x24>
 740:	0e 94 87 04 	call	0x90e	; 0x90e <__fp_pscA>
 744:	40 f0       	brcs	.+16     	; 0x756 <__divsf3+0x24>
 746:	29 f4       	brne	.+10     	; 0x752 <__divsf3+0x20>
 748:	5f 3f       	cpi	r21, 0xFF	; 255
 74a:	29 f0       	breq	.+10     	; 0x756 <__divsf3+0x24>
 74c:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_inf>
 750:	51 11       	cpse	r21, r1
 752:	0c 94 c9 04 	jmp	0x992	; 0x992 <__fp_szero>
 756:	0c 94 84 04 	jmp	0x908	; 0x908 <__fp_nan>

0000075a <__divsf3x>:
 75a:	0e 94 a6 04 	call	0x94c	; 0x94c <__fp_split3>
 75e:	68 f3       	brcs	.-38     	; 0x73a <__divsf3+0x8>

00000760 <__divsf3_pse>:
 760:	99 23       	and	r25, r25
 762:	b1 f3       	breq	.-20     	; 0x750 <__divsf3+0x1e>
 764:	55 23       	and	r21, r21
 766:	91 f3       	breq	.-28     	; 0x74c <__divsf3+0x1a>
 768:	95 1b       	sub	r25, r21
 76a:	55 0b       	sbc	r21, r21
 76c:	bb 27       	eor	r27, r27
 76e:	aa 27       	eor	r26, r26
 770:	62 17       	cp	r22, r18
 772:	73 07       	cpc	r23, r19
 774:	84 07       	cpc	r24, r20
 776:	38 f0       	brcs	.+14     	; 0x786 <__divsf3_pse+0x26>
 778:	9f 5f       	subi	r25, 0xFF	; 255
 77a:	5f 4f       	sbci	r21, 0xFF	; 255
 77c:	22 0f       	add	r18, r18
 77e:	33 1f       	adc	r19, r19
 780:	44 1f       	adc	r20, r20
 782:	aa 1f       	adc	r26, r26
 784:	a9 f3       	breq	.-22     	; 0x770 <__divsf3_pse+0x10>
 786:	35 d0       	rcall	.+106    	; 0x7f2 <__divsf3_pse+0x92>
 788:	0e 2e       	mov	r0, r30
 78a:	3a f0       	brmi	.+14     	; 0x79a <__divsf3_pse+0x3a>
 78c:	e0 e8       	ldi	r30, 0x80	; 128
 78e:	32 d0       	rcall	.+100    	; 0x7f4 <__divsf3_pse+0x94>
 790:	91 50       	subi	r25, 0x01	; 1
 792:	50 40       	sbci	r21, 0x00	; 0
 794:	e6 95       	lsr	r30
 796:	00 1c       	adc	r0, r0
 798:	ca f7       	brpl	.-14     	; 0x78c <__divsf3_pse+0x2c>
 79a:	2b d0       	rcall	.+86     	; 0x7f2 <__divsf3_pse+0x92>
 79c:	fe 2f       	mov	r31, r30
 79e:	29 d0       	rcall	.+82     	; 0x7f2 <__divsf3_pse+0x92>
 7a0:	66 0f       	add	r22, r22
 7a2:	77 1f       	adc	r23, r23
 7a4:	88 1f       	adc	r24, r24
 7a6:	bb 1f       	adc	r27, r27
 7a8:	26 17       	cp	r18, r22
 7aa:	37 07       	cpc	r19, r23
 7ac:	48 07       	cpc	r20, r24
 7ae:	ab 07       	cpc	r26, r27
 7b0:	b0 e8       	ldi	r27, 0x80	; 128
 7b2:	09 f0       	breq	.+2      	; 0x7b6 <__divsf3_pse+0x56>
 7b4:	bb 0b       	sbc	r27, r27
 7b6:	80 2d       	mov	r24, r0
 7b8:	bf 01       	movw	r22, r30
 7ba:	ff 27       	eor	r31, r31
 7bc:	93 58       	subi	r25, 0x83	; 131
 7be:	5f 4f       	sbci	r21, 0xFF	; 255
 7c0:	3a f0       	brmi	.+14     	; 0x7d0 <__divsf3_pse+0x70>
 7c2:	9e 3f       	cpi	r25, 0xFE	; 254
 7c4:	51 05       	cpc	r21, r1
 7c6:	78 f0       	brcs	.+30     	; 0x7e6 <__divsf3_pse+0x86>
 7c8:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_inf>
 7cc:	0c 94 c9 04 	jmp	0x992	; 0x992 <__fp_szero>
 7d0:	5f 3f       	cpi	r21, 0xFF	; 255
 7d2:	e4 f3       	brlt	.-8      	; 0x7cc <__divsf3_pse+0x6c>
 7d4:	98 3e       	cpi	r25, 0xE8	; 232
 7d6:	d4 f3       	brlt	.-12     	; 0x7cc <__divsf3_pse+0x6c>
 7d8:	86 95       	lsr	r24
 7da:	77 95       	ror	r23
 7dc:	67 95       	ror	r22
 7de:	b7 95       	ror	r27
 7e0:	f7 95       	ror	r31
 7e2:	9f 5f       	subi	r25, 0xFF	; 255
 7e4:	c9 f7       	brne	.-14     	; 0x7d8 <__divsf3_pse+0x78>
 7e6:	88 0f       	add	r24, r24
 7e8:	91 1d       	adc	r25, r1
 7ea:	96 95       	lsr	r25
 7ec:	87 95       	ror	r24
 7ee:	97 f9       	bld	r25, 7
 7f0:	08 95       	ret
 7f2:	e1 e0       	ldi	r30, 0x01	; 1
 7f4:	66 0f       	add	r22, r22
 7f6:	77 1f       	adc	r23, r23
 7f8:	88 1f       	adc	r24, r24
 7fa:	bb 1f       	adc	r27, r27
 7fc:	62 17       	cp	r22, r18
 7fe:	73 07       	cpc	r23, r19
 800:	84 07       	cpc	r24, r20
 802:	ba 07       	cpc	r27, r26
 804:	20 f0       	brcs	.+8      	; 0x80e <__divsf3_pse+0xae>
 806:	62 1b       	sub	r22, r18
 808:	73 0b       	sbc	r23, r19
 80a:	84 0b       	sbc	r24, r20
 80c:	ba 0b       	sbc	r27, r26
 80e:	ee 1f       	adc	r30, r30
 810:	88 f7       	brcc	.-30     	; 0x7f4 <__divsf3_pse+0x94>
 812:	e0 95       	com	r30
 814:	08 95       	ret

00000816 <__fixsfsi>:
 816:	0e 94 12 04 	call	0x824	; 0x824 <__fixunssfsi>
 81a:	68 94       	set
 81c:	b1 11       	cpse	r27, r1
 81e:	0c 94 c9 04 	jmp	0x992	; 0x992 <__fp_szero>
 822:	08 95       	ret

00000824 <__fixunssfsi>:
 824:	0e 94 ae 04 	call	0x95c	; 0x95c <__fp_splitA>
 828:	88 f0       	brcs	.+34     	; 0x84c <__fixunssfsi+0x28>
 82a:	9f 57       	subi	r25, 0x7F	; 127
 82c:	98 f0       	brcs	.+38     	; 0x854 <__fixunssfsi+0x30>
 82e:	b9 2f       	mov	r27, r25
 830:	99 27       	eor	r25, r25
 832:	b7 51       	subi	r27, 0x17	; 23
 834:	b0 f0       	brcs	.+44     	; 0x862 <__fixunssfsi+0x3e>
 836:	e1 f0       	breq	.+56     	; 0x870 <__fixunssfsi+0x4c>
 838:	66 0f       	add	r22, r22
 83a:	77 1f       	adc	r23, r23
 83c:	88 1f       	adc	r24, r24
 83e:	99 1f       	adc	r25, r25
 840:	1a f0       	brmi	.+6      	; 0x848 <__fixunssfsi+0x24>
 842:	ba 95       	dec	r27
 844:	c9 f7       	brne	.-14     	; 0x838 <__fixunssfsi+0x14>
 846:	14 c0       	rjmp	.+40     	; 0x870 <__fixunssfsi+0x4c>
 848:	b1 30       	cpi	r27, 0x01	; 1
 84a:	91 f0       	breq	.+36     	; 0x870 <__fixunssfsi+0x4c>
 84c:	0e 94 c8 04 	call	0x990	; 0x990 <__fp_zero>
 850:	b1 e0       	ldi	r27, 0x01	; 1
 852:	08 95       	ret
 854:	0c 94 c8 04 	jmp	0x990	; 0x990 <__fp_zero>
 858:	67 2f       	mov	r22, r23
 85a:	78 2f       	mov	r23, r24
 85c:	88 27       	eor	r24, r24
 85e:	b8 5f       	subi	r27, 0xF8	; 248
 860:	39 f0       	breq	.+14     	; 0x870 <__fixunssfsi+0x4c>
 862:	b9 3f       	cpi	r27, 0xF9	; 249
 864:	cc f3       	brlt	.-14     	; 0x858 <__fixunssfsi+0x34>
 866:	86 95       	lsr	r24
 868:	77 95       	ror	r23
 86a:	67 95       	ror	r22
 86c:	b3 95       	inc	r27
 86e:	d9 f7       	brne	.-10     	; 0x866 <__fixunssfsi+0x42>
 870:	3e f4       	brtc	.+14     	; 0x880 <__fixunssfsi+0x5c>
 872:	90 95       	com	r25
 874:	80 95       	com	r24
 876:	70 95       	com	r23
 878:	61 95       	neg	r22
 87a:	7f 4f       	sbci	r23, 0xFF	; 255
 87c:	8f 4f       	sbci	r24, 0xFF	; 255
 87e:	9f 4f       	sbci	r25, 0xFF	; 255
 880:	08 95       	ret

00000882 <__floatunsisf>:
 882:	e8 94       	clt
 884:	09 c0       	rjmp	.+18     	; 0x898 <__floatsisf+0x12>

00000886 <__floatsisf>:
 886:	97 fb       	bst	r25, 7
 888:	3e f4       	brtc	.+14     	; 0x898 <__floatsisf+0x12>
 88a:	90 95       	com	r25
 88c:	80 95       	com	r24
 88e:	70 95       	com	r23
 890:	61 95       	neg	r22
 892:	7f 4f       	sbci	r23, 0xFF	; 255
 894:	8f 4f       	sbci	r24, 0xFF	; 255
 896:	9f 4f       	sbci	r25, 0xFF	; 255
 898:	99 23       	and	r25, r25
 89a:	a9 f0       	breq	.+42     	; 0x8c6 <__floatsisf+0x40>
 89c:	f9 2f       	mov	r31, r25
 89e:	96 e9       	ldi	r25, 0x96	; 150
 8a0:	bb 27       	eor	r27, r27
 8a2:	93 95       	inc	r25
 8a4:	f6 95       	lsr	r31
 8a6:	87 95       	ror	r24
 8a8:	77 95       	ror	r23
 8aa:	67 95       	ror	r22
 8ac:	b7 95       	ror	r27
 8ae:	f1 11       	cpse	r31, r1
 8b0:	f8 cf       	rjmp	.-16     	; 0x8a2 <__floatsisf+0x1c>
 8b2:	fa f4       	brpl	.+62     	; 0x8f2 <__floatsisf+0x6c>
 8b4:	bb 0f       	add	r27, r27
 8b6:	11 f4       	brne	.+4      	; 0x8bc <__floatsisf+0x36>
 8b8:	60 ff       	sbrs	r22, 0
 8ba:	1b c0       	rjmp	.+54     	; 0x8f2 <__floatsisf+0x6c>
 8bc:	6f 5f       	subi	r22, 0xFF	; 255
 8be:	7f 4f       	sbci	r23, 0xFF	; 255
 8c0:	8f 4f       	sbci	r24, 0xFF	; 255
 8c2:	9f 4f       	sbci	r25, 0xFF	; 255
 8c4:	16 c0       	rjmp	.+44     	; 0x8f2 <__floatsisf+0x6c>
 8c6:	88 23       	and	r24, r24
 8c8:	11 f0       	breq	.+4      	; 0x8ce <__floatsisf+0x48>
 8ca:	96 e9       	ldi	r25, 0x96	; 150
 8cc:	11 c0       	rjmp	.+34     	; 0x8f0 <__floatsisf+0x6a>
 8ce:	77 23       	and	r23, r23
 8d0:	21 f0       	breq	.+8      	; 0x8da <__floatsisf+0x54>
 8d2:	9e e8       	ldi	r25, 0x8E	; 142
 8d4:	87 2f       	mov	r24, r23
 8d6:	76 2f       	mov	r23, r22
 8d8:	05 c0       	rjmp	.+10     	; 0x8e4 <__floatsisf+0x5e>
 8da:	66 23       	and	r22, r22
 8dc:	71 f0       	breq	.+28     	; 0x8fa <__floatsisf+0x74>
 8de:	96 e8       	ldi	r25, 0x86	; 134
 8e0:	86 2f       	mov	r24, r22
 8e2:	70 e0       	ldi	r23, 0x00	; 0
 8e4:	60 e0       	ldi	r22, 0x00	; 0
 8e6:	2a f0       	brmi	.+10     	; 0x8f2 <__floatsisf+0x6c>
 8e8:	9a 95       	dec	r25
 8ea:	66 0f       	add	r22, r22
 8ec:	77 1f       	adc	r23, r23
 8ee:	88 1f       	adc	r24, r24
 8f0:	da f7       	brpl	.-10     	; 0x8e8 <__floatsisf+0x62>
 8f2:	88 0f       	add	r24, r24
 8f4:	96 95       	lsr	r25
 8f6:	87 95       	ror	r24
 8f8:	97 f9       	bld	r25, 7
 8fa:	08 95       	ret

000008fc <__fp_inf>:
 8fc:	97 f9       	bld	r25, 7
 8fe:	9f 67       	ori	r25, 0x7F	; 127
 900:	80 e8       	ldi	r24, 0x80	; 128
 902:	70 e0       	ldi	r23, 0x00	; 0
 904:	60 e0       	ldi	r22, 0x00	; 0
 906:	08 95       	ret

00000908 <__fp_nan>:
 908:	9f ef       	ldi	r25, 0xFF	; 255
 90a:	80 ec       	ldi	r24, 0xC0	; 192
 90c:	08 95       	ret

0000090e <__fp_pscA>:
 90e:	00 24       	eor	r0, r0
 910:	0a 94       	dec	r0
 912:	16 16       	cp	r1, r22
 914:	17 06       	cpc	r1, r23
 916:	18 06       	cpc	r1, r24
 918:	09 06       	cpc	r0, r25
 91a:	08 95       	ret

0000091c <__fp_pscB>:
 91c:	00 24       	eor	r0, r0
 91e:	0a 94       	dec	r0
 920:	12 16       	cp	r1, r18
 922:	13 06       	cpc	r1, r19
 924:	14 06       	cpc	r1, r20
 926:	05 06       	cpc	r0, r21
 928:	08 95       	ret

0000092a <__fp_round>:
 92a:	09 2e       	mov	r0, r25
 92c:	03 94       	inc	r0
 92e:	00 0c       	add	r0, r0
 930:	11 f4       	brne	.+4      	; 0x936 <__fp_round+0xc>
 932:	88 23       	and	r24, r24
 934:	52 f0       	brmi	.+20     	; 0x94a <__fp_round+0x20>
 936:	bb 0f       	add	r27, r27
 938:	40 f4       	brcc	.+16     	; 0x94a <__fp_round+0x20>
 93a:	bf 2b       	or	r27, r31
 93c:	11 f4       	brne	.+4      	; 0x942 <__fp_round+0x18>
 93e:	60 ff       	sbrs	r22, 0
 940:	04 c0       	rjmp	.+8      	; 0x94a <__fp_round+0x20>
 942:	6f 5f       	subi	r22, 0xFF	; 255
 944:	7f 4f       	sbci	r23, 0xFF	; 255
 946:	8f 4f       	sbci	r24, 0xFF	; 255
 948:	9f 4f       	sbci	r25, 0xFF	; 255
 94a:	08 95       	ret

0000094c <__fp_split3>:
 94c:	57 fd       	sbrc	r21, 7
 94e:	90 58       	subi	r25, 0x80	; 128
 950:	44 0f       	add	r20, r20
 952:	55 1f       	adc	r21, r21
 954:	59 f0       	breq	.+22     	; 0x96c <__fp_splitA+0x10>
 956:	5f 3f       	cpi	r21, 0xFF	; 255
 958:	71 f0       	breq	.+28     	; 0x976 <__fp_splitA+0x1a>
 95a:	47 95       	ror	r20

0000095c <__fp_splitA>:
 95c:	88 0f       	add	r24, r24
 95e:	97 fb       	bst	r25, 7
 960:	99 1f       	adc	r25, r25
 962:	61 f0       	breq	.+24     	; 0x97c <__fp_splitA+0x20>
 964:	9f 3f       	cpi	r25, 0xFF	; 255
 966:	79 f0       	breq	.+30     	; 0x986 <__fp_splitA+0x2a>
 968:	87 95       	ror	r24
 96a:	08 95       	ret
 96c:	12 16       	cp	r1, r18
 96e:	13 06       	cpc	r1, r19
 970:	14 06       	cpc	r1, r20
 972:	55 1f       	adc	r21, r21
 974:	f2 cf       	rjmp	.-28     	; 0x95a <__fp_split3+0xe>
 976:	46 95       	lsr	r20
 978:	f1 df       	rcall	.-30     	; 0x95c <__fp_splitA>
 97a:	08 c0       	rjmp	.+16     	; 0x98c <__fp_splitA+0x30>
 97c:	16 16       	cp	r1, r22
 97e:	17 06       	cpc	r1, r23
 980:	18 06       	cpc	r1, r24
 982:	99 1f       	adc	r25, r25
 984:	f1 cf       	rjmp	.-30     	; 0x968 <__fp_splitA+0xc>
 986:	86 95       	lsr	r24
 988:	71 05       	cpc	r23, r1
 98a:	61 05       	cpc	r22, r1
 98c:	08 94       	sec
 98e:	08 95       	ret

00000990 <__fp_zero>:
 990:	e8 94       	clt

00000992 <__fp_szero>:
 992:	bb 27       	eor	r27, r27
 994:	66 27       	eor	r22, r22
 996:	77 27       	eor	r23, r23
 998:	cb 01       	movw	r24, r22
 99a:	97 f9       	bld	r25, 7
 99c:	08 95       	ret

0000099e <__mulsf3>:
 99e:	0e 94 e2 04 	call	0x9c4	; 0x9c4 <__mulsf3x>
 9a2:	0c 94 95 04 	jmp	0x92a	; 0x92a <__fp_round>
 9a6:	0e 94 87 04 	call	0x90e	; 0x90e <__fp_pscA>
 9aa:	38 f0       	brcs	.+14     	; 0x9ba <__mulsf3+0x1c>
 9ac:	0e 94 8e 04 	call	0x91c	; 0x91c <__fp_pscB>
 9b0:	20 f0       	brcs	.+8      	; 0x9ba <__mulsf3+0x1c>
 9b2:	95 23       	and	r25, r21
 9b4:	11 f0       	breq	.+4      	; 0x9ba <__mulsf3+0x1c>
 9b6:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_inf>
 9ba:	0c 94 84 04 	jmp	0x908	; 0x908 <__fp_nan>
 9be:	11 24       	eor	r1, r1
 9c0:	0c 94 c9 04 	jmp	0x992	; 0x992 <__fp_szero>

000009c4 <__mulsf3x>:
 9c4:	0e 94 a6 04 	call	0x94c	; 0x94c <__fp_split3>
 9c8:	70 f3       	brcs	.-36     	; 0x9a6 <__mulsf3+0x8>

000009ca <__mulsf3_pse>:
 9ca:	95 9f       	mul	r25, r21
 9cc:	c1 f3       	breq	.-16     	; 0x9be <__mulsf3+0x20>
 9ce:	95 0f       	add	r25, r21
 9d0:	50 e0       	ldi	r21, 0x00	; 0
 9d2:	55 1f       	adc	r21, r21
 9d4:	62 9f       	mul	r22, r18
 9d6:	f0 01       	movw	r30, r0
 9d8:	72 9f       	mul	r23, r18
 9da:	bb 27       	eor	r27, r27
 9dc:	f0 0d       	add	r31, r0
 9de:	b1 1d       	adc	r27, r1
 9e0:	63 9f       	mul	r22, r19
 9e2:	aa 27       	eor	r26, r26
 9e4:	f0 0d       	add	r31, r0
 9e6:	b1 1d       	adc	r27, r1
 9e8:	aa 1f       	adc	r26, r26
 9ea:	64 9f       	mul	r22, r20
 9ec:	66 27       	eor	r22, r22
 9ee:	b0 0d       	add	r27, r0
 9f0:	a1 1d       	adc	r26, r1
 9f2:	66 1f       	adc	r22, r22
 9f4:	82 9f       	mul	r24, r18
 9f6:	22 27       	eor	r18, r18
 9f8:	b0 0d       	add	r27, r0
 9fa:	a1 1d       	adc	r26, r1
 9fc:	62 1f       	adc	r22, r18
 9fe:	73 9f       	mul	r23, r19
 a00:	b0 0d       	add	r27, r0
 a02:	a1 1d       	adc	r26, r1
 a04:	62 1f       	adc	r22, r18
 a06:	83 9f       	mul	r24, r19
 a08:	a0 0d       	add	r26, r0
 a0a:	61 1d       	adc	r22, r1
 a0c:	22 1f       	adc	r18, r18
 a0e:	74 9f       	mul	r23, r20
 a10:	33 27       	eor	r19, r19
 a12:	a0 0d       	add	r26, r0
 a14:	61 1d       	adc	r22, r1
 a16:	23 1f       	adc	r18, r19
 a18:	84 9f       	mul	r24, r20
 a1a:	60 0d       	add	r22, r0
 a1c:	21 1d       	adc	r18, r1
 a1e:	82 2f       	mov	r24, r18
 a20:	76 2f       	mov	r23, r22
 a22:	6a 2f       	mov	r22, r26
 a24:	11 24       	eor	r1, r1
 a26:	9f 57       	subi	r25, 0x7F	; 127
 a28:	50 40       	sbci	r21, 0x00	; 0
 a2a:	9a f0       	brmi	.+38     	; 0xa52 <__mulsf3_pse+0x88>
 a2c:	f1 f0       	breq	.+60     	; 0xa6a <__mulsf3_pse+0xa0>
 a2e:	88 23       	and	r24, r24
 a30:	4a f0       	brmi	.+18     	; 0xa44 <__mulsf3_pse+0x7a>
 a32:	ee 0f       	add	r30, r30
 a34:	ff 1f       	adc	r31, r31
 a36:	bb 1f       	adc	r27, r27
 a38:	66 1f       	adc	r22, r22
 a3a:	77 1f       	adc	r23, r23
 a3c:	88 1f       	adc	r24, r24
 a3e:	91 50       	subi	r25, 0x01	; 1
 a40:	50 40       	sbci	r21, 0x00	; 0
 a42:	a9 f7       	brne	.-22     	; 0xa2e <__mulsf3_pse+0x64>
 a44:	9e 3f       	cpi	r25, 0xFE	; 254
 a46:	51 05       	cpc	r21, r1
 a48:	80 f0       	brcs	.+32     	; 0xa6a <__mulsf3_pse+0xa0>
 a4a:	0c 94 7e 04 	jmp	0x8fc	; 0x8fc <__fp_inf>
 a4e:	0c 94 c9 04 	jmp	0x992	; 0x992 <__fp_szero>
 a52:	5f 3f       	cpi	r21, 0xFF	; 255
 a54:	e4 f3       	brlt	.-8      	; 0xa4e <__mulsf3_pse+0x84>
 a56:	98 3e       	cpi	r25, 0xE8	; 232
 a58:	d4 f3       	brlt	.-12     	; 0xa4e <__mulsf3_pse+0x84>
 a5a:	86 95       	lsr	r24
 a5c:	77 95       	ror	r23
 a5e:	67 95       	ror	r22
 a60:	b7 95       	ror	r27
 a62:	f7 95       	ror	r31
 a64:	e7 95       	ror	r30
 a66:	9f 5f       	subi	r25, 0xFF	; 255
 a68:	c1 f7       	brne	.-16     	; 0xa5a <__mulsf3_pse+0x90>
 a6a:	fe 2b       	or	r31, r30
 a6c:	88 0f       	add	r24, r24
 a6e:	91 1d       	adc	r25, r1
 a70:	96 95       	lsr	r25
 a72:	87 95       	ror	r24
 a74:	97 f9       	bld	r25, 7
 a76:	08 95       	ret
 a78:	19 f4       	brne	.+6      	; 0xa80 <__mulsf3_pse+0xb6>
 a7a:	16 f4       	brtc	.+4      	; 0xa80 <__mulsf3_pse+0xb6>
 a7c:	0c 94 84 04 	jmp	0x908	; 0x908 <__fp_nan>
 a80:	0c 94 82 05 	jmp	0xb04	; 0xb04 <__fp_mpack>

00000a84 <sqrt>:
 a84:	0e 94 ae 04 	call	0x95c	; 0x95c <__fp_splitA>
 a88:	b8 f3       	brcs	.-18     	; 0xa78 <__mulsf3_pse+0xae>
 a8a:	99 23       	and	r25, r25
 a8c:	c9 f3       	breq	.-14     	; 0xa80 <__mulsf3_pse+0xb6>
 a8e:	b6 f3       	brts	.-20     	; 0xa7c <__mulsf3_pse+0xb2>
 a90:	9f 57       	subi	r25, 0x7F	; 127
 a92:	55 0b       	sbc	r21, r21
 a94:	87 ff       	sbrs	r24, 7
 a96:	0e 94 90 05 	call	0xb20	; 0xb20 <__fp_norm2>
 a9a:	00 24       	eor	r0, r0
 a9c:	a0 e6       	ldi	r26, 0x60	; 96
 a9e:	40 ea       	ldi	r20, 0xA0	; 160
 aa0:	90 01       	movw	r18, r0
 aa2:	80 58       	subi	r24, 0x80	; 128
 aa4:	56 95       	lsr	r21
 aa6:	97 95       	ror	r25
 aa8:	28 f4       	brcc	.+10     	; 0xab4 <sqrt+0x30>
 aaa:	80 5c       	subi	r24, 0xC0	; 192
 aac:	66 0f       	add	r22, r22
 aae:	77 1f       	adc	r23, r23
 ab0:	88 1f       	adc	r24, r24
 ab2:	20 f0       	brcs	.+8      	; 0xabc <sqrt+0x38>
 ab4:	26 17       	cp	r18, r22
 ab6:	37 07       	cpc	r19, r23
 ab8:	48 07       	cpc	r20, r24
 aba:	30 f4       	brcc	.+12     	; 0xac8 <sqrt+0x44>
 abc:	62 1b       	sub	r22, r18
 abe:	73 0b       	sbc	r23, r19
 ac0:	84 0b       	sbc	r24, r20
 ac2:	20 29       	or	r18, r0
 ac4:	31 29       	or	r19, r1
 ac6:	4a 2b       	or	r20, r26
 ac8:	a6 95       	lsr	r26
 aca:	17 94       	ror	r1
 acc:	07 94       	ror	r0
 ace:	20 25       	eor	r18, r0
 ad0:	31 25       	eor	r19, r1
 ad2:	4a 27       	eor	r20, r26
 ad4:	58 f7       	brcc	.-42     	; 0xaac <sqrt+0x28>
 ad6:	66 0f       	add	r22, r22
 ad8:	77 1f       	adc	r23, r23
 ada:	88 1f       	adc	r24, r24
 adc:	20 f0       	brcs	.+8      	; 0xae6 <sqrt+0x62>
 ade:	26 17       	cp	r18, r22
 ae0:	37 07       	cpc	r19, r23
 ae2:	48 07       	cpc	r20, r24
 ae4:	30 f4       	brcc	.+12     	; 0xaf2 <sqrt+0x6e>
 ae6:	62 0b       	sbc	r22, r18
 ae8:	73 0b       	sbc	r23, r19
 aea:	84 0b       	sbc	r24, r20
 aec:	20 0d       	add	r18, r0
 aee:	31 1d       	adc	r19, r1
 af0:	41 1d       	adc	r20, r1
 af2:	a0 95       	com	r26
 af4:	81 f7       	brne	.-32     	; 0xad6 <sqrt+0x52>
 af6:	b9 01       	movw	r22, r18
 af8:	84 2f       	mov	r24, r20
 afa:	91 58       	subi	r25, 0x81	; 129
 afc:	88 0f       	add	r24, r24
 afe:	96 95       	lsr	r25
 b00:	87 95       	ror	r24
 b02:	08 95       	ret

00000b04 <__fp_mpack>:
 b04:	9f 3f       	cpi	r25, 0xFF	; 255
 b06:	31 f0       	breq	.+12     	; 0xb14 <__fp_mpack_finite+0xc>

00000b08 <__fp_mpack_finite>:
 b08:	91 50       	subi	r25, 0x01	; 1
 b0a:	20 f4       	brcc	.+8      	; 0xb14 <__fp_mpack_finite+0xc>
 b0c:	87 95       	ror	r24
 b0e:	77 95       	ror	r23
 b10:	67 95       	ror	r22
 b12:	b7 95       	ror	r27
 b14:	88 0f       	add	r24, r24
 b16:	91 1d       	adc	r25, r1
 b18:	96 95       	lsr	r25
 b1a:	87 95       	ror	r24
 b1c:	97 f9       	bld	r25, 7
 b1e:	08 95       	ret

00000b20 <__fp_norm2>:
 b20:	91 50       	subi	r25, 0x01	; 1
 b22:	50 40       	sbci	r21, 0x00	; 0
 b24:	66 0f       	add	r22, r22
 b26:	77 1f       	adc	r23, r23
 b28:	88 1f       	adc	r24, r24
 b2a:	d2 f7       	brpl	.-12     	; 0xb20 <__fp_norm2>
 b2c:	08 95       	ret

00000b2e <__mulsi3>:
 b2e:	db 01       	movw	r26, r22
 b30:	8f 93       	push	r24
 b32:	9f 93       	push	r25
 b34:	0e 94 c6 05 	call	0xb8c	; 0xb8c <__muluhisi3>
 b38:	bf 91       	pop	r27
 b3a:	af 91       	pop	r26
 b3c:	a2 9f       	mul	r26, r18
 b3e:	80 0d       	add	r24, r0
 b40:	91 1d       	adc	r25, r1
 b42:	a3 9f       	mul	r26, r19
 b44:	90 0d       	add	r25, r0
 b46:	b2 9f       	mul	r27, r18
 b48:	90 0d       	add	r25, r0
 b4a:	11 24       	eor	r1, r1
 b4c:	08 95       	ret

00000b4e <__divmodsi4>:
 b4e:	05 2e       	mov	r0, r21
 b50:	97 fb       	bst	r25, 7
 b52:	1e f4       	brtc	.+6      	; 0xb5a <__divmodsi4+0xc>
 b54:	00 94       	com	r0
 b56:	0e 94 be 05 	call	0xb7c	; 0xb7c <__negsi2>
 b5a:	57 fd       	sbrc	r21, 7
 b5c:	07 d0       	rcall	.+14     	; 0xb6c <__divmodsi4_neg2>
 b5e:	0e 94 d1 05 	call	0xba2	; 0xba2 <__udivmodsi4>
 b62:	07 fc       	sbrc	r0, 7
 b64:	03 d0       	rcall	.+6      	; 0xb6c <__divmodsi4_neg2>
 b66:	4e f4       	brtc	.+18     	; 0xb7a <__divmodsi4_exit>
 b68:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__negsi2>

00000b6c <__divmodsi4_neg2>:
 b6c:	50 95       	com	r21
 b6e:	40 95       	com	r20
 b70:	30 95       	com	r19
 b72:	21 95       	neg	r18
 b74:	3f 4f       	sbci	r19, 0xFF	; 255
 b76:	4f 4f       	sbci	r20, 0xFF	; 255
 b78:	5f 4f       	sbci	r21, 0xFF	; 255

00000b7a <__divmodsi4_exit>:
 b7a:	08 95       	ret

00000b7c <__negsi2>:
 b7c:	90 95       	com	r25
 b7e:	80 95       	com	r24
 b80:	70 95       	com	r23
 b82:	61 95       	neg	r22
 b84:	7f 4f       	sbci	r23, 0xFF	; 255
 b86:	8f 4f       	sbci	r24, 0xFF	; 255
 b88:	9f 4f       	sbci	r25, 0xFF	; 255
 b8a:	08 95       	ret

00000b8c <__muluhisi3>:
 b8c:	0e 94 f3 05 	call	0xbe6	; 0xbe6 <__umulhisi3>
 b90:	a5 9f       	mul	r26, r21
 b92:	90 0d       	add	r25, r0
 b94:	b4 9f       	mul	r27, r20
 b96:	90 0d       	add	r25, r0
 b98:	a4 9f       	mul	r26, r20
 b9a:	80 0d       	add	r24, r0
 b9c:	91 1d       	adc	r25, r1
 b9e:	11 24       	eor	r1, r1
 ba0:	08 95       	ret

00000ba2 <__udivmodsi4>:
 ba2:	a1 e2       	ldi	r26, 0x21	; 33
 ba4:	1a 2e       	mov	r1, r26
 ba6:	aa 1b       	sub	r26, r26
 ba8:	bb 1b       	sub	r27, r27
 baa:	fd 01       	movw	r30, r26
 bac:	0d c0       	rjmp	.+26     	; 0xbc8 <__udivmodsi4_ep>

00000bae <__udivmodsi4_loop>:
 bae:	aa 1f       	adc	r26, r26
 bb0:	bb 1f       	adc	r27, r27
 bb2:	ee 1f       	adc	r30, r30
 bb4:	ff 1f       	adc	r31, r31
 bb6:	a2 17       	cp	r26, r18
 bb8:	b3 07       	cpc	r27, r19
 bba:	e4 07       	cpc	r30, r20
 bbc:	f5 07       	cpc	r31, r21
 bbe:	20 f0       	brcs	.+8      	; 0xbc8 <__udivmodsi4_ep>
 bc0:	a2 1b       	sub	r26, r18
 bc2:	b3 0b       	sbc	r27, r19
 bc4:	e4 0b       	sbc	r30, r20
 bc6:	f5 0b       	sbc	r31, r21

00000bc8 <__udivmodsi4_ep>:
 bc8:	66 1f       	adc	r22, r22
 bca:	77 1f       	adc	r23, r23
 bcc:	88 1f       	adc	r24, r24
 bce:	99 1f       	adc	r25, r25
 bd0:	1a 94       	dec	r1
 bd2:	69 f7       	brne	.-38     	; 0xbae <__udivmodsi4_loop>
 bd4:	60 95       	com	r22
 bd6:	70 95       	com	r23
 bd8:	80 95       	com	r24
 bda:	90 95       	com	r25
 bdc:	9b 01       	movw	r18, r22
 bde:	ac 01       	movw	r20, r24
 be0:	bd 01       	movw	r22, r26
 be2:	cf 01       	movw	r24, r30
 be4:	08 95       	ret

00000be6 <__umulhisi3>:
 be6:	a2 9f       	mul	r26, r18
 be8:	b0 01       	movw	r22, r0
 bea:	b3 9f       	mul	r27, r19
 bec:	c0 01       	movw	r24, r0
 bee:	a3 9f       	mul	r26, r19
 bf0:	70 0d       	add	r23, r0
 bf2:	81 1d       	adc	r24, r1
 bf4:	11 24       	eor	r1, r1
 bf6:	91 1d       	adc	r25, r1
 bf8:	b2 9f       	mul	r27, r18
 bfa:	70 0d       	add	r23, r0
 bfc:	81 1d       	adc	r24, r1
 bfe:	11 24       	eor	r1, r1
 c00:	91 1d       	adc	r25, r1
 c02:	08 95       	ret

00000c04 <_exit>:
 c04:	f8 94       	cli

00000c06 <__stop_program>:
 c06:	ff cf       	rjmp	.-2      	; 0xc06 <__stop_program>
