
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b46  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000b46  00000bba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  00000bba  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000bcc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000c08  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009a0  00000000  00000000  00000c30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b9  00000000  00000000  000015d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001c1  00000000  00000000  00001c89  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000194  00000000  00000000  00001e4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000044f  00000000  00000000  00001fe0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000075a  00000000  00000000  0000242f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00002b89  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <main>
  64:	0c 94 a1 05 	jmp	0xb42	; 0xb42 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <_Z7Receivev>:
#define FOSC 1000000// Clock Speed
#define BAUD 9600
#define ubbr_value FOSC/16/BAUD-1
int Receive()
{
	while (! (UCSRA & (1 << RXC)) );
  6c:	5f 9b       	sbis	0x0b, 7	; 11
  6e:	fe cf       	rjmp	.-4      	; 0x6c <_Z7Receivev>
	return UDR;
  70:	8c b1       	in	r24, 0x0c	; 12
}
  72:	90 e0       	ldi	r25, 0x00	; 0
  74:	08 95       	ret

00000076 <_Z8Transmith>:

void Transmit(unsigned char data)
{
	while (! (UCSRA & (1 << UDRE)) );
  76:	5d 9b       	sbis	0x0b, 5	; 11
  78:	fe cf       	rjmp	.-4      	; 0x76 <_Z8Transmith>
	UDR = data;
  7a:	8c b9       	out	0x0c, r24	; 12
  7c:	08 95       	ret

0000007e <_Z3mapeeeee>:

}

long double map(long double x, long double in_min, long double in_max, long double out_min, long double out_max)
{
  7e:	4f 92       	push	r4
  80:	5f 92       	push	r5
  82:	6f 92       	push	r6
  84:	7f 92       	push	r7
  86:	af 92       	push	r10
  88:	bf 92       	push	r11
  8a:	cf 92       	push	r12
  8c:	df 92       	push	r13
  8e:	ef 92       	push	r14
  90:	ff 92       	push	r15
  92:	0f 93       	push	r16
  94:	1f 93       	push	r17
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	28 97       	sbiw	r28, 0x08	; 8
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	f8 94       	cli
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	0f be       	out	0x3f, r0	; 63
  a8:	cd bf       	out	0x3d, r28	; 61
  aa:	29 01       	movw	r4, r18
  ac:	3a 01       	movw	r6, r20
  ae:	ed 82       	std	Y+5, r14	; 0x05
  b0:	fe 82       	std	Y+6, r15	; 0x06
  b2:	0f 83       	std	Y+7, r16	; 0x07
  b4:	18 87       	std	Y+8, r17	; 0x08
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  b6:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
  ba:	69 83       	std	Y+1, r22	; 0x01
  bc:	7a 83       	std	Y+2, r23	; 0x02
  be:	8b 83       	std	Y+3, r24	; 0x03
  c0:	9c 83       	std	Y+4, r25	; 0x04
  c2:	a6 01       	movw	r20, r12
  c4:	95 01       	movw	r18, r10
  c6:	69 8d       	ldd	r22, Y+25	; 0x19
  c8:	7a 8d       	ldd	r23, Y+26	; 0x1a
  ca:	8b 8d       	ldd	r24, Y+27	; 0x1b
  cc:	9c 8d       	ldd	r25, Y+28	; 0x1c
  ce:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
  d2:	9b 01       	movw	r18, r22
  d4:	ac 01       	movw	r20, r24
  d6:	69 81       	ldd	r22, Y+1	; 0x01
  d8:	7a 81       	ldd	r23, Y+2	; 0x02
  da:	8b 81       	ldd	r24, Y+3	; 0x03
  dc:	9c 81       	ldd	r25, Y+4	; 0x04
  de:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
  e2:	69 83       	std	Y+1, r22	; 0x01
  e4:	7a 83       	std	Y+2, r23	; 0x02
  e6:	8b 83       	std	Y+3, r24	; 0x03
  e8:	9c 83       	std	Y+4, r25	; 0x04
  ea:	a3 01       	movw	r20, r6
  ec:	92 01       	movw	r18, r4
  ee:	c8 01       	movw	r24, r16
  f0:	b7 01       	movw	r22, r14
  f2:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
  f6:	9b 01       	movw	r18, r22
  f8:	ac 01       	movw	r20, r24
  fa:	69 81       	ldd	r22, Y+1	; 0x01
  fc:	7a 81       	ldd	r23, Y+2	; 0x02
  fe:	8b 81       	ldd	r24, Y+3	; 0x03
 100:	9c 81       	ldd	r25, Y+4	; 0x04
 102:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <__divsf3>
 106:	a6 01       	movw	r20, r12
 108:	95 01       	movw	r18, r10
 10a:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
}
 10e:	28 96       	adiw	r28, 0x08	; 8
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	f8 94       	cli
 114:	de bf       	out	0x3e, r29	; 62
 116:	0f be       	out	0x3f, r0	; 63
 118:	cd bf       	out	0x3d, r28	; 61
 11a:	df 91       	pop	r29
 11c:	cf 91       	pop	r28
 11e:	1f 91       	pop	r17
 120:	0f 91       	pop	r16
 122:	ff 90       	pop	r15
 124:	ef 90       	pop	r14
 126:	df 90       	pop	r13
 128:	cf 90       	pop	r12
 12a:	bf 90       	pop	r11
 12c:	af 90       	pop	r10
 12e:	7f 90       	pop	r7
 130:	6f 90       	pop	r6
 132:	5f 90       	pop	r5
 134:	4f 90       	pop	r4
 136:	08 95       	ret

00000138 <_Z22ellipticalSquareToDisceeReS_>:
void ellipticalSquareToDisc(long double x, long double y, long double& u, long double& v)
{
 138:	4f 92       	push	r4
 13a:	5f 92       	push	r5
 13c:	6f 92       	push	r6
 13e:	7f 92       	push	r7
 140:	8f 92       	push	r8
 142:	9f 92       	push	r9
 144:	af 92       	push	r10
 146:	bf 92       	push	r11
 148:	ef 92       	push	r14
 14a:	ff 92       	push	r15
 14c:	0f 93       	push	r16
 14e:	1f 93       	push	r17
 150:	2b 01       	movw	r4, r22
 152:	3c 01       	movw	r6, r24
 154:	49 01       	movw	r8, r18
 156:	5a 01       	movw	r10, r20
    u = x * sqrt(1.0 - y*y/2.0);
 158:	ca 01       	movw	r24, r20
 15a:	b9 01       	movw	r22, r18
 15c:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 160:	20 e0       	ldi	r18, 0x00	; 0
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	40 e0       	ldi	r20, 0x00	; 0
 166:	5f e3       	ldi	r21, 0x3F	; 63
 168:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 16c:	9b 01       	movw	r18, r22
 16e:	ac 01       	movw	r20, r24
 170:	60 e0       	ldi	r22, 0x00	; 0
 172:	70 e0       	ldi	r23, 0x00	; 0
 174:	80 e8       	ldi	r24, 0x80	; 128
 176:	9f e3       	ldi	r25, 0x3F	; 63
 178:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 17c:	0e 94 28 05 	call	0xa50	; 0xa50 <sqrt>
 180:	a3 01       	movw	r20, r6
 182:	92 01       	movw	r18, r4
 184:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 188:	f8 01       	movw	r30, r16
 18a:	60 83       	st	Z, r22
 18c:	71 83       	std	Z+1, r23	; 0x01
 18e:	82 83       	std	Z+2, r24	; 0x02
 190:	93 83       	std	Z+3, r25	; 0x03
    v = y * sqrt(1.0 - x*x/2.0);
 192:	a3 01       	movw	r20, r6
 194:	92 01       	movw	r18, r4
 196:	c3 01       	movw	r24, r6
 198:	b2 01       	movw	r22, r4
 19a:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 19e:	20 e0       	ldi	r18, 0x00	; 0
 1a0:	30 e0       	ldi	r19, 0x00	; 0
 1a2:	40 e0       	ldi	r20, 0x00	; 0
 1a4:	5f e3       	ldi	r21, 0x3F	; 63
 1a6:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 1aa:	9b 01       	movw	r18, r22
 1ac:	ac 01       	movw	r20, r24
 1ae:	60 e0       	ldi	r22, 0x00	; 0
 1b0:	70 e0       	ldi	r23, 0x00	; 0
 1b2:	80 e8       	ldi	r24, 0x80	; 128
 1b4:	9f e3       	ldi	r25, 0x3F	; 63
 1b6:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 1ba:	0e 94 28 05 	call	0xa50	; 0xa50 <sqrt>
 1be:	9b 01       	movw	r18, r22
 1c0:	ac 01       	movw	r20, r24
 1c2:	c5 01       	movw	r24, r10
 1c4:	b4 01       	movw	r22, r8
 1c6:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 1ca:	f7 01       	movw	r30, r14
 1cc:	60 83       	st	Z, r22
 1ce:	71 83       	std	Z+1, r23	; 0x01
 1d0:	82 83       	std	Z+2, r24	; 0x02
 1d2:	93 83       	std	Z+3, r25	; 0x03
}
 1d4:	1f 91       	pop	r17
 1d6:	0f 91       	pop	r16
 1d8:	ff 90       	pop	r15
 1da:	ef 90       	pop	r14
 1dc:	bf 90       	pop	r11
 1de:	af 90       	pop	r10
 1e0:	9f 90       	pop	r9
 1e2:	8f 90       	pop	r8
 1e4:	7f 90       	pop	r7
 1e6:	6f 90       	pop	r6
 1e8:	5f 90       	pop	r5
 1ea:	4f 90       	pop	r4
 1ec:	08 95       	ret

000001ee <_Z22ellipticalDiscToSquareeeReS_>:

void ellipticalDiscToSquare(long double u, long double v, long double& x, long double& y)
{
 1ee:	4f 92       	push	r4
 1f0:	5f 92       	push	r5
 1f2:	6f 92       	push	r6
 1f4:	7f 92       	push	r7
 1f6:	8f 92       	push	r8
 1f8:	9f 92       	push	r9
 1fa:	af 92       	push	r10
 1fc:	bf 92       	push	r11
 1fe:	cf 92       	push	r12
 200:	df 92       	push	r13
 202:	ef 92       	push	r14
 204:	ff 92       	push	r15
 206:	0f 93       	push	r16
 208:	1f 93       	push	r17
 20a:	cf 93       	push	r28
 20c:	df 93       	push	r29
 20e:	cd b7       	in	r28, 0x3d	; 61
 210:	de b7       	in	r29, 0x3e	; 62
 212:	2e 97       	sbiw	r28, 0x0e	; 14
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	f8 94       	cli
 218:	de bf       	out	0x3e, r29	; 62
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	cd bf       	out	0x3d, r28	; 61
 21e:	4b 01       	movw	r8, r22
 220:	5c 01       	movw	r10, r24
 222:	29 01       	movw	r4, r18
 224:	3a 01       	movw	r6, r20
 226:	fe 86       	std	Y+14, r15	; 0x0e
 228:	ed 86       	std	Y+13, r14	; 0x0d
    long double u2 = u * u;
 22a:	9b 01       	movw	r18, r22
 22c:	ac 01       	movw	r20, r24
 22e:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 232:	6b 01       	movw	r12, r22
 234:	7c 01       	movw	r14, r24
    long double v2 = v * v;
 236:	a3 01       	movw	r20, r6
 238:	92 01       	movw	r18, r4
 23a:	c3 01       	movw	r24, r6
 23c:	b2 01       	movw	r22, r4
 23e:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 242:	69 83       	std	Y+1, r22	; 0x01
 244:	7a 83       	std	Y+2, r23	; 0x02
 246:	8b 83       	std	Y+3, r24	; 0x03
 248:	9c 83       	std	Y+4, r25	; 0x04
    long double twosqrt2 = 2.0 * sqrt(2.0);
    long double subtermx = 2.0 + u2 - v2;
 24a:	20 e0       	ldi	r18, 0x00	; 0
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	40 e0       	ldi	r20, 0x00	; 0
 250:	50 e4       	ldi	r21, 0x40	; 64
 252:	c7 01       	movw	r24, r14
 254:	b6 01       	movw	r22, r12
 256:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 25a:	29 81       	ldd	r18, Y+1	; 0x01
 25c:	3a 81       	ldd	r19, Y+2	; 0x02
 25e:	4b 81       	ldd	r20, Y+3	; 0x03
 260:	5c 81       	ldd	r21, Y+4	; 0x04
 262:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 266:	6d 83       	std	Y+5, r22	; 0x05
 268:	7e 83       	std	Y+6, r23	; 0x06
 26a:	8f 83       	std	Y+7, r24	; 0x07
 26c:	98 87       	std	Y+8, r25	; 0x08
    long double subtermy = 2.0 - u2 + v2;
 26e:	a7 01       	movw	r20, r14
 270:	96 01       	movw	r18, r12
 272:	60 e0       	ldi	r22, 0x00	; 0
 274:	70 e0       	ldi	r23, 0x00	; 0
 276:	80 e0       	ldi	r24, 0x00	; 0
 278:	90 e4       	ldi	r25, 0x40	; 64
 27a:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 27e:	29 81       	ldd	r18, Y+1	; 0x01
 280:	3a 81       	ldd	r19, Y+2	; 0x02
 282:	4b 81       	ldd	r20, Y+3	; 0x03
 284:	5c 81       	ldd	r21, Y+4	; 0x04
 286:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 28a:	6b 01       	movw	r12, r22
 28c:	7c 01       	movw	r14, r24
    long double termx1 = subtermx + u * twosqrt2;
 28e:	23 ef       	ldi	r18, 0xF3	; 243
 290:	34 e0       	ldi	r19, 0x04	; 4
 292:	45 e3       	ldi	r20, 0x35	; 53
 294:	50 e4       	ldi	r21, 0x40	; 64
 296:	c5 01       	movw	r24, r10
 298:	b4 01       	movw	r22, r8
 29a:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 29e:	4b 01       	movw	r8, r22
 2a0:	5c 01       	movw	r10, r24
    long double termx2 = subtermx - u * twosqrt2;
    long double termy1 = subtermy + v * twosqrt2;
 2a2:	23 ef       	ldi	r18, 0xF3	; 243
 2a4:	34 e0       	ldi	r19, 0x04	; 4
 2a6:	45 e3       	ldi	r20, 0x35	; 53
 2a8:	50 e4       	ldi	r21, 0x40	; 64
 2aa:	c3 01       	movw	r24, r6
 2ac:	b2 01       	movw	r22, r4
 2ae:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 2b2:	69 83       	std	Y+1, r22	; 0x01
 2b4:	7a 83       	std	Y+2, r23	; 0x02
 2b6:	8b 83       	std	Y+3, r24	; 0x03
 2b8:	9c 83       	std	Y+4, r25	; 0x04
    long double termy2 = subtermy - v * twosqrt2;
    x = 0.5 * sqrt(termx1) - 0.5 * sqrt(termx2);
 2ba:	a5 01       	movw	r20, r10
 2bc:	94 01       	movw	r18, r8
 2be:	6d 81       	ldd	r22, Y+5	; 0x05
 2c0:	7e 81       	ldd	r23, Y+6	; 0x06
 2c2:	8f 81       	ldd	r24, Y+7	; 0x07
 2c4:	98 85       	ldd	r25, Y+8	; 0x08
 2c6:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 2ca:	0e 94 28 05 	call	0xa50	; 0xa50 <sqrt>
 2ce:	69 87       	std	Y+9, r22	; 0x09
 2d0:	7a 87       	std	Y+10, r23	; 0x0a
 2d2:	8b 87       	std	Y+11, r24	; 0x0b
 2d4:	9c 87       	std	Y+12, r25	; 0x0c
 2d6:	a5 01       	movw	r20, r10
 2d8:	94 01       	movw	r18, r8
 2da:	6d 81       	ldd	r22, Y+5	; 0x05
 2dc:	7e 81       	ldd	r23, Y+6	; 0x06
 2de:	8f 81       	ldd	r24, Y+7	; 0x07
 2e0:	98 85       	ldd	r25, Y+8	; 0x08
 2e2:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 2e6:	0e 94 28 05 	call	0xa50	; 0xa50 <sqrt>
 2ea:	2b 01       	movw	r4, r22
 2ec:	3c 01       	movw	r6, r24
 2ee:	20 e0       	ldi	r18, 0x00	; 0
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	40 e0       	ldi	r20, 0x00	; 0
 2f4:	5f e3       	ldi	r21, 0x3F	; 63
 2f6:	69 85       	ldd	r22, Y+9	; 0x09
 2f8:	7a 85       	ldd	r23, Y+10	; 0x0a
 2fa:	8b 85       	ldd	r24, Y+11	; 0x0b
 2fc:	9c 85       	ldd	r25, Y+12	; 0x0c
 2fe:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 302:	4b 01       	movw	r8, r22
 304:	5c 01       	movw	r10, r24
 306:	20 e0       	ldi	r18, 0x00	; 0
 308:	30 e0       	ldi	r19, 0x00	; 0
 30a:	40 e0       	ldi	r20, 0x00	; 0
 30c:	5f e3       	ldi	r21, 0x3F	; 63
 30e:	c3 01       	movw	r24, r6
 310:	b2 01       	movw	r22, r4
 312:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 316:	9b 01       	movw	r18, r22
 318:	ac 01       	movw	r20, r24
 31a:	c5 01       	movw	r24, r10
 31c:	b4 01       	movw	r22, r8
 31e:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 322:	f8 01       	movw	r30, r16
 324:	60 83       	st	Z, r22
 326:	71 83       	std	Z+1, r23	; 0x01
 328:	82 83       	std	Z+2, r24	; 0x02
 32a:	93 83       	std	Z+3, r25	; 0x03
    y = 0.5 * sqrt(termy1) - 0.5 * sqrt(termy2);
 32c:	29 81       	ldd	r18, Y+1	; 0x01
 32e:	3a 81       	ldd	r19, Y+2	; 0x02
 330:	4b 81       	ldd	r20, Y+3	; 0x03
 332:	5c 81       	ldd	r21, Y+4	; 0x04
 334:	c7 01       	movw	r24, r14
 336:	b6 01       	movw	r22, r12
 338:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 33c:	0e 94 28 05 	call	0xa50	; 0xa50 <sqrt>
 340:	4b 01       	movw	r8, r22
 342:	5c 01       	movw	r10, r24
 344:	29 81       	ldd	r18, Y+1	; 0x01
 346:	3a 81       	ldd	r19, Y+2	; 0x02
 348:	4b 81       	ldd	r20, Y+3	; 0x03
 34a:	5c 81       	ldd	r21, Y+4	; 0x04
 34c:	c7 01       	movw	r24, r14
 34e:	b6 01       	movw	r22, r12
 350:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 354:	0e 94 28 05 	call	0xa50	; 0xa50 <sqrt>
 358:	2b 01       	movw	r4, r22
 35a:	3c 01       	movw	r6, r24
 35c:	20 e0       	ldi	r18, 0x00	; 0
 35e:	30 e0       	ldi	r19, 0x00	; 0
 360:	40 e0       	ldi	r20, 0x00	; 0
 362:	5f e3       	ldi	r21, 0x3F	; 63
 364:	c5 01       	movw	r24, r10
 366:	b4 01       	movw	r22, r8
 368:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 36c:	6b 01       	movw	r12, r22
 36e:	7c 01       	movw	r14, r24
 370:	20 e0       	ldi	r18, 0x00	; 0
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	40 e0       	ldi	r20, 0x00	; 0
 376:	5f e3       	ldi	r21, 0x3F	; 63
 378:	c3 01       	movw	r24, r6
 37a:	b2 01       	movw	r22, r4
 37c:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 380:	9b 01       	movw	r18, r22
 382:	ac 01       	movw	r20, r24
 384:	c7 01       	movw	r24, r14
 386:	b6 01       	movw	r22, r12
 388:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 38c:	ed 85       	ldd	r30, Y+13	; 0x0d
 38e:	fe 85       	ldd	r31, Y+14	; 0x0e
 390:	60 83       	st	Z, r22
 392:	71 83       	std	Z+1, r23	; 0x01
 394:	82 83       	std	Z+2, r24	; 0x02
 396:	93 83       	std	Z+3, r25	; 0x03

}
 398:	2e 96       	adiw	r28, 0x0e	; 14
 39a:	0f b6       	in	r0, 0x3f	; 63
 39c:	f8 94       	cli
 39e:	de bf       	out	0x3e, r29	; 62
 3a0:	0f be       	out	0x3f, r0	; 63
 3a2:	cd bf       	out	0x3d, r28	; 61
 3a4:	df 91       	pop	r29
 3a6:	cf 91       	pop	r28
 3a8:	1f 91       	pop	r17
 3aa:	0f 91       	pop	r16
 3ac:	ff 90       	pop	r15
 3ae:	ef 90       	pop	r14
 3b0:	df 90       	pop	r13
 3b2:	cf 90       	pop	r12
 3b4:	bf 90       	pop	r11
 3b6:	af 90       	pop	r10
 3b8:	9f 90       	pop	r9
 3ba:	8f 90       	pop	r8
 3bc:	7f 90       	pop	r7
 3be:	6f 90       	pop	r6
 3c0:	5f 90       	pop	r5
 3c2:	4f 90       	pop	r4
 3c4:	08 95       	ret

000003c6 <main>:
int main (void)
{
 3c6:	cf 93       	push	r28
 3c8:	df 93       	push	r29
 3ca:	cd b7       	in	r28, 0x3d	; 61
 3cc:	de b7       	in	r29, 0x3e	; 62
 3ce:	2a 97       	sbiw	r28, 0x0a	; 10
 3d0:	0f b6       	in	r0, 0x3f	; 63
 3d2:	f8 94       	cli
 3d4:	de bf       	out	0x3e, r29	; 62
 3d6:	0f be       	out	0x3f, r0	; 63
 3d8:	cd bf       	out	0x3d, r28	; 61
	TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 3da:	83 b7       	in	r24, 0x33	; 51
 3dc:	89 66       	ori	r24, 0x69	; 105
 3de:	83 bf       	out	0x33, r24	; 51
DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 3e0:	87 b3       	in	r24, 0x17	; 23
 3e2:	8b 60       	ori	r24, 0x0B	; 11
 3e4:	87 bb       	out	0x17, r24	; 23
TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 3e6:	85 b5       	in	r24, 0x25	; 37
 3e8:	89 66       	ori	r24, 0x69	; 105
 3ea:	85 bd       	out	0x25, r24	; 37
DDRD |= 1<< PB7 | 1<< PB2;
 3ec:	81 b3       	in	r24, 0x11	; 17
 3ee:	84 68       	ori	r24, 0x84	; 132
 3f0:	81 bb       	out	0x11, r24	; 17
PORTB &= ~(1<< PINB0);
 3f2:	c0 98       	cbi	0x18, 0	; 24
PORTD &= ~(1<< PIND2);
 3f4:	92 98       	cbi	0x12, 2	; 18
 UCSRA = (1 << U2X);
 3f6:	82 e0       	ldi	r24, 0x02	; 2
 3f8:	8b b9       	out	0x0b, r24	; 11
	UBRRH = (unsigned char) (ubbr_value >> 8);
 3fa:	10 bc       	out	0x20, r1	; 32
	UBRRL = (unsigned char) ubbr_value;
 3fc:	8f ef       	ldi	r24, 0xFF	; 255
 3fe:	89 b9       	out	0x09, r24	; 9
	UCSRB = (1 << RXEN);
 400:	80 e1       	ldi	r24, 0x10	; 16
 402:	8a b9       	out	0x0a, r24	; 10
	UCSRC = (1 << URSEL) | (3 << UCSZ0);
 404:	86 e8       	ldi	r24, 0x86	; 134
 406:	80 bd       	out	0x20, r24	; 32
	while (1)
    {
			if(Receive()!=0x11)
 408:	0e 94 36 00 	call	0x6c	; 0x6c <_Z7Receivev>
 40c:	41 97       	sbiw	r24, 0x11	; 17
 40e:	e1 f7       	brne	.-8      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
			continue;
			int c1= Receive();
 410:	0e 94 36 00 	call	0x6c	; 0x6c <_Z7Receivev>
 414:	3c 01       	movw	r6, r24
	    int x2 = (Receive())<<8 | c1;
 416:	0e 94 36 00 	call	0x6c	; 0x6c <_Z7Receivev>
 41a:	38 2e       	mov	r3, r24
 41c:	21 2c       	mov	r2, r1
 41e:	62 28       	or	r6, r2
 420:	73 28       	or	r7, r3
	    int c2=Receive();
 422:	0e 94 36 00 	call	0x6c	; 0x6c <_Z7Receivev>
 426:	5c 01       	movw	r10, r24
	    int y2=(Receive())<<8 | c2;
 428:	0e 94 36 00 	call	0x6c	; 0x6c <_Z7Receivev>
		long double x1 = x2 - 512;
		long double y1 = 512 - y2;
		x1=map(x1,-512,512,-1,1);
		y1=map(y1,-512,512,-1,1);
		long double xans,yans;
		ellipticalSquareToDisc(x1, y1, xans, yans);
 42c:	8a 87       	std	Y+10, r24	; 0x0a
 42e:	19 86       	std	Y+9, r1	; 0x09
 430:	29 85       	ldd	r18, Y+9	; 0x09
 432:	3a 85       	ldd	r19, Y+10	; 0x0a
 434:	a2 2a       	or	r10, r18
 436:	b3 2a       	or	r11, r19
 438:	60 e0       	ldi	r22, 0x00	; 0
 43a:	72 e0       	ldi	r23, 0x02	; 2
 43c:	6a 19       	sub	r22, r10
 43e:	7b 09       	sbc	r23, r11
 440:	07 2e       	mov	r0, r23
 442:	00 0c       	add	r0, r0
 444:	88 0b       	sbc	r24, r24
 446:	99 0b       	sbc	r25, r25
 448:	0e 94 24 04 	call	0x848	; 0x848 <__floatsisf>
 44c:	20 e0       	ldi	r18, 0x00	; 0
 44e:	30 e0       	ldi	r19, 0x00	; 0
 450:	40 e0       	ldi	r20, 0x00	; 0
 452:	54 e4       	ldi	r21, 0x44	; 68
 454:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 458:	9b 01       	movw	r18, r22
 45a:	ac 01       	movw	r20, r24
 45c:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 460:	20 e0       	ldi	r18, 0x00	; 0
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	40 e8       	ldi	r20, 0x80	; 128
 466:	5a e3       	ldi	r21, 0x3A	; 58
 468:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 46c:	20 e0       	ldi	r18, 0x00	; 0
 46e:	30 e0       	ldi	r19, 0x00	; 0
 470:	40 e8       	ldi	r20, 0x80	; 128
 472:	5f e3       	ldi	r21, 0x3F	; 63
 474:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 478:	4b 01       	movw	r8, r22
 47a:	5c 01       	movw	r10, r24
 47c:	b3 01       	movw	r22, r6
 47e:	72 50       	subi	r23, 0x02	; 2
 480:	07 2e       	mov	r0, r23
 482:	00 0c       	add	r0, r0
 484:	88 0b       	sbc	r24, r24
 486:	99 0b       	sbc	r25, r25
 488:	0e 94 24 04 	call	0x848	; 0x848 <__floatsisf>
 48c:	20 e0       	ldi	r18, 0x00	; 0
 48e:	30 e0       	ldi	r19, 0x00	; 0
 490:	40 e0       	ldi	r20, 0x00	; 0
 492:	54 e4       	ldi	r21, 0x44	; 68
 494:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 498:	9b 01       	movw	r18, r22
 49a:	ac 01       	movw	r20, r24
 49c:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 4a0:	20 e0       	ldi	r18, 0x00	; 0
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	40 e8       	ldi	r20, 0x80	; 128
 4a6:	5a e3       	ldi	r21, 0x3A	; 58
 4a8:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 4ac:	20 e0       	ldi	r18, 0x00	; 0
 4ae:	30 e0       	ldi	r19, 0x00	; 0
 4b0:	40 e8       	ldi	r20, 0x80	; 128
 4b2:	5f e3       	ldi	r21, 0x3F	; 63
 4b4:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 4b8:	9e 01       	movw	r18, r28
 4ba:	2f 5f       	subi	r18, 0xFF	; 255
 4bc:	3f 4f       	sbci	r19, 0xFF	; 255
 4be:	79 01       	movw	r14, r18
 4c0:	8e 01       	movw	r16, r28
 4c2:	0b 5f       	subi	r16, 0xFB	; 251
 4c4:	1f 4f       	sbci	r17, 0xFF	; 255
 4c6:	a5 01       	movw	r20, r10
 4c8:	94 01       	movw	r18, r8
 4ca:	0e 94 9c 00 	call	0x138	; 0x138 <_Z22ellipticalSquareToDisceeReS_>



		long double x = (xans * 0.707) + (yans * 0.707);
 4ce:	cd 80       	ldd	r12, Y+5	; 0x05
 4d0:	de 80       	ldd	r13, Y+6	; 0x06
 4d2:	ef 80       	ldd	r14, Y+7	; 0x07
 4d4:	f8 84       	ldd	r15, Y+8	; 0x08
 4d6:	24 ef       	ldi	r18, 0xF4	; 244
 4d8:	3d ef       	ldi	r19, 0xFD	; 253
 4da:	44 e3       	ldi	r20, 0x34	; 52
 4dc:	5f e3       	ldi	r21, 0x3F	; 63
 4de:	69 81       	ldd	r22, Y+1	; 0x01
 4e0:	7a 81       	ldd	r23, Y+2	; 0x02
 4e2:	8b 81       	ldd	r24, Y+3	; 0x03
 4e4:	9c 81       	ldd	r25, Y+4	; 0x04
 4e6:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 4ea:	4b 01       	movw	r8, r22
 4ec:	5c 01       	movw	r10, r24
		long double y = (-xans * 0.707) + (yans * 0.707);
		ellipticalDiscToSquare(x,y,xans,yans);
 4ee:	c7 01       	movw	r24, r14
 4f0:	b6 01       	movw	r22, r12
 4f2:	90 58       	subi	r25, 0x80	; 128
 4f4:	24 ef       	ldi	r18, 0xF4	; 244
 4f6:	3d ef       	ldi	r19, 0xFD	; 253
 4f8:	44 e3       	ldi	r20, 0x34	; 52
 4fa:	5f e3       	ldi	r21, 0x3F	; 63
 4fc:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 500:	a5 01       	movw	r20, r10
 502:	94 01       	movw	r18, r8
 504:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 508:	2b 01       	movw	r4, r22
 50a:	3c 01       	movw	r6, r24
 50c:	24 ef       	ldi	r18, 0xF4	; 244
 50e:	3d ef       	ldi	r19, 0xFD	; 253
 510:	44 e3       	ldi	r20, 0x34	; 52
 512:	5f e3       	ldi	r21, 0x3F	; 63
 514:	c7 01       	movw	r24, r14
 516:	b6 01       	movw	r22, r12
 518:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 51c:	a5 01       	movw	r20, r10
 51e:	94 01       	movw	r18, r8
 520:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 524:	9e 01       	movw	r18, r28
 526:	2f 5f       	subi	r18, 0xFF	; 255
 528:	3f 4f       	sbci	r19, 0xFF	; 255
 52a:	79 01       	movw	r14, r18
 52c:	a3 01       	movw	r20, r6
 52e:	92 01       	movw	r18, r4
 530:	0e 94 f7 00 	call	0x1ee	; 0x1ee <_Z22ellipticalDiscToSquareeeReS_>

}

long double map(long double x, long double in_min, long double in_max, long double out_min, long double out_max)
{
  return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
 534:	21 e1       	ldi	r18, 0x11	; 17
 536:	34 ec       	ldi	r19, 0xC4	; 196
 538:	4d e7       	ldi	r20, 0x7D	; 125
 53a:	5f e3       	ldi	r21, 0x3F	; 63
 53c:	6d 81       	ldd	r22, Y+5	; 0x05
 53e:	7e 81       	ldd	r23, Y+6	; 0x06
 540:	8f 81       	ldd	r24, Y+7	; 0x07
 542:	98 85       	ldd	r25, Y+8	; 0x08
 544:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 548:	20 e0       	ldi	r18, 0x00	; 0
 54a:	30 e0       	ldi	r19, 0x00	; 0
 54c:	4f ef       	ldi	r20, 0xFF	; 255
 54e:	53 e4       	ldi	r21, 0x43	; 67
 550:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 554:	21 e1       	ldi	r18, 0x11	; 17
 556:	34 ec       	ldi	r19, 0xC4	; 196
 558:	4d ef       	ldi	r20, 0xFD	; 253
 55a:	5f e3       	ldi	r21, 0x3F	; 63
 55c:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <__divsf3>
 560:	20 e0       	ldi	r18, 0x00	; 0
 562:	30 e0       	ldi	r19, 0x00	; 0
 564:	4f e7       	ldi	r20, 0x7F	; 127
 566:	53 e4       	ldi	r21, 0x43	; 67
 568:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 56c:	2b 01       	movw	r4, r22
 56e:	3c 01       	movw	r6, r24

		long double x = (xans * 0.707) + (yans * 0.707);
		long double y = (-xans * 0.707) + (yans * 0.707);
		ellipticalDiscToSquare(x,y,xans,yans);
		long double x3=map(xans,-0.991273,0.991273,-255,255);
		long double y3=map(yans,-0.991273,0.991273,-255,255)+100;
 570:	21 e1       	ldi	r18, 0x11	; 17
 572:	34 ec       	ldi	r19, 0xC4	; 196
 574:	4d e7       	ldi	r20, 0x7D	; 125
 576:	5f e3       	ldi	r21, 0x3F	; 63
 578:	69 81       	ldd	r22, Y+1	; 0x01
 57a:	7a 81       	ldd	r23, Y+2	; 0x02
 57c:	8b 81       	ldd	r24, Y+3	; 0x03
 57e:	9c 81       	ldd	r25, Y+4	; 0x04
 580:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 584:	20 e0       	ldi	r18, 0x00	; 0
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	4f ef       	ldi	r20, 0xFF	; 255
 58a:	53 e4       	ldi	r21, 0x43	; 67
 58c:	0e 94 b5 04 	call	0x96a	; 0x96a <__mulsf3>
 590:	21 e1       	ldi	r18, 0x11	; 17
 592:	34 ec       	ldi	r19, 0xC4	; 196
 594:	4d ef       	ldi	r20, 0xFD	; 253
 596:	5f e3       	ldi	r21, 0x3F	; 63
 598:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <__divsf3>
 59c:	20 e0       	ldi	r18, 0x00	; 0
 59e:	30 e0       	ldi	r19, 0x00	; 0
 5a0:	4f e7       	ldi	r20, 0x7F	; 127
 5a2:	53 e4       	ldi	r21, 0x43	; 67
 5a4:	0e 94 0d 03 	call	0x61a	; 0x61a <__subsf3>
 5a8:	20 e0       	ldi	r18, 0x00	; 0
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	48 ec       	ldi	r20, 0xC8	; 200
 5ae:	52 e4       	ldi	r21, 0x42	; 66
 5b0:	0e 94 0e 03 	call	0x61c	; 0x61c <__addsf3>
 5b4:	4b 01       	movw	r8, r22
 5b6:	5c 01       	movw	r10, r24
		x5=0;

		if(y5<20&&y5>-20)
		y5=0;*/

		if(x3>0)
 5b8:	20 e0       	ldi	r18, 0x00	; 0
 5ba:	30 e0       	ldi	r19, 0x00	; 0
 5bc:	a9 01       	movw	r20, r18
 5be:	c3 01       	movw	r24, r6
 5c0:	b2 01       	movw	r22, r4
 5c2:	0e 94 b0 04 	call	0x960	; 0x960 <__gesf2>
 5c6:	18 16       	cp	r1, r24
 5c8:	3c f4       	brge	.+14     	; 0x5d8 <__stack+0x179>
		{
			OCR0=(int)x3;
 5ca:	c3 01       	movw	r24, r6
 5cc:	b2 01       	movw	r22, r4
 5ce:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixsfsi>
 5d2:	6c bf       	out	0x3c, r22	; 60
			PORTB|=1<<PB0;
 5d4:	c0 9a       	sbi	0x18, 0	; 24
 5d6:	07 c0       	rjmp	.+14     	; 0x5e6 <__stack+0x187>
		}
		else
		{
			OCR0=-(int)x3;
 5d8:	c3 01       	movw	r24, r6
 5da:	b2 01       	movw	r22, r4
 5dc:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixsfsi>
 5e0:	61 95       	neg	r22
 5e2:	6c bf       	out	0x3c, r22	; 60
			PORTB&=~(1<<PB0);
 5e4:	c0 98       	cbi	0x18, 0	; 24
		}
		if(y3>0)
 5e6:	20 e0       	ldi	r18, 0x00	; 0
 5e8:	30 e0       	ldi	r19, 0x00	; 0
 5ea:	a9 01       	movw	r20, r18
 5ec:	c5 01       	movw	r24, r10
 5ee:	b4 01       	movw	r22, r8
 5f0:	0e 94 b0 04 	call	0x960	; 0x960 <__gesf2>
 5f4:	18 16       	cp	r1, r24
 5f6:	3c f4       	brge	.+14     	; 0x606 <__stack+0x1a7>
		{
		OCR2=(int)y3;
 5f8:	c5 01       	movw	r24, r10
 5fa:	b4 01       	movw	r22, r8
 5fc:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixsfsi>
 600:	63 bd       	out	0x23, r22	; 35
		PORTD|=1<<PD2;
 602:	92 9a       	sbi	0x12, 2	; 18
 604:	01 cf       	rjmp	.-510    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
		}
		else
		{
			OCR2=-(int)y3;
 606:	c5 01       	movw	r24, r10
 608:	b4 01       	movw	r22, r8
 60a:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__fixsfsi>
 60e:	61 95       	neg	r22
 610:	63 bd       	out	0x23, r22	; 35
			PORTD&=~1<<PD2;
 612:	82 b3       	in	r24, 0x12	; 18
 614:	88 7f       	andi	r24, 0xF8	; 248
 616:	82 bb       	out	0x12, r24	; 18
 618:	f7 ce       	rjmp	.-530    	; 0x408 <__LOCK_REGION_LENGTH__+0x8>

0000061a <__subsf3>:
 61a:	50 58       	subi	r21, 0x80	; 128

0000061c <__addsf3>:
 61c:	bb 27       	eor	r27, r27
 61e:	aa 27       	eor	r26, r26
 620:	0e 94 25 03 	call	0x64a	; 0x64a <__addsf3x>
 624:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__fp_round>
 628:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__fp_pscA>
 62c:	38 f0       	brcs	.+14     	; 0x63c <__addsf3+0x20>
 62e:	0e 94 6f 04 	call	0x8de	; 0x8de <__fp_pscB>
 632:	20 f0       	brcs	.+8      	; 0x63c <__addsf3+0x20>
 634:	39 f4       	brne	.+14     	; 0x644 <__addsf3+0x28>
 636:	9f 3f       	cpi	r25, 0xFF	; 255
 638:	19 f4       	brne	.+6      	; 0x640 <__addsf3+0x24>
 63a:	26 f4       	brtc	.+8      	; 0x644 <__addsf3+0x28>
 63c:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <__fp_nan>
 640:	0e f4       	brtc	.+2      	; 0x644 <__addsf3+0x28>
 642:	e0 95       	com	r30
 644:	e7 fb       	bst	r30, 7
 646:	0c 94 5f 04 	jmp	0x8be	; 0x8be <__fp_inf>

0000064a <__addsf3x>:
 64a:	e9 2f       	mov	r30, r25
 64c:	0e 94 87 04 	call	0x90e	; 0x90e <__fp_split3>
 650:	58 f3       	brcs	.-42     	; 0x628 <__addsf3+0xc>
 652:	ba 17       	cp	r27, r26
 654:	62 07       	cpc	r22, r18
 656:	73 07       	cpc	r23, r19
 658:	84 07       	cpc	r24, r20
 65a:	95 07       	cpc	r25, r21
 65c:	20 f0       	brcs	.+8      	; 0x666 <__addsf3x+0x1c>
 65e:	79 f4       	brne	.+30     	; 0x67e <__addsf3x+0x34>
 660:	a6 f5       	brtc	.+104    	; 0x6ca <__addsf3x+0x80>
 662:	0c 94 a9 04 	jmp	0x952	; 0x952 <__fp_zero>
 666:	0e f4       	brtc	.+2      	; 0x66a <__addsf3x+0x20>
 668:	e0 95       	com	r30
 66a:	0b 2e       	mov	r0, r27
 66c:	ba 2f       	mov	r27, r26
 66e:	a0 2d       	mov	r26, r0
 670:	0b 01       	movw	r0, r22
 672:	b9 01       	movw	r22, r18
 674:	90 01       	movw	r18, r0
 676:	0c 01       	movw	r0, r24
 678:	ca 01       	movw	r24, r20
 67a:	a0 01       	movw	r20, r0
 67c:	11 24       	eor	r1, r1
 67e:	ff 27       	eor	r31, r31
 680:	59 1b       	sub	r21, r25
 682:	99 f0       	breq	.+38     	; 0x6aa <__addsf3x+0x60>
 684:	59 3f       	cpi	r21, 0xF9	; 249
 686:	50 f4       	brcc	.+20     	; 0x69c <__addsf3x+0x52>
 688:	50 3e       	cpi	r21, 0xE0	; 224
 68a:	68 f1       	brcs	.+90     	; 0x6e6 <__addsf3x+0x9c>
 68c:	1a 16       	cp	r1, r26
 68e:	f0 40       	sbci	r31, 0x00	; 0
 690:	a2 2f       	mov	r26, r18
 692:	23 2f       	mov	r18, r19
 694:	34 2f       	mov	r19, r20
 696:	44 27       	eor	r20, r20
 698:	58 5f       	subi	r21, 0xF8	; 248
 69a:	f3 cf       	rjmp	.-26     	; 0x682 <__addsf3x+0x38>
 69c:	46 95       	lsr	r20
 69e:	37 95       	ror	r19
 6a0:	27 95       	ror	r18
 6a2:	a7 95       	ror	r26
 6a4:	f0 40       	sbci	r31, 0x00	; 0
 6a6:	53 95       	inc	r21
 6a8:	c9 f7       	brne	.-14     	; 0x69c <__addsf3x+0x52>
 6aa:	7e f4       	brtc	.+30     	; 0x6ca <__addsf3x+0x80>
 6ac:	1f 16       	cp	r1, r31
 6ae:	ba 0b       	sbc	r27, r26
 6b0:	62 0b       	sbc	r22, r18
 6b2:	73 0b       	sbc	r23, r19
 6b4:	84 0b       	sbc	r24, r20
 6b6:	ba f0       	brmi	.+46     	; 0x6e6 <__addsf3x+0x9c>
 6b8:	91 50       	subi	r25, 0x01	; 1
 6ba:	a1 f0       	breq	.+40     	; 0x6e4 <__addsf3x+0x9a>
 6bc:	ff 0f       	add	r31, r31
 6be:	bb 1f       	adc	r27, r27
 6c0:	66 1f       	adc	r22, r22
 6c2:	77 1f       	adc	r23, r23
 6c4:	88 1f       	adc	r24, r24
 6c6:	c2 f7       	brpl	.-16     	; 0x6b8 <__addsf3x+0x6e>
 6c8:	0e c0       	rjmp	.+28     	; 0x6e6 <__addsf3x+0x9c>
 6ca:	ba 0f       	add	r27, r26
 6cc:	62 1f       	adc	r22, r18
 6ce:	73 1f       	adc	r23, r19
 6d0:	84 1f       	adc	r24, r20
 6d2:	48 f4       	brcc	.+18     	; 0x6e6 <__addsf3x+0x9c>
 6d4:	87 95       	ror	r24
 6d6:	77 95       	ror	r23
 6d8:	67 95       	ror	r22
 6da:	b7 95       	ror	r27
 6dc:	f7 95       	ror	r31
 6de:	9e 3f       	cpi	r25, 0xFE	; 254
 6e0:	08 f0       	brcs	.+2      	; 0x6e4 <__addsf3x+0x9a>
 6e2:	b0 cf       	rjmp	.-160    	; 0x644 <__addsf3+0x28>
 6e4:	93 95       	inc	r25
 6e6:	88 0f       	add	r24, r24
 6e8:	08 f0       	brcs	.+2      	; 0x6ec <__addsf3x+0xa2>
 6ea:	99 27       	eor	r25, r25
 6ec:	ee 0f       	add	r30, r30
 6ee:	97 95       	ror	r25
 6f0:	87 95       	ror	r24
 6f2:	08 95       	ret

000006f4 <__divsf3>:
 6f4:	0e 94 8e 03 	call	0x71c	; 0x71c <__divsf3x>
 6f8:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__fp_round>
 6fc:	0e 94 6f 04 	call	0x8de	; 0x8de <__fp_pscB>
 700:	58 f0       	brcs	.+22     	; 0x718 <__divsf3+0x24>
 702:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__fp_pscA>
 706:	40 f0       	brcs	.+16     	; 0x718 <__divsf3+0x24>
 708:	29 f4       	brne	.+10     	; 0x714 <__divsf3+0x20>
 70a:	5f 3f       	cpi	r21, 0xFF	; 255
 70c:	29 f0       	breq	.+10     	; 0x718 <__divsf3+0x24>
 70e:	0c 94 5f 04 	jmp	0x8be	; 0x8be <__fp_inf>
 712:	51 11       	cpse	r21, r1
 714:	0c 94 aa 04 	jmp	0x954	; 0x954 <__fp_szero>
 718:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <__fp_nan>

0000071c <__divsf3x>:
 71c:	0e 94 87 04 	call	0x90e	; 0x90e <__fp_split3>
 720:	68 f3       	brcs	.-38     	; 0x6fc <__divsf3+0x8>

00000722 <__divsf3_pse>:
 722:	99 23       	and	r25, r25
 724:	b1 f3       	breq	.-20     	; 0x712 <__divsf3+0x1e>
 726:	55 23       	and	r21, r21
 728:	91 f3       	breq	.-28     	; 0x70e <__divsf3+0x1a>
 72a:	95 1b       	sub	r25, r21
 72c:	55 0b       	sbc	r21, r21
 72e:	bb 27       	eor	r27, r27
 730:	aa 27       	eor	r26, r26
 732:	62 17       	cp	r22, r18
 734:	73 07       	cpc	r23, r19
 736:	84 07       	cpc	r24, r20
 738:	38 f0       	brcs	.+14     	; 0x748 <__divsf3_pse+0x26>
 73a:	9f 5f       	subi	r25, 0xFF	; 255
 73c:	5f 4f       	sbci	r21, 0xFF	; 255
 73e:	22 0f       	add	r18, r18
 740:	33 1f       	adc	r19, r19
 742:	44 1f       	adc	r20, r20
 744:	aa 1f       	adc	r26, r26
 746:	a9 f3       	breq	.-22     	; 0x732 <__divsf3_pse+0x10>
 748:	35 d0       	rcall	.+106    	; 0x7b4 <__divsf3_pse+0x92>
 74a:	0e 2e       	mov	r0, r30
 74c:	3a f0       	brmi	.+14     	; 0x75c <__divsf3_pse+0x3a>
 74e:	e0 e8       	ldi	r30, 0x80	; 128
 750:	32 d0       	rcall	.+100    	; 0x7b6 <__divsf3_pse+0x94>
 752:	91 50       	subi	r25, 0x01	; 1
 754:	50 40       	sbci	r21, 0x00	; 0
 756:	e6 95       	lsr	r30
 758:	00 1c       	adc	r0, r0
 75a:	ca f7       	brpl	.-14     	; 0x74e <__divsf3_pse+0x2c>
 75c:	2b d0       	rcall	.+86     	; 0x7b4 <__divsf3_pse+0x92>
 75e:	fe 2f       	mov	r31, r30
 760:	29 d0       	rcall	.+82     	; 0x7b4 <__divsf3_pse+0x92>
 762:	66 0f       	add	r22, r22
 764:	77 1f       	adc	r23, r23
 766:	88 1f       	adc	r24, r24
 768:	bb 1f       	adc	r27, r27
 76a:	26 17       	cp	r18, r22
 76c:	37 07       	cpc	r19, r23
 76e:	48 07       	cpc	r20, r24
 770:	ab 07       	cpc	r26, r27
 772:	b0 e8       	ldi	r27, 0x80	; 128
 774:	09 f0       	breq	.+2      	; 0x778 <__divsf3_pse+0x56>
 776:	bb 0b       	sbc	r27, r27
 778:	80 2d       	mov	r24, r0
 77a:	bf 01       	movw	r22, r30
 77c:	ff 27       	eor	r31, r31
 77e:	93 58       	subi	r25, 0x83	; 131
 780:	5f 4f       	sbci	r21, 0xFF	; 255
 782:	3a f0       	brmi	.+14     	; 0x792 <__divsf3_pse+0x70>
 784:	9e 3f       	cpi	r25, 0xFE	; 254
 786:	51 05       	cpc	r21, r1
 788:	78 f0       	brcs	.+30     	; 0x7a8 <__divsf3_pse+0x86>
 78a:	0c 94 5f 04 	jmp	0x8be	; 0x8be <__fp_inf>
 78e:	0c 94 aa 04 	jmp	0x954	; 0x954 <__fp_szero>
 792:	5f 3f       	cpi	r21, 0xFF	; 255
 794:	e4 f3       	brlt	.-8      	; 0x78e <__divsf3_pse+0x6c>
 796:	98 3e       	cpi	r25, 0xE8	; 232
 798:	d4 f3       	brlt	.-12     	; 0x78e <__divsf3_pse+0x6c>
 79a:	86 95       	lsr	r24
 79c:	77 95       	ror	r23
 79e:	67 95       	ror	r22
 7a0:	b7 95       	ror	r27
 7a2:	f7 95       	ror	r31
 7a4:	9f 5f       	subi	r25, 0xFF	; 255
 7a6:	c9 f7       	brne	.-14     	; 0x79a <__divsf3_pse+0x78>
 7a8:	88 0f       	add	r24, r24
 7aa:	91 1d       	adc	r25, r1
 7ac:	96 95       	lsr	r25
 7ae:	87 95       	ror	r24
 7b0:	97 f9       	bld	r25, 7
 7b2:	08 95       	ret
 7b4:	e1 e0       	ldi	r30, 0x01	; 1
 7b6:	66 0f       	add	r22, r22
 7b8:	77 1f       	adc	r23, r23
 7ba:	88 1f       	adc	r24, r24
 7bc:	bb 1f       	adc	r27, r27
 7be:	62 17       	cp	r22, r18
 7c0:	73 07       	cpc	r23, r19
 7c2:	84 07       	cpc	r24, r20
 7c4:	ba 07       	cpc	r27, r26
 7c6:	20 f0       	brcs	.+8      	; 0x7d0 <__divsf3_pse+0xae>
 7c8:	62 1b       	sub	r22, r18
 7ca:	73 0b       	sbc	r23, r19
 7cc:	84 0b       	sbc	r24, r20
 7ce:	ba 0b       	sbc	r27, r26
 7d0:	ee 1f       	adc	r30, r30
 7d2:	88 f7       	brcc	.-30     	; 0x7b6 <__divsf3_pse+0x94>
 7d4:	e0 95       	com	r30
 7d6:	08 95       	ret

000007d8 <__fixsfsi>:
 7d8:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <__fixunssfsi>
 7dc:	68 94       	set
 7de:	b1 11       	cpse	r27, r1
 7e0:	0c 94 aa 04 	jmp	0x954	; 0x954 <__fp_szero>
 7e4:	08 95       	ret

000007e6 <__fixunssfsi>:
 7e6:	0e 94 8f 04 	call	0x91e	; 0x91e <__fp_splitA>
 7ea:	88 f0       	brcs	.+34     	; 0x80e <__fixunssfsi+0x28>
 7ec:	9f 57       	subi	r25, 0x7F	; 127
 7ee:	98 f0       	brcs	.+38     	; 0x816 <__fixunssfsi+0x30>
 7f0:	b9 2f       	mov	r27, r25
 7f2:	99 27       	eor	r25, r25
 7f4:	b7 51       	subi	r27, 0x17	; 23
 7f6:	b0 f0       	brcs	.+44     	; 0x824 <__fixunssfsi+0x3e>
 7f8:	e1 f0       	breq	.+56     	; 0x832 <__fixunssfsi+0x4c>
 7fa:	66 0f       	add	r22, r22
 7fc:	77 1f       	adc	r23, r23
 7fe:	88 1f       	adc	r24, r24
 800:	99 1f       	adc	r25, r25
 802:	1a f0       	brmi	.+6      	; 0x80a <__fixunssfsi+0x24>
 804:	ba 95       	dec	r27
 806:	c9 f7       	brne	.-14     	; 0x7fa <__fixunssfsi+0x14>
 808:	14 c0       	rjmp	.+40     	; 0x832 <__fixunssfsi+0x4c>
 80a:	b1 30       	cpi	r27, 0x01	; 1
 80c:	91 f0       	breq	.+36     	; 0x832 <__fixunssfsi+0x4c>
 80e:	0e 94 a9 04 	call	0x952	; 0x952 <__fp_zero>
 812:	b1 e0       	ldi	r27, 0x01	; 1
 814:	08 95       	ret
 816:	0c 94 a9 04 	jmp	0x952	; 0x952 <__fp_zero>
 81a:	67 2f       	mov	r22, r23
 81c:	78 2f       	mov	r23, r24
 81e:	88 27       	eor	r24, r24
 820:	b8 5f       	subi	r27, 0xF8	; 248
 822:	39 f0       	breq	.+14     	; 0x832 <__fixunssfsi+0x4c>
 824:	b9 3f       	cpi	r27, 0xF9	; 249
 826:	cc f3       	brlt	.-14     	; 0x81a <__fixunssfsi+0x34>
 828:	86 95       	lsr	r24
 82a:	77 95       	ror	r23
 82c:	67 95       	ror	r22
 82e:	b3 95       	inc	r27
 830:	d9 f7       	brne	.-10     	; 0x828 <__fixunssfsi+0x42>
 832:	3e f4       	brtc	.+14     	; 0x842 <__fixunssfsi+0x5c>
 834:	90 95       	com	r25
 836:	80 95       	com	r24
 838:	70 95       	com	r23
 83a:	61 95       	neg	r22
 83c:	7f 4f       	sbci	r23, 0xFF	; 255
 83e:	8f 4f       	sbci	r24, 0xFF	; 255
 840:	9f 4f       	sbci	r25, 0xFF	; 255
 842:	08 95       	ret

00000844 <__floatunsisf>:
 844:	e8 94       	clt
 846:	09 c0       	rjmp	.+18     	; 0x85a <__floatsisf+0x12>

00000848 <__floatsisf>:
 848:	97 fb       	bst	r25, 7
 84a:	3e f4       	brtc	.+14     	; 0x85a <__floatsisf+0x12>
 84c:	90 95       	com	r25
 84e:	80 95       	com	r24
 850:	70 95       	com	r23
 852:	61 95       	neg	r22
 854:	7f 4f       	sbci	r23, 0xFF	; 255
 856:	8f 4f       	sbci	r24, 0xFF	; 255
 858:	9f 4f       	sbci	r25, 0xFF	; 255
 85a:	99 23       	and	r25, r25
 85c:	a9 f0       	breq	.+42     	; 0x888 <__floatsisf+0x40>
 85e:	f9 2f       	mov	r31, r25
 860:	96 e9       	ldi	r25, 0x96	; 150
 862:	bb 27       	eor	r27, r27
 864:	93 95       	inc	r25
 866:	f6 95       	lsr	r31
 868:	87 95       	ror	r24
 86a:	77 95       	ror	r23
 86c:	67 95       	ror	r22
 86e:	b7 95       	ror	r27
 870:	f1 11       	cpse	r31, r1
 872:	f8 cf       	rjmp	.-16     	; 0x864 <__floatsisf+0x1c>
 874:	fa f4       	brpl	.+62     	; 0x8b4 <__floatsisf+0x6c>
 876:	bb 0f       	add	r27, r27
 878:	11 f4       	brne	.+4      	; 0x87e <__floatsisf+0x36>
 87a:	60 ff       	sbrs	r22, 0
 87c:	1b c0       	rjmp	.+54     	; 0x8b4 <__floatsisf+0x6c>
 87e:	6f 5f       	subi	r22, 0xFF	; 255
 880:	7f 4f       	sbci	r23, 0xFF	; 255
 882:	8f 4f       	sbci	r24, 0xFF	; 255
 884:	9f 4f       	sbci	r25, 0xFF	; 255
 886:	16 c0       	rjmp	.+44     	; 0x8b4 <__floatsisf+0x6c>
 888:	88 23       	and	r24, r24
 88a:	11 f0       	breq	.+4      	; 0x890 <__floatsisf+0x48>
 88c:	96 e9       	ldi	r25, 0x96	; 150
 88e:	11 c0       	rjmp	.+34     	; 0x8b2 <__floatsisf+0x6a>
 890:	77 23       	and	r23, r23
 892:	21 f0       	breq	.+8      	; 0x89c <__floatsisf+0x54>
 894:	9e e8       	ldi	r25, 0x8E	; 142
 896:	87 2f       	mov	r24, r23
 898:	76 2f       	mov	r23, r22
 89a:	05 c0       	rjmp	.+10     	; 0x8a6 <__floatsisf+0x5e>
 89c:	66 23       	and	r22, r22
 89e:	71 f0       	breq	.+28     	; 0x8bc <__floatsisf+0x74>
 8a0:	96 e8       	ldi	r25, 0x86	; 134
 8a2:	86 2f       	mov	r24, r22
 8a4:	70 e0       	ldi	r23, 0x00	; 0
 8a6:	60 e0       	ldi	r22, 0x00	; 0
 8a8:	2a f0       	brmi	.+10     	; 0x8b4 <__floatsisf+0x6c>
 8aa:	9a 95       	dec	r25
 8ac:	66 0f       	add	r22, r22
 8ae:	77 1f       	adc	r23, r23
 8b0:	88 1f       	adc	r24, r24
 8b2:	da f7       	brpl	.-10     	; 0x8aa <__floatsisf+0x62>
 8b4:	88 0f       	add	r24, r24
 8b6:	96 95       	lsr	r25
 8b8:	87 95       	ror	r24
 8ba:	97 f9       	bld	r25, 7
 8bc:	08 95       	ret

000008be <__fp_inf>:
 8be:	97 f9       	bld	r25, 7
 8c0:	9f 67       	ori	r25, 0x7F	; 127
 8c2:	80 e8       	ldi	r24, 0x80	; 128
 8c4:	70 e0       	ldi	r23, 0x00	; 0
 8c6:	60 e0       	ldi	r22, 0x00	; 0
 8c8:	08 95       	ret

000008ca <__fp_nan>:
 8ca:	9f ef       	ldi	r25, 0xFF	; 255
 8cc:	80 ec       	ldi	r24, 0xC0	; 192
 8ce:	08 95       	ret

000008d0 <__fp_pscA>:
 8d0:	00 24       	eor	r0, r0
 8d2:	0a 94       	dec	r0
 8d4:	16 16       	cp	r1, r22
 8d6:	17 06       	cpc	r1, r23
 8d8:	18 06       	cpc	r1, r24
 8da:	09 06       	cpc	r0, r25
 8dc:	08 95       	ret

000008de <__fp_pscB>:
 8de:	00 24       	eor	r0, r0
 8e0:	0a 94       	dec	r0
 8e2:	12 16       	cp	r1, r18
 8e4:	13 06       	cpc	r1, r19
 8e6:	14 06       	cpc	r1, r20
 8e8:	05 06       	cpc	r0, r21
 8ea:	08 95       	ret

000008ec <__fp_round>:
 8ec:	09 2e       	mov	r0, r25
 8ee:	03 94       	inc	r0
 8f0:	00 0c       	add	r0, r0
 8f2:	11 f4       	brne	.+4      	; 0x8f8 <__fp_round+0xc>
 8f4:	88 23       	and	r24, r24
 8f6:	52 f0       	brmi	.+20     	; 0x90c <__fp_round+0x20>
 8f8:	bb 0f       	add	r27, r27
 8fa:	40 f4       	brcc	.+16     	; 0x90c <__fp_round+0x20>
 8fc:	bf 2b       	or	r27, r31
 8fe:	11 f4       	brne	.+4      	; 0x904 <__fp_round+0x18>
 900:	60 ff       	sbrs	r22, 0
 902:	04 c0       	rjmp	.+8      	; 0x90c <__fp_round+0x20>
 904:	6f 5f       	subi	r22, 0xFF	; 255
 906:	7f 4f       	sbci	r23, 0xFF	; 255
 908:	8f 4f       	sbci	r24, 0xFF	; 255
 90a:	9f 4f       	sbci	r25, 0xFF	; 255
 90c:	08 95       	ret

0000090e <__fp_split3>:
 90e:	57 fd       	sbrc	r21, 7
 910:	90 58       	subi	r25, 0x80	; 128
 912:	44 0f       	add	r20, r20
 914:	55 1f       	adc	r21, r21
 916:	59 f0       	breq	.+22     	; 0x92e <__fp_splitA+0x10>
 918:	5f 3f       	cpi	r21, 0xFF	; 255
 91a:	71 f0       	breq	.+28     	; 0x938 <__fp_splitA+0x1a>
 91c:	47 95       	ror	r20

0000091e <__fp_splitA>:
 91e:	88 0f       	add	r24, r24
 920:	97 fb       	bst	r25, 7
 922:	99 1f       	adc	r25, r25
 924:	61 f0       	breq	.+24     	; 0x93e <__fp_splitA+0x20>
 926:	9f 3f       	cpi	r25, 0xFF	; 255
 928:	79 f0       	breq	.+30     	; 0x948 <__fp_splitA+0x2a>
 92a:	87 95       	ror	r24
 92c:	08 95       	ret
 92e:	12 16       	cp	r1, r18
 930:	13 06       	cpc	r1, r19
 932:	14 06       	cpc	r1, r20
 934:	55 1f       	adc	r21, r21
 936:	f2 cf       	rjmp	.-28     	; 0x91c <__fp_split3+0xe>
 938:	46 95       	lsr	r20
 93a:	f1 df       	rcall	.-30     	; 0x91e <__fp_splitA>
 93c:	08 c0       	rjmp	.+16     	; 0x94e <__fp_splitA+0x30>
 93e:	16 16       	cp	r1, r22
 940:	17 06       	cpc	r1, r23
 942:	18 06       	cpc	r1, r24
 944:	99 1f       	adc	r25, r25
 946:	f1 cf       	rjmp	.-30     	; 0x92a <__fp_splitA+0xc>
 948:	86 95       	lsr	r24
 94a:	71 05       	cpc	r23, r1
 94c:	61 05       	cpc	r22, r1
 94e:	08 94       	sec
 950:	08 95       	ret

00000952 <__fp_zero>:
 952:	e8 94       	clt

00000954 <__fp_szero>:
 954:	bb 27       	eor	r27, r27
 956:	66 27       	eor	r22, r22
 958:	77 27       	eor	r23, r23
 95a:	cb 01       	movw	r24, r22
 95c:	97 f9       	bld	r25, 7
 95e:	08 95       	ret

00000960 <__gesf2>:
 960:	0e 94 68 05 	call	0xad0	; 0xad0 <__fp_cmp>
 964:	08 f4       	brcc	.+2      	; 0x968 <__gesf2+0x8>
 966:	8f ef       	ldi	r24, 0xFF	; 255
 968:	08 95       	ret

0000096a <__mulsf3>:
 96a:	0e 94 c8 04 	call	0x990	; 0x990 <__mulsf3x>
 96e:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__fp_round>
 972:	0e 94 68 04 	call	0x8d0	; 0x8d0 <__fp_pscA>
 976:	38 f0       	brcs	.+14     	; 0x986 <__mulsf3+0x1c>
 978:	0e 94 6f 04 	call	0x8de	; 0x8de <__fp_pscB>
 97c:	20 f0       	brcs	.+8      	; 0x986 <__mulsf3+0x1c>
 97e:	95 23       	and	r25, r21
 980:	11 f0       	breq	.+4      	; 0x986 <__mulsf3+0x1c>
 982:	0c 94 5f 04 	jmp	0x8be	; 0x8be <__fp_inf>
 986:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <__fp_nan>
 98a:	11 24       	eor	r1, r1
 98c:	0c 94 aa 04 	jmp	0x954	; 0x954 <__fp_szero>

00000990 <__mulsf3x>:
 990:	0e 94 87 04 	call	0x90e	; 0x90e <__fp_split3>
 994:	70 f3       	brcs	.-36     	; 0x972 <__mulsf3+0x8>

00000996 <__mulsf3_pse>:
 996:	95 9f       	mul	r25, r21
 998:	c1 f3       	breq	.-16     	; 0x98a <__mulsf3+0x20>
 99a:	95 0f       	add	r25, r21
 99c:	50 e0       	ldi	r21, 0x00	; 0
 99e:	55 1f       	adc	r21, r21
 9a0:	62 9f       	mul	r22, r18
 9a2:	f0 01       	movw	r30, r0
 9a4:	72 9f       	mul	r23, r18
 9a6:	bb 27       	eor	r27, r27
 9a8:	f0 0d       	add	r31, r0
 9aa:	b1 1d       	adc	r27, r1
 9ac:	63 9f       	mul	r22, r19
 9ae:	aa 27       	eor	r26, r26
 9b0:	f0 0d       	add	r31, r0
 9b2:	b1 1d       	adc	r27, r1
 9b4:	aa 1f       	adc	r26, r26
 9b6:	64 9f       	mul	r22, r20
 9b8:	66 27       	eor	r22, r22
 9ba:	b0 0d       	add	r27, r0
 9bc:	a1 1d       	adc	r26, r1
 9be:	66 1f       	adc	r22, r22
 9c0:	82 9f       	mul	r24, r18
 9c2:	22 27       	eor	r18, r18
 9c4:	b0 0d       	add	r27, r0
 9c6:	a1 1d       	adc	r26, r1
 9c8:	62 1f       	adc	r22, r18
 9ca:	73 9f       	mul	r23, r19
 9cc:	b0 0d       	add	r27, r0
 9ce:	a1 1d       	adc	r26, r1
 9d0:	62 1f       	adc	r22, r18
 9d2:	83 9f       	mul	r24, r19
 9d4:	a0 0d       	add	r26, r0
 9d6:	61 1d       	adc	r22, r1
 9d8:	22 1f       	adc	r18, r18
 9da:	74 9f       	mul	r23, r20
 9dc:	33 27       	eor	r19, r19
 9de:	a0 0d       	add	r26, r0
 9e0:	61 1d       	adc	r22, r1
 9e2:	23 1f       	adc	r18, r19
 9e4:	84 9f       	mul	r24, r20
 9e6:	60 0d       	add	r22, r0
 9e8:	21 1d       	adc	r18, r1
 9ea:	82 2f       	mov	r24, r18
 9ec:	76 2f       	mov	r23, r22
 9ee:	6a 2f       	mov	r22, r26
 9f0:	11 24       	eor	r1, r1
 9f2:	9f 57       	subi	r25, 0x7F	; 127
 9f4:	50 40       	sbci	r21, 0x00	; 0
 9f6:	9a f0       	brmi	.+38     	; 0xa1e <__mulsf3_pse+0x88>
 9f8:	f1 f0       	breq	.+60     	; 0xa36 <__mulsf3_pse+0xa0>
 9fa:	88 23       	and	r24, r24
 9fc:	4a f0       	brmi	.+18     	; 0xa10 <__mulsf3_pse+0x7a>
 9fe:	ee 0f       	add	r30, r30
 a00:	ff 1f       	adc	r31, r31
 a02:	bb 1f       	adc	r27, r27
 a04:	66 1f       	adc	r22, r22
 a06:	77 1f       	adc	r23, r23
 a08:	88 1f       	adc	r24, r24
 a0a:	91 50       	subi	r25, 0x01	; 1
 a0c:	50 40       	sbci	r21, 0x00	; 0
 a0e:	a9 f7       	brne	.-22     	; 0x9fa <__mulsf3_pse+0x64>
 a10:	9e 3f       	cpi	r25, 0xFE	; 254
 a12:	51 05       	cpc	r21, r1
 a14:	80 f0       	brcs	.+32     	; 0xa36 <__mulsf3_pse+0xa0>
 a16:	0c 94 5f 04 	jmp	0x8be	; 0x8be <__fp_inf>
 a1a:	0c 94 aa 04 	jmp	0x954	; 0x954 <__fp_szero>
 a1e:	5f 3f       	cpi	r21, 0xFF	; 255
 a20:	e4 f3       	brlt	.-8      	; 0xa1a <__mulsf3_pse+0x84>
 a22:	98 3e       	cpi	r25, 0xE8	; 232
 a24:	d4 f3       	brlt	.-12     	; 0xa1a <__mulsf3_pse+0x84>
 a26:	86 95       	lsr	r24
 a28:	77 95       	ror	r23
 a2a:	67 95       	ror	r22
 a2c:	b7 95       	ror	r27
 a2e:	f7 95       	ror	r31
 a30:	e7 95       	ror	r30
 a32:	9f 5f       	subi	r25, 0xFF	; 255
 a34:	c1 f7       	brne	.-16     	; 0xa26 <__mulsf3_pse+0x90>
 a36:	fe 2b       	or	r31, r30
 a38:	88 0f       	add	r24, r24
 a3a:	91 1d       	adc	r25, r1
 a3c:	96 95       	lsr	r25
 a3e:	87 95       	ror	r24
 a40:	97 f9       	bld	r25, 7
 a42:	08 95       	ret
 a44:	19 f4       	brne	.+6      	; 0xa4c <__mulsf3_pse+0xb6>
 a46:	16 f4       	brtc	.+4      	; 0xa4c <__mulsf3_pse+0xb6>
 a48:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <__fp_nan>
 a4c:	0c 94 8c 05 	jmp	0xb18	; 0xb18 <__fp_mpack>

00000a50 <sqrt>:
 a50:	0e 94 8f 04 	call	0x91e	; 0x91e <__fp_splitA>
 a54:	b8 f3       	brcs	.-18     	; 0xa44 <__mulsf3_pse+0xae>
 a56:	99 23       	and	r25, r25
 a58:	c9 f3       	breq	.-14     	; 0xa4c <__mulsf3_pse+0xb6>
 a5a:	b6 f3       	brts	.-20     	; 0xa48 <__mulsf3_pse+0xb2>
 a5c:	9f 57       	subi	r25, 0x7F	; 127
 a5e:	55 0b       	sbc	r21, r21
 a60:	87 ff       	sbrs	r24, 7
 a62:	0e 94 9a 05 	call	0xb34	; 0xb34 <__fp_norm2>
 a66:	00 24       	eor	r0, r0
 a68:	a0 e6       	ldi	r26, 0x60	; 96
 a6a:	40 ea       	ldi	r20, 0xA0	; 160
 a6c:	90 01       	movw	r18, r0
 a6e:	80 58       	subi	r24, 0x80	; 128
 a70:	56 95       	lsr	r21
 a72:	97 95       	ror	r25
 a74:	28 f4       	brcc	.+10     	; 0xa80 <sqrt+0x30>
 a76:	80 5c       	subi	r24, 0xC0	; 192
 a78:	66 0f       	add	r22, r22
 a7a:	77 1f       	adc	r23, r23
 a7c:	88 1f       	adc	r24, r24
 a7e:	20 f0       	brcs	.+8      	; 0xa88 <sqrt+0x38>
 a80:	26 17       	cp	r18, r22
 a82:	37 07       	cpc	r19, r23
 a84:	48 07       	cpc	r20, r24
 a86:	30 f4       	brcc	.+12     	; 0xa94 <sqrt+0x44>
 a88:	62 1b       	sub	r22, r18
 a8a:	73 0b       	sbc	r23, r19
 a8c:	84 0b       	sbc	r24, r20
 a8e:	20 29       	or	r18, r0
 a90:	31 29       	or	r19, r1
 a92:	4a 2b       	or	r20, r26
 a94:	a6 95       	lsr	r26
 a96:	17 94       	ror	r1
 a98:	07 94       	ror	r0
 a9a:	20 25       	eor	r18, r0
 a9c:	31 25       	eor	r19, r1
 a9e:	4a 27       	eor	r20, r26
 aa0:	58 f7       	brcc	.-42     	; 0xa78 <sqrt+0x28>
 aa2:	66 0f       	add	r22, r22
 aa4:	77 1f       	adc	r23, r23
 aa6:	88 1f       	adc	r24, r24
 aa8:	20 f0       	brcs	.+8      	; 0xab2 <sqrt+0x62>
 aaa:	26 17       	cp	r18, r22
 aac:	37 07       	cpc	r19, r23
 aae:	48 07       	cpc	r20, r24
 ab0:	30 f4       	brcc	.+12     	; 0xabe <sqrt+0x6e>
 ab2:	62 0b       	sbc	r22, r18
 ab4:	73 0b       	sbc	r23, r19
 ab6:	84 0b       	sbc	r24, r20
 ab8:	20 0d       	add	r18, r0
 aba:	31 1d       	adc	r19, r1
 abc:	41 1d       	adc	r20, r1
 abe:	a0 95       	com	r26
 ac0:	81 f7       	brne	.-32     	; 0xaa2 <sqrt+0x52>
 ac2:	b9 01       	movw	r22, r18
 ac4:	84 2f       	mov	r24, r20
 ac6:	91 58       	subi	r25, 0x81	; 129
 ac8:	88 0f       	add	r24, r24
 aca:	96 95       	lsr	r25
 acc:	87 95       	ror	r24
 ace:	08 95       	ret

00000ad0 <__fp_cmp>:
 ad0:	99 0f       	add	r25, r25
 ad2:	00 08       	sbc	r0, r0
 ad4:	55 0f       	add	r21, r21
 ad6:	aa 0b       	sbc	r26, r26
 ad8:	e0 e8       	ldi	r30, 0x80	; 128
 ada:	fe ef       	ldi	r31, 0xFE	; 254
 adc:	16 16       	cp	r1, r22
 ade:	17 06       	cpc	r1, r23
 ae0:	e8 07       	cpc	r30, r24
 ae2:	f9 07       	cpc	r31, r25
 ae4:	c0 f0       	brcs	.+48     	; 0xb16 <__fp_cmp+0x46>
 ae6:	12 16       	cp	r1, r18
 ae8:	13 06       	cpc	r1, r19
 aea:	e4 07       	cpc	r30, r20
 aec:	f5 07       	cpc	r31, r21
 aee:	98 f0       	brcs	.+38     	; 0xb16 <__fp_cmp+0x46>
 af0:	62 1b       	sub	r22, r18
 af2:	73 0b       	sbc	r23, r19
 af4:	84 0b       	sbc	r24, r20
 af6:	95 0b       	sbc	r25, r21
 af8:	39 f4       	brne	.+14     	; 0xb08 <__fp_cmp+0x38>
 afa:	0a 26       	eor	r0, r26
 afc:	61 f0       	breq	.+24     	; 0xb16 <__fp_cmp+0x46>
 afe:	23 2b       	or	r18, r19
 b00:	24 2b       	or	r18, r20
 b02:	25 2b       	or	r18, r21
 b04:	21 f4       	brne	.+8      	; 0xb0e <__fp_cmp+0x3e>
 b06:	08 95       	ret
 b08:	0a 26       	eor	r0, r26
 b0a:	09 f4       	brne	.+2      	; 0xb0e <__fp_cmp+0x3e>
 b0c:	a1 40       	sbci	r26, 0x01	; 1
 b0e:	a6 95       	lsr	r26
 b10:	8f ef       	ldi	r24, 0xFF	; 255
 b12:	81 1d       	adc	r24, r1
 b14:	81 1d       	adc	r24, r1
 b16:	08 95       	ret

00000b18 <__fp_mpack>:
 b18:	9f 3f       	cpi	r25, 0xFF	; 255
 b1a:	31 f0       	breq	.+12     	; 0xb28 <__fp_mpack_finite+0xc>

00000b1c <__fp_mpack_finite>:
 b1c:	91 50       	subi	r25, 0x01	; 1
 b1e:	20 f4       	brcc	.+8      	; 0xb28 <__fp_mpack_finite+0xc>
 b20:	87 95       	ror	r24
 b22:	77 95       	ror	r23
 b24:	67 95       	ror	r22
 b26:	b7 95       	ror	r27
 b28:	88 0f       	add	r24, r24
 b2a:	91 1d       	adc	r25, r1
 b2c:	96 95       	lsr	r25
 b2e:	87 95       	ror	r24
 b30:	97 f9       	bld	r25, 7
 b32:	08 95       	ret

00000b34 <__fp_norm2>:
 b34:	91 50       	subi	r25, 0x01	; 1
 b36:	50 40       	sbci	r21, 0x00	; 0
 b38:	66 0f       	add	r22, r22
 b3a:	77 1f       	adc	r23, r23
 b3c:	88 1f       	adc	r24, r24
 b3e:	d2 f7       	brpl	.-12     	; 0xb34 <__fp_norm2>
 b40:	08 95       	ret

00000b42 <_exit>:
 b42:	f8 94       	cli

00000b44 <__stop_program>:
 b44:	ff cf       	rjmp	.-2      	; 0xb44 <__stop_program>
