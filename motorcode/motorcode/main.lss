
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a8e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000a8e  00000b02  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000011  00000000  00000000  00000b02  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b14  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000b50  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000907  00000000  00000000  00000b78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000670  00000000  00000000  0000147f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001c2  00000000  00000000  00001aef  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000174  00000000  00000000  00001cb4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000448  00000000  00000000  00001e28  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006c8  00000000  00000000  00002270  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00002938  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 da 01 	call	0x3b4	; 0x3b4 <main>
  64:	0c 94 45 05 	jmp	0xa8a	; 0xa8a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <_Z3mapeeeee>:
#include <avr/io.h>
#include<avr/interrupt.h>
#include<math.h>

long double map(long double x, long double in_min, long double in_max, long double out_min, long double out_max)
{
  6c:	4f 92       	push	r4
  6e:	5f 92       	push	r5
  70:	6f 92       	push	r6
  72:	7f 92       	push	r7
  74:	af 92       	push	r10
  76:	bf 92       	push	r11
  78:	cf 92       	push	r12
  7a:	df 92       	push	r13
  7c:	ef 92       	push	r14
  7e:	ff 92       	push	r15
  80:	0f 93       	push	r16
  82:	1f 93       	push	r17
  84:	cf 93       	push	r28
  86:	df 93       	push	r29
  88:	cd b7       	in	r28, 0x3d	; 61
  8a:	de b7       	in	r29, 0x3e	; 62
  8c:	28 97       	sbiw	r28, 0x08	; 8
  8e:	0f b6       	in	r0, 0x3f	; 63
  90:	f8 94       	cli
  92:	de bf       	out	0x3e, r29	; 62
  94:	0f be       	out	0x3f, r0	; 63
  96:	cd bf       	out	0x3d, r28	; 61
  98:	29 01       	movw	r4, r18
  9a:	3a 01       	movw	r6, r20
  9c:	ed 82       	std	Y+5, r14	; 0x05
  9e:	fe 82       	std	Y+6, r15	; 0x06
  a0:	0f 83       	std	Y+7, r16	; 0x07
  a2:	18 87       	std	Y+8, r17	; 0x08
	return (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
  a4:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
  a8:	69 83       	std	Y+1, r22	; 0x01
  aa:	7a 83       	std	Y+2, r23	; 0x02
  ac:	8b 83       	std	Y+3, r24	; 0x03
  ae:	9c 83       	std	Y+4, r25	; 0x04
  b0:	a6 01       	movw	r20, r12
  b2:	95 01       	movw	r18, r10
  b4:	69 8d       	ldd	r22, Y+25	; 0x19
  b6:	7a 8d       	ldd	r23, Y+26	; 0x1a
  b8:	8b 8d       	ldd	r24, Y+27	; 0x1b
  ba:	9c 8d       	ldd	r25, Y+28	; 0x1c
  bc:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
  c0:	9b 01       	movw	r18, r22
  c2:	ac 01       	movw	r20, r24
  c4:	69 81       	ldd	r22, Y+1	; 0x01
  c6:	7a 81       	ldd	r23, Y+2	; 0x02
  c8:	8b 81       	ldd	r24, Y+3	; 0x03
  ca:	9c 81       	ldd	r25, Y+4	; 0x04
  cc:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
  d0:	69 83       	std	Y+1, r22	; 0x01
  d2:	7a 83       	std	Y+2, r23	; 0x02
  d4:	8b 83       	std	Y+3, r24	; 0x03
  d6:	9c 83       	std	Y+4, r25	; 0x04
  d8:	a3 01       	movw	r20, r6
  da:	92 01       	movw	r18, r4
  dc:	c8 01       	movw	r24, r16
  de:	b7 01       	movw	r22, r14
  e0:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
  e4:	9b 01       	movw	r18, r22
  e6:	ac 01       	movw	r20, r24
  e8:	69 81       	ldd	r22, Y+1	; 0x01
  ea:	7a 81       	ldd	r23, Y+2	; 0x02
  ec:	8b 81       	ldd	r24, Y+3	; 0x03
  ee:	9c 81       	ldd	r25, Y+4	; 0x04
  f0:	0e 94 47 03 	call	0x68e	; 0x68e <__divsf3>
  f4:	a6 01       	movw	r20, r12
  f6:	95 01       	movw	r18, r10
  f8:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__addsf3>
}
  fc:	28 96       	adiw	r28, 0x08	; 8
  fe:	0f b6       	in	r0, 0x3f	; 63
 100:	f8 94       	cli
 102:	de bf       	out	0x3e, r29	; 62
 104:	0f be       	out	0x3f, r0	; 63
 106:	cd bf       	out	0x3d, r28	; 61
 108:	df 91       	pop	r29
 10a:	cf 91       	pop	r28
 10c:	1f 91       	pop	r17
 10e:	0f 91       	pop	r16
 110:	ff 90       	pop	r15
 112:	ef 90       	pop	r14
 114:	df 90       	pop	r13
 116:	cf 90       	pop	r12
 118:	bf 90       	pop	r11
 11a:	af 90       	pop	r10
 11c:	7f 90       	pop	r7
 11e:	6f 90       	pop	r6
 120:	5f 90       	pop	r5
 122:	4f 90       	pop	r4
 124:	08 95       	ret

00000126 <_Z22ellipticalSquareToDiscddRdS_>:
void ellipticalSquareToDisc(double x, double y, double& u, double& v)
{
 126:	4f 92       	push	r4
 128:	5f 92       	push	r5
 12a:	6f 92       	push	r6
 12c:	7f 92       	push	r7
 12e:	8f 92       	push	r8
 130:	9f 92       	push	r9
 132:	af 92       	push	r10
 134:	bf 92       	push	r11
 136:	ef 92       	push	r14
 138:	ff 92       	push	r15
 13a:	0f 93       	push	r16
 13c:	1f 93       	push	r17
 13e:	2b 01       	movw	r4, r22
 140:	3c 01       	movw	r6, r24
 142:	49 01       	movw	r8, r18
 144:	5a 01       	movw	r10, r20
    u = x * sqrt(1.0 - y*y/2.0);
 146:	ca 01       	movw	r24, r20
 148:	b9 01       	movw	r22, r18
 14a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 14e:	20 e0       	ldi	r18, 0x00	; 0
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	40 e0       	ldi	r20, 0x00	; 0
 154:	5f e3       	ldi	r21, 0x3F	; 63
 156:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 15a:	9b 01       	movw	r18, r22
 15c:	ac 01       	movw	r20, r24
 15e:	60 e0       	ldi	r22, 0x00	; 0
 160:	70 e0       	ldi	r23, 0x00	; 0
 162:	80 e8       	ldi	r24, 0x80	; 128
 164:	9f e3       	ldi	r25, 0x3F	; 63
 166:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 16a:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <sqrt>
 16e:	a3 01       	movw	r20, r6
 170:	92 01       	movw	r18, r4
 172:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 176:	f8 01       	movw	r30, r16
 178:	60 83       	st	Z, r22
 17a:	71 83       	std	Z+1, r23	; 0x01
 17c:	82 83       	std	Z+2, r24	; 0x02
 17e:	93 83       	std	Z+3, r25	; 0x03
    v = y * sqrt(1.0 - x*x/2.0);
 180:	a3 01       	movw	r20, r6
 182:	92 01       	movw	r18, r4
 184:	c3 01       	movw	r24, r6
 186:	b2 01       	movw	r22, r4
 188:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 18c:	20 e0       	ldi	r18, 0x00	; 0
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	5f e3       	ldi	r21, 0x3F	; 63
 194:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 198:	9b 01       	movw	r18, r22
 19a:	ac 01       	movw	r20, r24
 19c:	60 e0       	ldi	r22, 0x00	; 0
 19e:	70 e0       	ldi	r23, 0x00	; 0
 1a0:	80 e8       	ldi	r24, 0x80	; 128
 1a2:	9f e3       	ldi	r25, 0x3F	; 63
 1a4:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 1a8:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <sqrt>
 1ac:	9b 01       	movw	r18, r22
 1ae:	ac 01       	movw	r20, r24
 1b0:	c5 01       	movw	r24, r10
 1b2:	b4 01       	movw	r22, r8
 1b4:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 1b8:	f7 01       	movw	r30, r14
 1ba:	60 83       	st	Z, r22
 1bc:	71 83       	std	Z+1, r23	; 0x01
 1be:	82 83       	std	Z+2, r24	; 0x02
 1c0:	93 83       	std	Z+3, r25	; 0x03
}
 1c2:	1f 91       	pop	r17
 1c4:	0f 91       	pop	r16
 1c6:	ff 90       	pop	r15
 1c8:	ef 90       	pop	r14
 1ca:	bf 90       	pop	r11
 1cc:	af 90       	pop	r10
 1ce:	9f 90       	pop	r9
 1d0:	8f 90       	pop	r8
 1d2:	7f 90       	pop	r7
 1d4:	6f 90       	pop	r6
 1d6:	5f 90       	pop	r5
 1d8:	4f 90       	pop	r4
 1da:	08 95       	ret

000001dc <_Z22ellipticalDiscToSquareddRdS_>:

void ellipticalDiscToSquare(double u, double v, double& x, double& y)
{
 1dc:	4f 92       	push	r4
 1de:	5f 92       	push	r5
 1e0:	6f 92       	push	r6
 1e2:	7f 92       	push	r7
 1e4:	8f 92       	push	r8
 1e6:	9f 92       	push	r9
 1e8:	af 92       	push	r10
 1ea:	bf 92       	push	r11
 1ec:	cf 92       	push	r12
 1ee:	df 92       	push	r13
 1f0:	ef 92       	push	r14
 1f2:	ff 92       	push	r15
 1f4:	0f 93       	push	r16
 1f6:	1f 93       	push	r17
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	cd b7       	in	r28, 0x3d	; 61
 1fe:	de b7       	in	r29, 0x3e	; 62
 200:	2e 97       	sbiw	r28, 0x0e	; 14
 202:	0f b6       	in	r0, 0x3f	; 63
 204:	f8 94       	cli
 206:	de bf       	out	0x3e, r29	; 62
 208:	0f be       	out	0x3f, r0	; 63
 20a:	cd bf       	out	0x3d, r28	; 61
 20c:	4b 01       	movw	r8, r22
 20e:	5c 01       	movw	r10, r24
 210:	29 01       	movw	r4, r18
 212:	3a 01       	movw	r6, r20
 214:	fe 86       	std	Y+14, r15	; 0x0e
 216:	ed 86       	std	Y+13, r14	; 0x0d
    double u2 = u * u;
 218:	9b 01       	movw	r18, r22
 21a:	ac 01       	movw	r20, r24
 21c:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 220:	6b 01       	movw	r12, r22
 222:	7c 01       	movw	r14, r24
    double v2 = v * v;
 224:	a3 01       	movw	r20, r6
 226:	92 01       	movw	r18, r4
 228:	c3 01       	movw	r24, r6
 22a:	b2 01       	movw	r22, r4
 22c:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 230:	69 83       	std	Y+1, r22	; 0x01
 232:	7a 83       	std	Y+2, r23	; 0x02
 234:	8b 83       	std	Y+3, r24	; 0x03
 236:	9c 83       	std	Y+4, r25	; 0x04
    double twosqrt2 = 2.0 * sqrt(2.0);
    double subtermx = 2.0 + u2 - v2;
 238:	20 e0       	ldi	r18, 0x00	; 0
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	40 e0       	ldi	r20, 0x00	; 0
 23e:	50 e4       	ldi	r21, 0x40	; 64
 240:	c7 01       	movw	r24, r14
 242:	b6 01       	movw	r22, r12
 244:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__addsf3>
 248:	29 81       	ldd	r18, Y+1	; 0x01
 24a:	3a 81       	ldd	r19, Y+2	; 0x02
 24c:	4b 81       	ldd	r20, Y+3	; 0x03
 24e:	5c 81       	ldd	r21, Y+4	; 0x04
 250:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 254:	6d 83       	std	Y+5, r22	; 0x05
 256:	7e 83       	std	Y+6, r23	; 0x06
 258:	8f 83       	std	Y+7, r24	; 0x07
 25a:	98 87       	std	Y+8, r25	; 0x08
    double subtermy = 2.0 - u2 + v2;
 25c:	a7 01       	movw	r20, r14
 25e:	96 01       	movw	r18, r12
 260:	60 e0       	ldi	r22, 0x00	; 0
 262:	70 e0       	ldi	r23, 0x00	; 0
 264:	80 e0       	ldi	r24, 0x00	; 0
 266:	90 e4       	ldi	r25, 0x40	; 64
 268:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 26c:	29 81       	ldd	r18, Y+1	; 0x01
 26e:	3a 81       	ldd	r19, Y+2	; 0x02
 270:	4b 81       	ldd	r20, Y+3	; 0x03
 272:	5c 81       	ldd	r21, Y+4	; 0x04
 274:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__addsf3>
 278:	6b 01       	movw	r12, r22
 27a:	7c 01       	movw	r14, r24
    double termx1 = subtermx + u * twosqrt2;
 27c:	23 ef       	ldi	r18, 0xF3	; 243
 27e:	34 e0       	ldi	r19, 0x04	; 4
 280:	45 e3       	ldi	r20, 0x35	; 53
 282:	50 e4       	ldi	r21, 0x40	; 64
 284:	c5 01       	movw	r24, r10
 286:	b4 01       	movw	r22, r8
 288:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 28c:	4b 01       	movw	r8, r22
 28e:	5c 01       	movw	r10, r24
    double termx2 = subtermx - u * twosqrt2;
    double termy1 = subtermy + v * twosqrt2;
 290:	23 ef       	ldi	r18, 0xF3	; 243
 292:	34 e0       	ldi	r19, 0x04	; 4
 294:	45 e3       	ldi	r20, 0x35	; 53
 296:	50 e4       	ldi	r21, 0x40	; 64
 298:	c3 01       	movw	r24, r6
 29a:	b2 01       	movw	r22, r4
 29c:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 2a0:	69 83       	std	Y+1, r22	; 0x01
 2a2:	7a 83       	std	Y+2, r23	; 0x02
 2a4:	8b 83       	std	Y+3, r24	; 0x03
 2a6:	9c 83       	std	Y+4, r25	; 0x04
    double termy2 = subtermy - v * twosqrt2;
    x = 0.5 * sqrt(termx1) - 0.5 * sqrt(termx2);
 2a8:	a5 01       	movw	r20, r10
 2aa:	94 01       	movw	r18, r8
 2ac:	6d 81       	ldd	r22, Y+5	; 0x05
 2ae:	7e 81       	ldd	r23, Y+6	; 0x06
 2b0:	8f 81       	ldd	r24, Y+7	; 0x07
 2b2:	98 85       	ldd	r25, Y+8	; 0x08
 2b4:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__addsf3>
 2b8:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <sqrt>
 2bc:	69 87       	std	Y+9, r22	; 0x09
 2be:	7a 87       	std	Y+10, r23	; 0x0a
 2c0:	8b 87       	std	Y+11, r24	; 0x0b
 2c2:	9c 87       	std	Y+12, r25	; 0x0c
 2c4:	a5 01       	movw	r20, r10
 2c6:	94 01       	movw	r18, r8
 2c8:	6d 81       	ldd	r22, Y+5	; 0x05
 2ca:	7e 81       	ldd	r23, Y+6	; 0x06
 2cc:	8f 81       	ldd	r24, Y+7	; 0x07
 2ce:	98 85       	ldd	r25, Y+8	; 0x08
 2d0:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 2d4:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <sqrt>
 2d8:	2b 01       	movw	r4, r22
 2da:	3c 01       	movw	r6, r24
 2dc:	20 e0       	ldi	r18, 0x00	; 0
 2de:	30 e0       	ldi	r19, 0x00	; 0
 2e0:	40 e0       	ldi	r20, 0x00	; 0
 2e2:	5f e3       	ldi	r21, 0x3F	; 63
 2e4:	69 85       	ldd	r22, Y+9	; 0x09
 2e6:	7a 85       	ldd	r23, Y+10	; 0x0a
 2e8:	8b 85       	ldd	r24, Y+11	; 0x0b
 2ea:	9c 85       	ldd	r25, Y+12	; 0x0c
 2ec:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 2f0:	4b 01       	movw	r8, r22
 2f2:	5c 01       	movw	r10, r24
 2f4:	20 e0       	ldi	r18, 0x00	; 0
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	40 e0       	ldi	r20, 0x00	; 0
 2fa:	5f e3       	ldi	r21, 0x3F	; 63
 2fc:	c3 01       	movw	r24, r6
 2fe:	b2 01       	movw	r22, r4
 300:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 304:	9b 01       	movw	r18, r22
 306:	ac 01       	movw	r20, r24
 308:	c5 01       	movw	r24, r10
 30a:	b4 01       	movw	r22, r8
 30c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 310:	f8 01       	movw	r30, r16
 312:	60 83       	st	Z, r22
 314:	71 83       	std	Z+1, r23	; 0x01
 316:	82 83       	std	Z+2, r24	; 0x02
 318:	93 83       	std	Z+3, r25	; 0x03
    y = 0.5 * sqrt(termy1) - 0.5 * sqrt(termy2);
 31a:	29 81       	ldd	r18, Y+1	; 0x01
 31c:	3a 81       	ldd	r19, Y+2	; 0x02
 31e:	4b 81       	ldd	r20, Y+3	; 0x03
 320:	5c 81       	ldd	r21, Y+4	; 0x04
 322:	c7 01       	movw	r24, r14
 324:	b6 01       	movw	r22, r12
 326:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__addsf3>
 32a:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <sqrt>
 32e:	4b 01       	movw	r8, r22
 330:	5c 01       	movw	r10, r24
 332:	29 81       	ldd	r18, Y+1	; 0x01
 334:	3a 81       	ldd	r19, Y+2	; 0x02
 336:	4b 81       	ldd	r20, Y+3	; 0x03
 338:	5c 81       	ldd	r21, Y+4	; 0x04
 33a:	c7 01       	movw	r24, r14
 33c:	b6 01       	movw	r22, r12
 33e:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 342:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <sqrt>
 346:	2b 01       	movw	r4, r22
 348:	3c 01       	movw	r6, r24
 34a:	20 e0       	ldi	r18, 0x00	; 0
 34c:	30 e0       	ldi	r19, 0x00	; 0
 34e:	40 e0       	ldi	r20, 0x00	; 0
 350:	5f e3       	ldi	r21, 0x3F	; 63
 352:	c5 01       	movw	r24, r10
 354:	b4 01       	movw	r22, r8
 356:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 35a:	6b 01       	movw	r12, r22
 35c:	7c 01       	movw	r14, r24
 35e:	20 e0       	ldi	r18, 0x00	; 0
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	40 e0       	ldi	r20, 0x00	; 0
 364:	5f e3       	ldi	r21, 0x3F	; 63
 366:	c3 01       	movw	r24, r6
 368:	b2 01       	movw	r22, r4
 36a:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 36e:	9b 01       	movw	r18, r22
 370:	ac 01       	movw	r20, r24
 372:	c7 01       	movw	r24, r14
 374:	b6 01       	movw	r22, r12
 376:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 37a:	ed 85       	ldd	r30, Y+13	; 0x0d
 37c:	fe 85       	ldd	r31, Y+14	; 0x0e
 37e:	60 83       	st	Z, r22
 380:	71 83       	std	Z+1, r23	; 0x01
 382:	82 83       	std	Z+2, r24	; 0x02
 384:	93 83       	std	Z+3, r25	; 0x03

}int main (void)
 386:	2e 96       	adiw	r28, 0x0e	; 14
 388:	0f b6       	in	r0, 0x3f	; 63
 38a:	f8 94       	cli
 38c:	de bf       	out	0x3e, r29	; 62
 38e:	0f be       	out	0x3f, r0	; 63
 390:	cd bf       	out	0x3d, r28	; 61
 392:	df 91       	pop	r29
 394:	cf 91       	pop	r28
 396:	1f 91       	pop	r17
 398:	0f 91       	pop	r16
 39a:	ff 90       	pop	r15
 39c:	ef 90       	pop	r14
 39e:	df 90       	pop	r13
 3a0:	cf 90       	pop	r12
 3a2:	bf 90       	pop	r11
 3a4:	af 90       	pop	r10
 3a6:	9f 90       	pop	r9
 3a8:	8f 90       	pop	r8
 3aa:	7f 90       	pop	r7
 3ac:	6f 90       	pop	r6
 3ae:	5f 90       	pop	r5
 3b0:	4f 90       	pop	r4
 3b2:	08 95       	ret

000003b4 <main>:
{
 3b4:	cf 93       	push	r28
 3b6:	df 93       	push	r29
 3b8:	cd b7       	in	r28, 0x3d	; 61
 3ba:	de b7       	in	r29, 0x3e	; 62
 3bc:	28 97       	sbiw	r28, 0x08	; 8
 3be:	0f b6       	in	r0, 0x3f	; 63
 3c0:	f8 94       	cli
 3c2:	de bf       	out	0x3e, r29	; 62
 3c4:	0f be       	out	0x3f, r0	; 63
 3c6:	cd bf       	out	0x3d, r28	; 61
    TCCR0 |= 1<<WGM00 | 1<< WGM01  | 1<< COM01 |1 <<CS00;
 3c8:	83 b7       	in	r24, 0x33	; 51
 3ca:	89 66       	ori	r24, 0x69	; 105
 3cc:	83 bf       	out	0x33, r24	; 51
	DDRB |= 1<< PB3 | 1<<PINB0 | 1<<PINB1;
 3ce:	87 b3       	in	r24, 0x17	; 23
 3d0:	8b 60       	ori	r24, 0x0B	; 11
 3d2:	87 bb       	out	0x17, r24	; 23
	TCCR2 |= 1<<WGM20 | 1<< WGM21 | 1<< COM21 |1 <<CS20;
 3d4:	85 b5       	in	r24, 0x25	; 37
 3d6:	89 66       	ori	r24, 0x69	; 105
 3d8:	85 bd       	out	0x25, r24	; 37
	DDRD |= 1<< PB7 | 1<< PB2;
 3da:	81 b3       	in	r24, 0x11	; 17
 3dc:	84 68       	ori	r24, 0x84	; 132
 3de:	81 bb       	out	0x11, r24	; 17
	PORTB &= ~(1<< PINB0);
 3e0:	c0 98       	cbi	0x18, 0	; 24
	PORTD &= ~(1<< PIND2);
 3e2:	92 98       	cbi	0x12, 2	; 18
	ADMUX |= 1<< REFS0;
 3e4:	3e 9a       	sbi	0x07, 6	; 7
	ADCSRA |= 1<< ADPS2;
 3e6:	32 9a       	sbi	0x06, 2	; 6
	ADCSRA |= 1<< ADEN;
 3e8:	37 9a       	sbi	0x06, 7	; 6
    {
		ADCSRA |= 1<< ADSC;
		while (ADCSRA & (1<< ADSC));
		uint8_t c1 = ADCL;
		uint16_t x2 = ADCH<<8 | c1;
		ADMUX ^= (1<<MUX0);
 3ea:	33 24       	eor	r3, r3
 3ec:	33 94       	inc	r3
	ADMUX |= 1<< REFS0;
	ADCSRA |= 1<< ADPS2;
	ADCSRA |= 1<< ADEN;
	while (1)
    {
		ADCSRA |= 1<< ADSC;
 3ee:	36 9a       	sbi	0x06, 6	; 6
		while (ADCSRA & (1<< ADSC));
 3f0:	36 99       	sbic	0x06, 6	; 6
 3f2:	fe cf       	rjmp	.-4      	; 0x3f0 <main+0x3c>
		uint8_t c1 = ADCL;
 3f4:	e4 b0       	in	r14, 0x04	; 4
		uint16_t x2 = ADCH<<8 | c1;
 3f6:	85 b1       	in	r24, 0x05	; 5
 3f8:	f1 2c       	mov	r15, r1
 3fa:	f8 2a       	or	r15, r24
		ADMUX ^= (1<<MUX0);
 3fc:	87 b1       	in	r24, 0x07	; 7
 3fe:	83 25       	eor	r24, r3
 400:	87 b9       	out	0x07, r24	; 7
		ADCSRA |= 1<< ADSC;
 402:	36 9a       	sbi	0x06, 6	; 6
		while (ADCSRA & (1<< ADSC));
 404:	36 99       	sbic	0x06, 6	; 6
 406:	fe cf       	rjmp	.-4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
		c1 = ADCL;
 408:	84 b1       	in	r24, 0x04	; 4
		uint16_t y2=ADCH<<8 | c1;
 40a:	25 b1       	in	r18, 0x05	; 5
		ADMUX ^= (1<<MUX0);
 40c:	97 b1       	in	r25, 0x07	; 7
 40e:	93 25       	eor	r25, r3
 410:	97 b9       	out	0x07, r25	; 7
		double x1 = x2 - 512;
    double y1 = 512 - y2;
    x1=map(x1,-512,512,-1,1);
    y1=map(y1,-512,512,-1,1);
    double xans,yans;
    ellipticalSquareToDisc(x1, y1, xans, yans);
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	92 2b       	or	r25, r18
 416:	60 e0       	ldi	r22, 0x00	; 0
 418:	72 e0       	ldi	r23, 0x02	; 2
 41a:	68 1b       	sub	r22, r24
 41c:	79 0b       	sbc	r23, r25
 41e:	80 e0       	ldi	r24, 0x00	; 0
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 ef 03 	call	0x7de	; 0x7de <__floatunsisf>
 426:	20 e0       	ldi	r18, 0x00	; 0
 428:	30 e0       	ldi	r19, 0x00	; 0
 42a:	40 e0       	ldi	r20, 0x00	; 0
 42c:	54 ec       	ldi	r21, 0xC4	; 196
 42e:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 432:	9b 01       	movw	r18, r22
 434:	ac 01       	movw	r20, r24
 436:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__addsf3>
 43a:	20 e0       	ldi	r18, 0x00	; 0
 43c:	30 e0       	ldi	r19, 0x00	; 0
 43e:	40 e8       	ldi	r20, 0x80	; 128
 440:	5a e3       	ldi	r21, 0x3A	; 58
 442:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 446:	20 e0       	ldi	r18, 0x00	; 0
 448:	30 e0       	ldi	r19, 0x00	; 0
 44a:	40 e8       	ldi	r20, 0x80	; 128
 44c:	5f e3       	ldi	r21, 0x3F	; 63
 44e:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 452:	2b 01       	movw	r4, r22
 454:	3c 01       	movw	r6, r24
 456:	b7 01       	movw	r22, r14
 458:	72 50       	subi	r23, 0x02	; 2
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 ef 03 	call	0x7de	; 0x7de <__floatunsisf>
 462:	20 e0       	ldi	r18, 0x00	; 0
 464:	30 e0       	ldi	r19, 0x00	; 0
 466:	40 e0       	ldi	r20, 0x00	; 0
 468:	54 ec       	ldi	r21, 0xC4	; 196
 46a:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 46e:	9b 01       	movw	r18, r22
 470:	ac 01       	movw	r20, r24
 472:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__addsf3>
 476:	20 e0       	ldi	r18, 0x00	; 0
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	40 e8       	ldi	r20, 0x80	; 128
 47c:	5a e3       	ldi	r21, 0x3A	; 58
 47e:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 482:	20 e0       	ldi	r18, 0x00	; 0
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	40 e8       	ldi	r20, 0x80	; 128
 488:	5f e3       	ldi	r21, 0x3F	; 63
 48a:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 48e:	9e 01       	movw	r18, r28
 490:	2f 5f       	subi	r18, 0xFF	; 255
 492:	3f 4f       	sbci	r19, 0xFF	; 255
 494:	79 01       	movw	r14, r18
 496:	8e 01       	movw	r16, r28
 498:	0b 5f       	subi	r16, 0xFB	; 251
 49a:	1f 4f       	sbci	r17, 0xFF	; 255
 49c:	a3 01       	movw	r20, r6
 49e:	92 01       	movw	r18, r4
 4a0:	0e 94 93 00 	call	0x126	; 0x126 <_Z22ellipticalSquareToDiscddRdS_>



    double x = (xans * 0.707) + (yans * 0.707);
 4a4:	cd 80       	ldd	r12, Y+5	; 0x05
 4a6:	de 80       	ldd	r13, Y+6	; 0x06
 4a8:	ef 80       	ldd	r14, Y+7	; 0x07
 4aa:	f8 84       	ldd	r15, Y+8	; 0x08
 4ac:	24 ef       	ldi	r18, 0xF4	; 244
 4ae:	3d ef       	ldi	r19, 0xFD	; 253
 4b0:	44 e3       	ldi	r20, 0x34	; 52
 4b2:	5f e3       	ldi	r21, 0x3F	; 63
 4b4:	69 81       	ldd	r22, Y+1	; 0x01
 4b6:	7a 81       	ldd	r23, Y+2	; 0x02
 4b8:	8b 81       	ldd	r24, Y+3	; 0x03
 4ba:	9c 81       	ldd	r25, Y+4	; 0x04
 4bc:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 4c0:	2b 01       	movw	r4, r22
 4c2:	3c 01       	movw	r6, r24
    double y = (-xans * 0.707) + (yans * 0.707);
    ellipticalDiscToSquare(x,y,xans,yans);
 4c4:	c7 01       	movw	r24, r14
 4c6:	b6 01       	movw	r22, r12
 4c8:	90 58       	subi	r25, 0x80	; 128
 4ca:	24 ef       	ldi	r18, 0xF4	; 244
 4cc:	3d ef       	ldi	r19, 0xFD	; 253
 4ce:	44 e3       	ldi	r20, 0x34	; 52
 4d0:	5f e3       	ldi	r21, 0x3F	; 63
 4d2:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 4d6:	a3 01       	movw	r20, r6
 4d8:	92 01       	movw	r18, r4
 4da:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__addsf3>
 4de:	4b 01       	movw	r8, r22
 4e0:	5c 01       	movw	r10, r24
 4e2:	24 ef       	ldi	r18, 0xF4	; 244
 4e4:	3d ef       	ldi	r19, 0xFD	; 253
 4e6:	44 e3       	ldi	r20, 0x34	; 52
 4e8:	5f e3       	ldi	r21, 0x3F	; 63
 4ea:	c7 01       	movw	r24, r14
 4ec:	b6 01       	movw	r22, r12
 4ee:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 4f2:	a3 01       	movw	r20, r6
 4f4:	92 01       	movw	r18, r4
 4f6:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__addsf3>
 4fa:	9e 01       	movw	r18, r28
 4fc:	2f 5f       	subi	r18, 0xFF	; 255
 4fe:	3f 4f       	sbci	r19, 0xFF	; 255
 500:	79 01       	movw	r14, r18
 502:	a5 01       	movw	r20, r10
 504:	94 01       	movw	r18, r8
 506:	0e 94 ee 00 	call	0x1dc	; 0x1dc <_Z22ellipticalDiscToSquareddRdS_>
    int x3=map(xans,-0.991273,0.991273,-255,255);
 50a:	21 e1       	ldi	r18, 0x11	; 17
 50c:	34 ec       	ldi	r19, 0xC4	; 196
 50e:	4d e7       	ldi	r20, 0x7D	; 125
 510:	5f eb       	ldi	r21, 0xBF	; 191
 512:	6d 81       	ldd	r22, Y+5	; 0x05
 514:	7e 81       	ldd	r23, Y+6	; 0x06
 516:	8f 81       	ldd	r24, Y+7	; 0x07
 518:	98 85       	ldd	r25, Y+8	; 0x08
 51a:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 51e:	20 e0       	ldi	r18, 0x00	; 0
 520:	30 e0       	ldi	r19, 0x00	; 0
 522:	4f ef       	ldi	r20, 0xFF	; 255
 524:	53 e4       	ldi	r21, 0x43	; 67
 526:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 52a:	21 e1       	ldi	r18, 0x11	; 17
 52c:	34 ec       	ldi	r19, 0xC4	; 196
 52e:	4d ef       	ldi	r20, 0xFD	; 253
 530:	5f e3       	ldi	r21, 0x3F	; 63
 532:	0e 94 47 03 	call	0x68e	; 0x68e <__divsf3>
 536:	20 e0       	ldi	r18, 0x00	; 0
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	4f e7       	ldi	r20, 0x7F	; 127
 53c:	53 e4       	ldi	r21, 0x43	; 67
 53e:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 542:	0e 94 b9 03 	call	0x772	; 0x772 <__fixsfsi>
 546:	16 2f       	mov	r17, r22
 548:	e6 2e       	mov	r14, r22
 54a:	f7 2e       	mov	r15, r23
    int y3=map(yans,-0.991273,0.991273,-255,255);
 54c:	21 e1       	ldi	r18, 0x11	; 17
 54e:	34 ec       	ldi	r19, 0xC4	; 196
 550:	4d e7       	ldi	r20, 0x7D	; 125
 552:	5f eb       	ldi	r21, 0xBF	; 191
 554:	69 81       	ldd	r22, Y+1	; 0x01
 556:	7a 81       	ldd	r23, Y+2	; 0x02
 558:	8b 81       	ldd	r24, Y+3	; 0x03
 55a:	9c 81       	ldd	r25, Y+4	; 0x04
 55c:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 560:	20 e0       	ldi	r18, 0x00	; 0
 562:	30 e0       	ldi	r19, 0x00	; 0
 564:	4f ef       	ldi	r20, 0xFF	; 255
 566:	53 e4       	ldi	r21, 0x43	; 67
 568:	0e 94 7d 04 	call	0x8fa	; 0x8fa <__mulsf3>
 56c:	21 e1       	ldi	r18, 0x11	; 17
 56e:	34 ec       	ldi	r19, 0xC4	; 196
 570:	4d ef       	ldi	r20, 0xFD	; 253
 572:	5f e3       	ldi	r21, 0x3F	; 63
 574:	0e 94 47 03 	call	0x68e	; 0x68e <__divsf3>
 578:	20 e0       	ldi	r18, 0x00	; 0
 57a:	30 e0       	ldi	r19, 0x00	; 0
 57c:	4f e7       	ldi	r20, 0x7F	; 127
 57e:	53 e4       	ldi	r21, 0x43	; 67
 580:	0e 94 da 02 	call	0x5b4	; 0x5b4 <__subsf3>
 584:	0e 94 b9 03 	call	0x772	; 0x772 <__fixsfsi>
 588:	cb 01       	movw	r24, r22
		x5=0;

		if(y5<20&&y5>-20)
		y5=0;*/

		if(x3>0)
 58a:	1e 14       	cp	r1, r14
 58c:	1f 04       	cpc	r1, r15
 58e:	1c f4       	brge	.+6      	; 0x596 <__stack+0x137>
		{
			OCR0=x3;
 590:	1c bf       	out	0x3c, r17	; 60
			PORTB|=1<<PB0;
 592:	c0 9a       	sbi	0x18, 0	; 24
 594:	03 c0       	rjmp	.+6      	; 0x59c <__stack+0x13d>
		}
		else
		{
			OCR0=-x3;
 596:	11 95       	neg	r17
 598:	1c bf       	out	0x3c, r17	; 60
			PORTB&=~(1<<PB0);
 59a:	c0 98       	cbi	0x18, 0	; 24
		}
		if(y3>0)
 59c:	18 16       	cp	r1, r24
 59e:	19 06       	cpc	r1, r25
 5a0:	1c f4       	brge	.+6      	; 0x5a8 <__stack+0x149>
		{
		OCR2=y3;
 5a2:	63 bd       	out	0x23, r22	; 35
		PORTD|=1<<PD2;
 5a4:	92 9a       	sbi	0x12, 2	; 18
 5a6:	23 cf       	rjmp	.-442    	; 0x3ee <main+0x3a>
		}
		else
		{
			OCR2=-y3;
 5a8:	61 95       	neg	r22
 5aa:	63 bd       	out	0x23, r22	; 35
			PORTD&=~1<<PD2;
 5ac:	82 b3       	in	r24, 0x12	; 18
 5ae:	88 7f       	andi	r24, 0xF8	; 248
 5b0:	82 bb       	out	0x12, r24	; 18
	PORTB &= ~(1<< PINB0);
	PORTD &= ~(1<< PIND2);
	ADMUX |= 1<< REFS0;
	ADCSRA |= 1<< ADPS2;
	ADCSRA |= 1<< ADEN;
	while (1)
 5b2:	1d cf       	rjmp	.-454    	; 0x3ee <main+0x3a>

000005b4 <__subsf3>:
 5b4:	50 58       	subi	r21, 0x80	; 128

000005b6 <__addsf3>:
 5b6:	bb 27       	eor	r27, r27
 5b8:	aa 27       	eor	r26, r26
 5ba:	0e 94 f2 02 	call	0x5e4	; 0x5e4 <__addsf3x>
 5be:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_round>
 5c2:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscA>
 5c6:	38 f0       	brcs	.+14     	; 0x5d6 <__addsf3+0x20>
 5c8:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscB>
 5cc:	20 f0       	brcs	.+8      	; 0x5d6 <__addsf3+0x20>
 5ce:	39 f4       	brne	.+14     	; 0x5de <__addsf3+0x28>
 5d0:	9f 3f       	cpi	r25, 0xFF	; 255
 5d2:	19 f4       	brne	.+6      	; 0x5da <__addsf3+0x24>
 5d4:	26 f4       	brtc	.+8      	; 0x5de <__addsf3+0x28>
 5d6:	0c 94 32 04 	jmp	0x864	; 0x864 <__fp_nan>
 5da:	0e f4       	brtc	.+2      	; 0x5de <__addsf3+0x28>
 5dc:	e0 95       	com	r30
 5de:	e7 fb       	bst	r30, 7
 5e0:	0c 94 2c 04 	jmp	0x858	; 0x858 <__fp_inf>

000005e4 <__addsf3x>:
 5e4:	e9 2f       	mov	r30, r25
 5e6:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_split3>
 5ea:	58 f3       	brcs	.-42     	; 0x5c2 <__addsf3+0xc>
 5ec:	ba 17       	cp	r27, r26
 5ee:	62 07       	cpc	r22, r18
 5f0:	73 07       	cpc	r23, r19
 5f2:	84 07       	cpc	r24, r20
 5f4:	95 07       	cpc	r25, r21
 5f6:	20 f0       	brcs	.+8      	; 0x600 <__addsf3x+0x1c>
 5f8:	79 f4       	brne	.+30     	; 0x618 <__addsf3x+0x34>
 5fa:	a6 f5       	brtc	.+104    	; 0x664 <__addsf3x+0x80>
 5fc:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__fp_zero>
 600:	0e f4       	brtc	.+2      	; 0x604 <__addsf3x+0x20>
 602:	e0 95       	com	r30
 604:	0b 2e       	mov	r0, r27
 606:	ba 2f       	mov	r27, r26
 608:	a0 2d       	mov	r26, r0
 60a:	0b 01       	movw	r0, r22
 60c:	b9 01       	movw	r22, r18
 60e:	90 01       	movw	r18, r0
 610:	0c 01       	movw	r0, r24
 612:	ca 01       	movw	r24, r20
 614:	a0 01       	movw	r20, r0
 616:	11 24       	eor	r1, r1
 618:	ff 27       	eor	r31, r31
 61a:	59 1b       	sub	r21, r25
 61c:	99 f0       	breq	.+38     	; 0x644 <__addsf3x+0x60>
 61e:	59 3f       	cpi	r21, 0xF9	; 249
 620:	50 f4       	brcc	.+20     	; 0x636 <__addsf3x+0x52>
 622:	50 3e       	cpi	r21, 0xE0	; 224
 624:	68 f1       	brcs	.+90     	; 0x680 <__addsf3x+0x9c>
 626:	1a 16       	cp	r1, r26
 628:	f0 40       	sbci	r31, 0x00	; 0
 62a:	a2 2f       	mov	r26, r18
 62c:	23 2f       	mov	r18, r19
 62e:	34 2f       	mov	r19, r20
 630:	44 27       	eor	r20, r20
 632:	58 5f       	subi	r21, 0xF8	; 248
 634:	f3 cf       	rjmp	.-26     	; 0x61c <__addsf3x+0x38>
 636:	46 95       	lsr	r20
 638:	37 95       	ror	r19
 63a:	27 95       	ror	r18
 63c:	a7 95       	ror	r26
 63e:	f0 40       	sbci	r31, 0x00	; 0
 640:	53 95       	inc	r21
 642:	c9 f7       	brne	.-14     	; 0x636 <__addsf3x+0x52>
 644:	7e f4       	brtc	.+30     	; 0x664 <__addsf3x+0x80>
 646:	1f 16       	cp	r1, r31
 648:	ba 0b       	sbc	r27, r26
 64a:	62 0b       	sbc	r22, r18
 64c:	73 0b       	sbc	r23, r19
 64e:	84 0b       	sbc	r24, r20
 650:	ba f0       	brmi	.+46     	; 0x680 <__addsf3x+0x9c>
 652:	91 50       	subi	r25, 0x01	; 1
 654:	a1 f0       	breq	.+40     	; 0x67e <__addsf3x+0x9a>
 656:	ff 0f       	add	r31, r31
 658:	bb 1f       	adc	r27, r27
 65a:	66 1f       	adc	r22, r22
 65c:	77 1f       	adc	r23, r23
 65e:	88 1f       	adc	r24, r24
 660:	c2 f7       	brpl	.-16     	; 0x652 <__addsf3x+0x6e>
 662:	0e c0       	rjmp	.+28     	; 0x680 <__addsf3x+0x9c>
 664:	ba 0f       	add	r27, r26
 666:	62 1f       	adc	r22, r18
 668:	73 1f       	adc	r23, r19
 66a:	84 1f       	adc	r24, r20
 66c:	48 f4       	brcc	.+18     	; 0x680 <__addsf3x+0x9c>
 66e:	87 95       	ror	r24
 670:	77 95       	ror	r23
 672:	67 95       	ror	r22
 674:	b7 95       	ror	r27
 676:	f7 95       	ror	r31
 678:	9e 3f       	cpi	r25, 0xFE	; 254
 67a:	08 f0       	brcs	.+2      	; 0x67e <__addsf3x+0x9a>
 67c:	b0 cf       	rjmp	.-160    	; 0x5de <__addsf3+0x28>
 67e:	93 95       	inc	r25
 680:	88 0f       	add	r24, r24
 682:	08 f0       	brcs	.+2      	; 0x686 <__addsf3x+0xa2>
 684:	99 27       	eor	r25, r25
 686:	ee 0f       	add	r30, r30
 688:	97 95       	ror	r25
 68a:	87 95       	ror	r24
 68c:	08 95       	ret

0000068e <__divsf3>:
 68e:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <__divsf3x>
 692:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_round>
 696:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscB>
 69a:	58 f0       	brcs	.+22     	; 0x6b2 <__divsf3+0x24>
 69c:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscA>
 6a0:	40 f0       	brcs	.+16     	; 0x6b2 <__divsf3+0x24>
 6a2:	29 f4       	brne	.+10     	; 0x6ae <__divsf3+0x20>
 6a4:	5f 3f       	cpi	r21, 0xFF	; 255
 6a6:	29 f0       	breq	.+10     	; 0x6b2 <__divsf3+0x24>
 6a8:	0c 94 2c 04 	jmp	0x858	; 0x858 <__fp_inf>
 6ac:	51 11       	cpse	r21, r1
 6ae:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
 6b2:	0c 94 32 04 	jmp	0x864	; 0x864 <__fp_nan>

000006b6 <__divsf3x>:
 6b6:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_split3>
 6ba:	68 f3       	brcs	.-38     	; 0x696 <__divsf3+0x8>

000006bc <__divsf3_pse>:
 6bc:	99 23       	and	r25, r25
 6be:	b1 f3       	breq	.-20     	; 0x6ac <__divsf3+0x1e>
 6c0:	55 23       	and	r21, r21
 6c2:	91 f3       	breq	.-28     	; 0x6a8 <__divsf3+0x1a>
 6c4:	95 1b       	sub	r25, r21
 6c6:	55 0b       	sbc	r21, r21
 6c8:	bb 27       	eor	r27, r27
 6ca:	aa 27       	eor	r26, r26
 6cc:	62 17       	cp	r22, r18
 6ce:	73 07       	cpc	r23, r19
 6d0:	84 07       	cpc	r24, r20
 6d2:	38 f0       	brcs	.+14     	; 0x6e2 <__divsf3_pse+0x26>
 6d4:	9f 5f       	subi	r25, 0xFF	; 255
 6d6:	5f 4f       	sbci	r21, 0xFF	; 255
 6d8:	22 0f       	add	r18, r18
 6da:	33 1f       	adc	r19, r19
 6dc:	44 1f       	adc	r20, r20
 6de:	aa 1f       	adc	r26, r26
 6e0:	a9 f3       	breq	.-22     	; 0x6cc <__divsf3_pse+0x10>
 6e2:	35 d0       	rcall	.+106    	; 0x74e <__divsf3_pse+0x92>
 6e4:	0e 2e       	mov	r0, r30
 6e6:	3a f0       	brmi	.+14     	; 0x6f6 <__divsf3_pse+0x3a>
 6e8:	e0 e8       	ldi	r30, 0x80	; 128
 6ea:	32 d0       	rcall	.+100    	; 0x750 <__divsf3_pse+0x94>
 6ec:	91 50       	subi	r25, 0x01	; 1
 6ee:	50 40       	sbci	r21, 0x00	; 0
 6f0:	e6 95       	lsr	r30
 6f2:	00 1c       	adc	r0, r0
 6f4:	ca f7       	brpl	.-14     	; 0x6e8 <__divsf3_pse+0x2c>
 6f6:	2b d0       	rcall	.+86     	; 0x74e <__divsf3_pse+0x92>
 6f8:	fe 2f       	mov	r31, r30
 6fa:	29 d0       	rcall	.+82     	; 0x74e <__divsf3_pse+0x92>
 6fc:	66 0f       	add	r22, r22
 6fe:	77 1f       	adc	r23, r23
 700:	88 1f       	adc	r24, r24
 702:	bb 1f       	adc	r27, r27
 704:	26 17       	cp	r18, r22
 706:	37 07       	cpc	r19, r23
 708:	48 07       	cpc	r20, r24
 70a:	ab 07       	cpc	r26, r27
 70c:	b0 e8       	ldi	r27, 0x80	; 128
 70e:	09 f0       	breq	.+2      	; 0x712 <__divsf3_pse+0x56>
 710:	bb 0b       	sbc	r27, r27
 712:	80 2d       	mov	r24, r0
 714:	bf 01       	movw	r22, r30
 716:	ff 27       	eor	r31, r31
 718:	93 58       	subi	r25, 0x83	; 131
 71a:	5f 4f       	sbci	r21, 0xFF	; 255
 71c:	3a f0       	brmi	.+14     	; 0x72c <__divsf3_pse+0x70>
 71e:	9e 3f       	cpi	r25, 0xFE	; 254
 720:	51 05       	cpc	r21, r1
 722:	78 f0       	brcs	.+30     	; 0x742 <__divsf3_pse+0x86>
 724:	0c 94 2c 04 	jmp	0x858	; 0x858 <__fp_inf>
 728:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
 72c:	5f 3f       	cpi	r21, 0xFF	; 255
 72e:	e4 f3       	brlt	.-8      	; 0x728 <__divsf3_pse+0x6c>
 730:	98 3e       	cpi	r25, 0xE8	; 232
 732:	d4 f3       	brlt	.-12     	; 0x728 <__divsf3_pse+0x6c>
 734:	86 95       	lsr	r24
 736:	77 95       	ror	r23
 738:	67 95       	ror	r22
 73a:	b7 95       	ror	r27
 73c:	f7 95       	ror	r31
 73e:	9f 5f       	subi	r25, 0xFF	; 255
 740:	c9 f7       	brne	.-14     	; 0x734 <__divsf3_pse+0x78>
 742:	88 0f       	add	r24, r24
 744:	91 1d       	adc	r25, r1
 746:	96 95       	lsr	r25
 748:	87 95       	ror	r24
 74a:	97 f9       	bld	r25, 7
 74c:	08 95       	ret
 74e:	e1 e0       	ldi	r30, 0x01	; 1
 750:	66 0f       	add	r22, r22
 752:	77 1f       	adc	r23, r23
 754:	88 1f       	adc	r24, r24
 756:	bb 1f       	adc	r27, r27
 758:	62 17       	cp	r22, r18
 75a:	73 07       	cpc	r23, r19
 75c:	84 07       	cpc	r24, r20
 75e:	ba 07       	cpc	r27, r26
 760:	20 f0       	brcs	.+8      	; 0x76a <__divsf3_pse+0xae>
 762:	62 1b       	sub	r22, r18
 764:	73 0b       	sbc	r23, r19
 766:	84 0b       	sbc	r24, r20
 768:	ba 0b       	sbc	r27, r26
 76a:	ee 1f       	adc	r30, r30
 76c:	88 f7       	brcc	.-30     	; 0x750 <__divsf3_pse+0x94>
 76e:	e0 95       	com	r30
 770:	08 95       	ret

00000772 <__fixsfsi>:
 772:	0e 94 c0 03 	call	0x780	; 0x780 <__fixunssfsi>
 776:	68 94       	set
 778:	b1 11       	cpse	r27, r1
 77a:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
 77e:	08 95       	ret

00000780 <__fixunssfsi>:
 780:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fp_splitA>
 784:	88 f0       	brcs	.+34     	; 0x7a8 <__fixunssfsi+0x28>
 786:	9f 57       	subi	r25, 0x7F	; 127
 788:	98 f0       	brcs	.+38     	; 0x7b0 <__fixunssfsi+0x30>
 78a:	b9 2f       	mov	r27, r25
 78c:	99 27       	eor	r25, r25
 78e:	b7 51       	subi	r27, 0x17	; 23
 790:	b0 f0       	brcs	.+44     	; 0x7be <__fixunssfsi+0x3e>
 792:	e1 f0       	breq	.+56     	; 0x7cc <__fixunssfsi+0x4c>
 794:	66 0f       	add	r22, r22
 796:	77 1f       	adc	r23, r23
 798:	88 1f       	adc	r24, r24
 79a:	99 1f       	adc	r25, r25
 79c:	1a f0       	brmi	.+6      	; 0x7a4 <__fixunssfsi+0x24>
 79e:	ba 95       	dec	r27
 7a0:	c9 f7       	brne	.-14     	; 0x794 <__fixunssfsi+0x14>
 7a2:	14 c0       	rjmp	.+40     	; 0x7cc <__fixunssfsi+0x4c>
 7a4:	b1 30       	cpi	r27, 0x01	; 1
 7a6:	91 f0       	breq	.+36     	; 0x7cc <__fixunssfsi+0x4c>
 7a8:	0e 94 76 04 	call	0x8ec	; 0x8ec <__fp_zero>
 7ac:	b1 e0       	ldi	r27, 0x01	; 1
 7ae:	08 95       	ret
 7b0:	0c 94 76 04 	jmp	0x8ec	; 0x8ec <__fp_zero>
 7b4:	67 2f       	mov	r22, r23
 7b6:	78 2f       	mov	r23, r24
 7b8:	88 27       	eor	r24, r24
 7ba:	b8 5f       	subi	r27, 0xF8	; 248
 7bc:	39 f0       	breq	.+14     	; 0x7cc <__fixunssfsi+0x4c>
 7be:	b9 3f       	cpi	r27, 0xF9	; 249
 7c0:	cc f3       	brlt	.-14     	; 0x7b4 <__fixunssfsi+0x34>
 7c2:	86 95       	lsr	r24
 7c4:	77 95       	ror	r23
 7c6:	67 95       	ror	r22
 7c8:	b3 95       	inc	r27
 7ca:	d9 f7       	brne	.-10     	; 0x7c2 <__fixunssfsi+0x42>
 7cc:	3e f4       	brtc	.+14     	; 0x7dc <__fixunssfsi+0x5c>
 7ce:	90 95       	com	r25
 7d0:	80 95       	com	r24
 7d2:	70 95       	com	r23
 7d4:	61 95       	neg	r22
 7d6:	7f 4f       	sbci	r23, 0xFF	; 255
 7d8:	8f 4f       	sbci	r24, 0xFF	; 255
 7da:	9f 4f       	sbci	r25, 0xFF	; 255
 7dc:	08 95       	ret

000007de <__floatunsisf>:
 7de:	e8 94       	clt
 7e0:	09 c0       	rjmp	.+18     	; 0x7f4 <__floatsisf+0x12>

000007e2 <__floatsisf>:
 7e2:	97 fb       	bst	r25, 7
 7e4:	3e f4       	brtc	.+14     	; 0x7f4 <__floatsisf+0x12>
 7e6:	90 95       	com	r25
 7e8:	80 95       	com	r24
 7ea:	70 95       	com	r23
 7ec:	61 95       	neg	r22
 7ee:	7f 4f       	sbci	r23, 0xFF	; 255
 7f0:	8f 4f       	sbci	r24, 0xFF	; 255
 7f2:	9f 4f       	sbci	r25, 0xFF	; 255
 7f4:	99 23       	and	r25, r25
 7f6:	a9 f0       	breq	.+42     	; 0x822 <__floatsisf+0x40>
 7f8:	f9 2f       	mov	r31, r25
 7fa:	96 e9       	ldi	r25, 0x96	; 150
 7fc:	bb 27       	eor	r27, r27
 7fe:	93 95       	inc	r25
 800:	f6 95       	lsr	r31
 802:	87 95       	ror	r24
 804:	77 95       	ror	r23
 806:	67 95       	ror	r22
 808:	b7 95       	ror	r27
 80a:	f1 11       	cpse	r31, r1
 80c:	f8 cf       	rjmp	.-16     	; 0x7fe <__floatsisf+0x1c>
 80e:	fa f4       	brpl	.+62     	; 0x84e <__floatsisf+0x6c>
 810:	bb 0f       	add	r27, r27
 812:	11 f4       	brne	.+4      	; 0x818 <__floatsisf+0x36>
 814:	60 ff       	sbrs	r22, 0
 816:	1b c0       	rjmp	.+54     	; 0x84e <__floatsisf+0x6c>
 818:	6f 5f       	subi	r22, 0xFF	; 255
 81a:	7f 4f       	sbci	r23, 0xFF	; 255
 81c:	8f 4f       	sbci	r24, 0xFF	; 255
 81e:	9f 4f       	sbci	r25, 0xFF	; 255
 820:	16 c0       	rjmp	.+44     	; 0x84e <__floatsisf+0x6c>
 822:	88 23       	and	r24, r24
 824:	11 f0       	breq	.+4      	; 0x82a <__floatsisf+0x48>
 826:	96 e9       	ldi	r25, 0x96	; 150
 828:	11 c0       	rjmp	.+34     	; 0x84c <__floatsisf+0x6a>
 82a:	77 23       	and	r23, r23
 82c:	21 f0       	breq	.+8      	; 0x836 <__floatsisf+0x54>
 82e:	9e e8       	ldi	r25, 0x8E	; 142
 830:	87 2f       	mov	r24, r23
 832:	76 2f       	mov	r23, r22
 834:	05 c0       	rjmp	.+10     	; 0x840 <__floatsisf+0x5e>
 836:	66 23       	and	r22, r22
 838:	71 f0       	breq	.+28     	; 0x856 <__floatsisf+0x74>
 83a:	96 e8       	ldi	r25, 0x86	; 134
 83c:	86 2f       	mov	r24, r22
 83e:	70 e0       	ldi	r23, 0x00	; 0
 840:	60 e0       	ldi	r22, 0x00	; 0
 842:	2a f0       	brmi	.+10     	; 0x84e <__floatsisf+0x6c>
 844:	9a 95       	dec	r25
 846:	66 0f       	add	r22, r22
 848:	77 1f       	adc	r23, r23
 84a:	88 1f       	adc	r24, r24
 84c:	da f7       	brpl	.-10     	; 0x844 <__floatsisf+0x62>
 84e:	88 0f       	add	r24, r24
 850:	96 95       	lsr	r25
 852:	87 95       	ror	r24
 854:	97 f9       	bld	r25, 7
 856:	08 95       	ret

00000858 <__fp_inf>:
 858:	97 f9       	bld	r25, 7
 85a:	9f 67       	ori	r25, 0x7F	; 127
 85c:	80 e8       	ldi	r24, 0x80	; 128
 85e:	70 e0       	ldi	r23, 0x00	; 0
 860:	60 e0       	ldi	r22, 0x00	; 0
 862:	08 95       	ret

00000864 <__fp_nan>:
 864:	9f ef       	ldi	r25, 0xFF	; 255
 866:	80 ec       	ldi	r24, 0xC0	; 192
 868:	08 95       	ret

0000086a <__fp_pscA>:
 86a:	00 24       	eor	r0, r0
 86c:	0a 94       	dec	r0
 86e:	16 16       	cp	r1, r22
 870:	17 06       	cpc	r1, r23
 872:	18 06       	cpc	r1, r24
 874:	09 06       	cpc	r0, r25
 876:	08 95       	ret

00000878 <__fp_pscB>:
 878:	00 24       	eor	r0, r0
 87a:	0a 94       	dec	r0
 87c:	12 16       	cp	r1, r18
 87e:	13 06       	cpc	r1, r19
 880:	14 06       	cpc	r1, r20
 882:	05 06       	cpc	r0, r21
 884:	08 95       	ret

00000886 <__fp_round>:
 886:	09 2e       	mov	r0, r25
 888:	03 94       	inc	r0
 88a:	00 0c       	add	r0, r0
 88c:	11 f4       	brne	.+4      	; 0x892 <__fp_round+0xc>
 88e:	88 23       	and	r24, r24
 890:	52 f0       	brmi	.+20     	; 0x8a6 <__fp_round+0x20>
 892:	bb 0f       	add	r27, r27
 894:	40 f4       	brcc	.+16     	; 0x8a6 <__fp_round+0x20>
 896:	bf 2b       	or	r27, r31
 898:	11 f4       	brne	.+4      	; 0x89e <__fp_round+0x18>
 89a:	60 ff       	sbrs	r22, 0
 89c:	04 c0       	rjmp	.+8      	; 0x8a6 <__fp_round+0x20>
 89e:	6f 5f       	subi	r22, 0xFF	; 255
 8a0:	7f 4f       	sbci	r23, 0xFF	; 255
 8a2:	8f 4f       	sbci	r24, 0xFF	; 255
 8a4:	9f 4f       	sbci	r25, 0xFF	; 255
 8a6:	08 95       	ret

000008a8 <__fp_split3>:
 8a8:	57 fd       	sbrc	r21, 7
 8aa:	90 58       	subi	r25, 0x80	; 128
 8ac:	44 0f       	add	r20, r20
 8ae:	55 1f       	adc	r21, r21
 8b0:	59 f0       	breq	.+22     	; 0x8c8 <__fp_splitA+0x10>
 8b2:	5f 3f       	cpi	r21, 0xFF	; 255
 8b4:	71 f0       	breq	.+28     	; 0x8d2 <__fp_splitA+0x1a>
 8b6:	47 95       	ror	r20

000008b8 <__fp_splitA>:
 8b8:	88 0f       	add	r24, r24
 8ba:	97 fb       	bst	r25, 7
 8bc:	99 1f       	adc	r25, r25
 8be:	61 f0       	breq	.+24     	; 0x8d8 <__fp_splitA+0x20>
 8c0:	9f 3f       	cpi	r25, 0xFF	; 255
 8c2:	79 f0       	breq	.+30     	; 0x8e2 <__fp_splitA+0x2a>
 8c4:	87 95       	ror	r24
 8c6:	08 95       	ret
 8c8:	12 16       	cp	r1, r18
 8ca:	13 06       	cpc	r1, r19
 8cc:	14 06       	cpc	r1, r20
 8ce:	55 1f       	adc	r21, r21
 8d0:	f2 cf       	rjmp	.-28     	; 0x8b6 <__fp_split3+0xe>
 8d2:	46 95       	lsr	r20
 8d4:	f1 df       	rcall	.-30     	; 0x8b8 <__fp_splitA>
 8d6:	08 c0       	rjmp	.+16     	; 0x8e8 <__fp_splitA+0x30>
 8d8:	16 16       	cp	r1, r22
 8da:	17 06       	cpc	r1, r23
 8dc:	18 06       	cpc	r1, r24
 8de:	99 1f       	adc	r25, r25
 8e0:	f1 cf       	rjmp	.-30     	; 0x8c4 <__fp_splitA+0xc>
 8e2:	86 95       	lsr	r24
 8e4:	71 05       	cpc	r23, r1
 8e6:	61 05       	cpc	r22, r1
 8e8:	08 94       	sec
 8ea:	08 95       	ret

000008ec <__fp_zero>:
 8ec:	e8 94       	clt

000008ee <__fp_szero>:
 8ee:	bb 27       	eor	r27, r27
 8f0:	66 27       	eor	r22, r22
 8f2:	77 27       	eor	r23, r23
 8f4:	cb 01       	movw	r24, r22
 8f6:	97 f9       	bld	r25, 7
 8f8:	08 95       	ret

000008fa <__mulsf3>:
 8fa:	0e 94 90 04 	call	0x920	; 0x920 <__mulsf3x>
 8fe:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_round>
 902:	0e 94 35 04 	call	0x86a	; 0x86a <__fp_pscA>
 906:	38 f0       	brcs	.+14     	; 0x916 <__mulsf3+0x1c>
 908:	0e 94 3c 04 	call	0x878	; 0x878 <__fp_pscB>
 90c:	20 f0       	brcs	.+8      	; 0x916 <__mulsf3+0x1c>
 90e:	95 23       	and	r25, r21
 910:	11 f0       	breq	.+4      	; 0x916 <__mulsf3+0x1c>
 912:	0c 94 2c 04 	jmp	0x858	; 0x858 <__fp_inf>
 916:	0c 94 32 04 	jmp	0x864	; 0x864 <__fp_nan>
 91a:	11 24       	eor	r1, r1
 91c:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>

00000920 <__mulsf3x>:
 920:	0e 94 54 04 	call	0x8a8	; 0x8a8 <__fp_split3>
 924:	70 f3       	brcs	.-36     	; 0x902 <__mulsf3+0x8>

00000926 <__mulsf3_pse>:
 926:	95 9f       	mul	r25, r21
 928:	c1 f3       	breq	.-16     	; 0x91a <__mulsf3+0x20>
 92a:	95 0f       	add	r25, r21
 92c:	50 e0       	ldi	r21, 0x00	; 0
 92e:	55 1f       	adc	r21, r21
 930:	62 9f       	mul	r22, r18
 932:	f0 01       	movw	r30, r0
 934:	72 9f       	mul	r23, r18
 936:	bb 27       	eor	r27, r27
 938:	f0 0d       	add	r31, r0
 93a:	b1 1d       	adc	r27, r1
 93c:	63 9f       	mul	r22, r19
 93e:	aa 27       	eor	r26, r26
 940:	f0 0d       	add	r31, r0
 942:	b1 1d       	adc	r27, r1
 944:	aa 1f       	adc	r26, r26
 946:	64 9f       	mul	r22, r20
 948:	66 27       	eor	r22, r22
 94a:	b0 0d       	add	r27, r0
 94c:	a1 1d       	adc	r26, r1
 94e:	66 1f       	adc	r22, r22
 950:	82 9f       	mul	r24, r18
 952:	22 27       	eor	r18, r18
 954:	b0 0d       	add	r27, r0
 956:	a1 1d       	adc	r26, r1
 958:	62 1f       	adc	r22, r18
 95a:	73 9f       	mul	r23, r19
 95c:	b0 0d       	add	r27, r0
 95e:	a1 1d       	adc	r26, r1
 960:	62 1f       	adc	r22, r18
 962:	83 9f       	mul	r24, r19
 964:	a0 0d       	add	r26, r0
 966:	61 1d       	adc	r22, r1
 968:	22 1f       	adc	r18, r18
 96a:	74 9f       	mul	r23, r20
 96c:	33 27       	eor	r19, r19
 96e:	a0 0d       	add	r26, r0
 970:	61 1d       	adc	r22, r1
 972:	23 1f       	adc	r18, r19
 974:	84 9f       	mul	r24, r20
 976:	60 0d       	add	r22, r0
 978:	21 1d       	adc	r18, r1
 97a:	82 2f       	mov	r24, r18
 97c:	76 2f       	mov	r23, r22
 97e:	6a 2f       	mov	r22, r26
 980:	11 24       	eor	r1, r1
 982:	9f 57       	subi	r25, 0x7F	; 127
 984:	50 40       	sbci	r21, 0x00	; 0
 986:	9a f0       	brmi	.+38     	; 0x9ae <__mulsf3_pse+0x88>
 988:	f1 f0       	breq	.+60     	; 0x9c6 <__mulsf3_pse+0xa0>
 98a:	88 23       	and	r24, r24
 98c:	4a f0       	brmi	.+18     	; 0x9a0 <__mulsf3_pse+0x7a>
 98e:	ee 0f       	add	r30, r30
 990:	ff 1f       	adc	r31, r31
 992:	bb 1f       	adc	r27, r27
 994:	66 1f       	adc	r22, r22
 996:	77 1f       	adc	r23, r23
 998:	88 1f       	adc	r24, r24
 99a:	91 50       	subi	r25, 0x01	; 1
 99c:	50 40       	sbci	r21, 0x00	; 0
 99e:	a9 f7       	brne	.-22     	; 0x98a <__mulsf3_pse+0x64>
 9a0:	9e 3f       	cpi	r25, 0xFE	; 254
 9a2:	51 05       	cpc	r21, r1
 9a4:	80 f0       	brcs	.+32     	; 0x9c6 <__mulsf3_pse+0xa0>
 9a6:	0c 94 2c 04 	jmp	0x858	; 0x858 <__fp_inf>
 9aa:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_szero>
 9ae:	5f 3f       	cpi	r21, 0xFF	; 255
 9b0:	e4 f3       	brlt	.-8      	; 0x9aa <__mulsf3_pse+0x84>
 9b2:	98 3e       	cpi	r25, 0xE8	; 232
 9b4:	d4 f3       	brlt	.-12     	; 0x9aa <__mulsf3_pse+0x84>
 9b6:	86 95       	lsr	r24
 9b8:	77 95       	ror	r23
 9ba:	67 95       	ror	r22
 9bc:	b7 95       	ror	r27
 9be:	f7 95       	ror	r31
 9c0:	e7 95       	ror	r30
 9c2:	9f 5f       	subi	r25, 0xFF	; 255
 9c4:	c1 f7       	brne	.-16     	; 0x9b6 <__mulsf3_pse+0x90>
 9c6:	fe 2b       	or	r31, r30
 9c8:	88 0f       	add	r24, r24
 9ca:	91 1d       	adc	r25, r1
 9cc:	96 95       	lsr	r25
 9ce:	87 95       	ror	r24
 9d0:	97 f9       	bld	r25, 7
 9d2:	08 95       	ret
 9d4:	19 f4       	brne	.+6      	; 0x9dc <__mulsf3_pse+0xb6>
 9d6:	16 f4       	brtc	.+4      	; 0x9dc <__mulsf3_pse+0xb6>
 9d8:	0c 94 32 04 	jmp	0x864	; 0x864 <__fp_nan>
 9dc:	0c 94 30 05 	jmp	0xa60	; 0xa60 <__fp_mpack>

000009e0 <sqrt>:
 9e0:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <__fp_splitA>
 9e4:	b8 f3       	brcs	.-18     	; 0x9d4 <__mulsf3_pse+0xae>
 9e6:	99 23       	and	r25, r25
 9e8:	c9 f3       	breq	.-14     	; 0x9dc <__mulsf3_pse+0xb6>
 9ea:	b6 f3       	brts	.-20     	; 0x9d8 <__mulsf3_pse+0xb2>
 9ec:	9f 57       	subi	r25, 0x7F	; 127
 9ee:	55 0b       	sbc	r21, r21
 9f0:	87 ff       	sbrs	r24, 7
 9f2:	0e 94 3e 05 	call	0xa7c	; 0xa7c <__fp_norm2>
 9f6:	00 24       	eor	r0, r0
 9f8:	a0 e6       	ldi	r26, 0x60	; 96
 9fa:	40 ea       	ldi	r20, 0xA0	; 160
 9fc:	90 01       	movw	r18, r0
 9fe:	80 58       	subi	r24, 0x80	; 128
 a00:	56 95       	lsr	r21
 a02:	97 95       	ror	r25
 a04:	28 f4       	brcc	.+10     	; 0xa10 <sqrt+0x30>
 a06:	80 5c       	subi	r24, 0xC0	; 192
 a08:	66 0f       	add	r22, r22
 a0a:	77 1f       	adc	r23, r23
 a0c:	88 1f       	adc	r24, r24
 a0e:	20 f0       	brcs	.+8      	; 0xa18 <sqrt+0x38>
 a10:	26 17       	cp	r18, r22
 a12:	37 07       	cpc	r19, r23
 a14:	48 07       	cpc	r20, r24
 a16:	30 f4       	brcc	.+12     	; 0xa24 <sqrt+0x44>
 a18:	62 1b       	sub	r22, r18
 a1a:	73 0b       	sbc	r23, r19
 a1c:	84 0b       	sbc	r24, r20
 a1e:	20 29       	or	r18, r0
 a20:	31 29       	or	r19, r1
 a22:	4a 2b       	or	r20, r26
 a24:	a6 95       	lsr	r26
 a26:	17 94       	ror	r1
 a28:	07 94       	ror	r0
 a2a:	20 25       	eor	r18, r0
 a2c:	31 25       	eor	r19, r1
 a2e:	4a 27       	eor	r20, r26
 a30:	58 f7       	brcc	.-42     	; 0xa08 <sqrt+0x28>
 a32:	66 0f       	add	r22, r22
 a34:	77 1f       	adc	r23, r23
 a36:	88 1f       	adc	r24, r24
 a38:	20 f0       	brcs	.+8      	; 0xa42 <sqrt+0x62>
 a3a:	26 17       	cp	r18, r22
 a3c:	37 07       	cpc	r19, r23
 a3e:	48 07       	cpc	r20, r24
 a40:	30 f4       	brcc	.+12     	; 0xa4e <sqrt+0x6e>
 a42:	62 0b       	sbc	r22, r18
 a44:	73 0b       	sbc	r23, r19
 a46:	84 0b       	sbc	r24, r20
 a48:	20 0d       	add	r18, r0
 a4a:	31 1d       	adc	r19, r1
 a4c:	41 1d       	adc	r20, r1
 a4e:	a0 95       	com	r26
 a50:	81 f7       	brne	.-32     	; 0xa32 <sqrt+0x52>
 a52:	b9 01       	movw	r22, r18
 a54:	84 2f       	mov	r24, r20
 a56:	91 58       	subi	r25, 0x81	; 129
 a58:	88 0f       	add	r24, r24
 a5a:	96 95       	lsr	r25
 a5c:	87 95       	ror	r24
 a5e:	08 95       	ret

00000a60 <__fp_mpack>:
 a60:	9f 3f       	cpi	r25, 0xFF	; 255
 a62:	31 f0       	breq	.+12     	; 0xa70 <__fp_mpack_finite+0xc>

00000a64 <__fp_mpack_finite>:
 a64:	91 50       	subi	r25, 0x01	; 1
 a66:	20 f4       	brcc	.+8      	; 0xa70 <__fp_mpack_finite+0xc>
 a68:	87 95       	ror	r24
 a6a:	77 95       	ror	r23
 a6c:	67 95       	ror	r22
 a6e:	b7 95       	ror	r27
 a70:	88 0f       	add	r24, r24
 a72:	91 1d       	adc	r25, r1
 a74:	96 95       	lsr	r25
 a76:	87 95       	ror	r24
 a78:	97 f9       	bld	r25, 7
 a7a:	08 95       	ret

00000a7c <__fp_norm2>:
 a7c:	91 50       	subi	r25, 0x01	; 1
 a7e:	50 40       	sbci	r21, 0x00	; 0
 a80:	66 0f       	add	r22, r22
 a82:	77 1f       	adc	r23, r23
 a84:	88 1f       	adc	r24, r24
 a86:	d2 f7       	brpl	.-12     	; 0xa7c <__fp_norm2>
 a88:	08 95       	ret

00000a8a <_exit>:
 a8a:	f8 94       	cli

00000a8c <__stop_program>:
 a8c:	ff cf       	rjmp	.-2      	; 0xa8c <__stop_program>
